%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1610.i123.009.P.m004.c23.360 degree virtual realiy icons-01.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: GTal
%%CreationDate: 10/15/2016
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 14572 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDF6FFA8FFA9FD7CFFAFFD05FFAFFD76FFAFAFA9FF
%A8FFA8FFFFFFA8FD78FFA9FFFFFFAFFFFFFFAFFD1DFFA984AFA8FD14FFA9
%7EFD0484FD3BFFA8FFA8AFA8AFAFAFFD1EFF840D0D0C35FD14FFAFA984A8
%84AFFD04FF84522E2E52FD15FF8484597D597D597D598484FD0FFFA8FFA9
%FF842E05062FFD20FF590D0C0D0CFD13FFA8AF7E7E59848484A8FF7D0527
%7D522705FD13FF597E272E527D527D522E275959FD0FFFA8FFA82E055306
%057DFFA8FFA8FD1BFF840D130D13FD13FF363535353635350D85FF2E2EFD
%04FF277DFD11FF845A84AFAFFD06FFAF845A84FD0DFFAFFFAFFF06350D35
%0C59FD1FFF2E2F0C2F05A8FD12FF2F352F352F350D0D7EFFF8A8FD04FF27
%7DFD11FF2E062F59847E8484847E84592F062FFD0EFFAFFF350D060C060C
%0684A8FFA8FD1BFF0C060C0C062EFD12FF35353635350D130D84FF05A8FF
%FFFFAF2F35FD10FFA806597D590C52939A932E06597E5905AFFD0CFFAFFF
%5A13050C060C050C06AFFD1BFF7D52060C060C050652FD11FF0C0D0C0D0C
%0D0C0D84FFF8A8FFFFFF5A2F352FFD0FFF0553FD04FFA8A884A8A8FD04FF
%5306FD0DFFAF3506060506050C050C35FD19FFA82705050C060C06060505
%057DFD0FFFAF843535352F8484FFFF05A8FFFFFF35BC7635FD0EFF592EFD
%0EFFA82E7DFD0DFF0D0C060C060D0C060659FD16FFA98453FD050506050C
%0506050505285984A8FD0DFF35352E35A8FFFFFFF8A8FFFFFF3552590CFD
%0DFFA8057DFD0FFF592EA8FD0CFF0C060C050C060C050C0CFD14FFA8350D
%0D0C13050D2F5A355A0C532E0D050D0D0D0C0C2FFD0DFF5952FD05FF0584
%FFFFFF35363535FD0DFF2E2EFD11FF2E59FD0CFF0C0D050C050C060C052E
%FD14FF0D0C060C0D0C0C0535355A352E282E06050C0D0C06060C59FD0CFF
%7D27FD05FFF8A8FFFFFF356F760CFD0CFF8405FD12FFA805A8FD0BFF0C06
%0C05060506060506FD13FFAF0D13050D0D130D0C05060506050605060C13
%0D0D050C0C2FFD0CFF5952FD05FF05A8FFFFFF357D5335FD0CFF2E7DFD13
%FF592EFD0BFF0C0D0D130D130D13052EFD13FF840D0C0D0C0D0C0D0C0D0C
%0D0C0D0C0D0C0D0C0D0C0D060C0CFD0CFF7D27FD05FFF8A8FFFFFF352F35
%0DFD0BFFA8067DFD13FF7D05A8FD0AFF0C0C0D0C0D0C0D0C060CFD13FFAF
%0D0D0C130D0D05130D0D0C130D0D0C130C0C0C130C0C062FFD0CFF592EFD
%05FF05A8FFFFFF352E0535FD0BFF764C76A8FFFFA935605A6059605A6059
%848484AFFFA86F4B6FFD0AFF060D0D0D93530D0D052FFD13FF840D0C0D0C
%0D0506060D0C0D060D0C0D0606060C0C0D060C06FD0CFF7D27FD05FFF8A8
%FFFFFF350C2E0CFD0AFFAF272E27A87E352F352F59595A596059847E847E
%847EA8202720FD0AFF0C0C0D0576280C0C0606FD13FFAF0D130D130C0C06
%0D0D0D0505050C0D0C050C0C130C0C062FFD0CFF5952FD05FF05A8FFFFFF
%5A350D84FD0AFFA80D0C0C0C350D350D6084848485FD04845A845A605905
%0005A8FD09FF0D35762E060D2E770659FD13FF840D0C0D0C0D0C060C0D05
%05350CF80C0C0C050D0C0D060C0CFD0CFF7D27FD05FFF8A8FD04FF2E59FD
%0BFF84060C060C060D0C0D0C5A7E847E848484596059590505F805F87DFD
%09FF0D2EBC2E0C0676930C2FFD13FFAF0C13060D0C130D0D0C060C602F05
%0C0D0C130D0D050C0C2FFD0CFFA8057DFFFFFF5227A8FD04FF5259FD0BFF
%590C060C0C0C060D0D2F0C352E2F2E352F592F2E0005F805000559FD09FF
%0D0D0C0C2E0C060D0C35FD13FF840D06060C0D0C0D0C0D05050606F80D0C
%0D0C0D0C06060C0CFD0DFF7D05F805F805A8FD05FF277DFD0BFF35060C06
%0C060C060CFD0A05F805F805F805F82EFD09FF5A0C0D06BC520D060C84FD
%14FF0C0D0C0D0C0D0C0D0C0D0505000C0C0D0C0D0C0C060D0C59FD0FFFA8
%A8A8FD07FF5259FD0BFFA8AFA8AF7E2F060D0C06050C0506050C05060005
%052853FD04A8FD09FFAF350D132F0D060D0CFD15FF59060C060C060C060C
%060C060C060C060C060C060C060CA8FD19FF277DFD11FF840C0C05050506
%0505050605050584FD10FF840C060C060C0CFD17FFAF2F5935352F593535
%2F5935352F5935352F59355AFD1BFF8484FD13FF597E597D597E597D597E
%7DFD14FF842F5A84FDFCFFFDFCFFFDFCFFFDFCFFFD4AFFA8592F59A8FD1E
%FFCFFD04FFCAFD3CFFAFFD1AFFAF0C0C0683CFFD1DFFC9C9FFFFCAC9FD37
%FF8484592FFD042E2F8484A8FD14FF7D0C060C52C9C9C9C2FD19FF7D2E2E
%FF842E2EAFFD15FFAF0C5A350D06FD19FFA9595A2E270005F80500050560
%353584FD11FFC9A7060C0C7DFD04C9C2CFFD17FF840C0CA8840C0C84FFFF
%FFC2FD0FFFA85A0C0D13350C060C59AFFD15FF84355A352E057D84A87D7E
%2E05355A350CA8FD0EFFA8C3C9C9270005A1C9C3C9C2C2C2FFA87D2E59FD
%0EFFCAC9CAFFCA767CFFCA767CFFFF842EA0CAFD0DFF840D0C3506050506
%0C0D060C84FD14FF5A6059605984A8FFA8FFA8843560595A0684FD0DFF7D
%05A1C9C9270505C9C9CAC97D2E2E0C0C060C0559FD0EFF7D53A8FFA0A0FF
%FF52C9FFFF350C06FD0DFF84130D130D130D350D130D130C0CA8FD13FF35
%355A595A355A595A355A595A355A0C0C52FD0DFF0005F852A1270505A1C9
%7C0C0606052E2E8484AF84FD0DFF840C06A8CAA176FFC952C3FFCFA1527D
%FD0CFF2E0C0D0D0C0D0C0D0C0D0C0D0C0D0506A8FD12FF355A2F5A595A59
%60595A5960352F062F0552FD0DFFA10505F82E060C052EA10C0505002E84
%84A8AFA884A8FD0DFF7D52CAFF7CA1FFCA52C9FFCF51C9FD0CFF842F0535
%0D0D0C130D0D0C130D0D0C060D35FD11FFA8352F35592F0C2F0C2F0C0C06
%2E592EF8052EFD0DFFC3C9F80505350C0C0506060C06055A847EA9A8A97E
%A8FD0EFF51C9CAA176FFC952C2FF7C76C3FD0CFF2F35060C0D0C0D0C2F0C
%0D0C0D0C0C000D3559FD11FFA884A8FF590C060D0C0C060C05FFFF7E59FD
%0EFFA7762705350C0C060C050C0C2F2784848584AFA8A984FD0EFFA176C9
%A0A1C9C952C9C952C2FD0DFF353605350D130D2E0C0C06350D130D0C0635
%2EFD15FFA8060C0C762E0C0505FD11FFA8F805F8060C0C060C0606060C06
%0553847EA9A8AF8484FD0EFFC952C9A17CC9A176C9C951C3FD0DFF0D0C2E
%0C0D0C2F0C36350C05130C0D0505062FFD15FF840C0C764B762E0605FD11
%FFA805F8050635FD040C052E062EF8052E7D59A984847DFD0EFF590C592F
%352F352F352E592EA8FD0CFF35350D0D0C130C135A842F0C0D130D0C050C
%84FD15FFAF062E6F524B520528FD12FF7D76512E062F060C05057627F805
%F805F805F80500A8FD0DFF840C0D0C0D2E2E0C5A3559350D0CFFFFFFCFFD
%08FF590C0D0C0D0C2F06350C0C050D0C0C060C0684FD16FF0D053593522E
%052EFD13FFC9CA7D0C0635060652C9C2C39AA09AA1A8A8A8FD0FFF5A0D0C
%130C535259355A355A2E2FFFFFC9C9C9FD07FF590D0D130D130D2E060D05
%2F0D130C0C060DFD17FF0605052E05060552FD13FFCAC9C97606052852C3
%C3C9C2C9C3C9FD13FFA80C0C062E0C0C062E0C0C062E7DC9C9C9C2FD08FF
%A8060D0C0D0C0D0C0D0D130C0D060C060C0CFD17FF350505050605057DFD
%14FFFD05C9C2FD08C9FD14FFCFC3C9C2C9C3FD04C9C3C2C9C9C9C3FD0AFF
%35060C0C0D0C130D0D0C0D0C0C050C0684FD17FF2E0C0505050CF87DFD14
%FFCAC9C3C9C9C9C3C9C9C9C3C9C9C9CAFD13FFCAC9C9C9C3C9C9C9C3C9C3
%C9C3C9C2FD0BFF84050005050C0C0D0C0C060C0505052EFD18FF84060D0C
%0C0605FD16FFCACAC9C9C9CAFD04C9C3C9C2FD15FFC9C9C9CAC9C9C9CAC9
%C9C9CAC2FD0DFF2E363506050C0C0C060C050C3535AFFD18FF590C060C06
%06F8FD16FFCFC9C9C9C3C2C3C2C2C2C9C9FD16FFCAFD0AC9C2CAFD0EFF0C
%360C05050C060C05060D357DFD19FFA80C0C060C0605FD16FFCAC9C9C9C3
%C3C2C9C2C9FD18FFCAFD09C9C2CAFD10FF7D0C050C060C0C0C052FFD1BFF
%840C060C060505FD16FFC9C9C9C3C9FD04C2CAFD19FFC3C9C9C9C3C9C3C3
%C2CFFD14FF840505067DFD1EFF0C0C060C0552FD16FFC9C9C9CAC3C3C2C9
%C3FD19FFCFC9C2C9C2C9C2C3C2FD15FF2E060005050500A8FD1CFF840505
%F827A8FD15FFCAC9C9C9C3C3C2C2C2CAFD19FFCAC2C3C2C2C2C3C2C3FD15
%FF2E050605060506A8FD1EFF7DA8FD18FFCFFFCFFFCACFCACFCFFD19FFCF
%CFCACFCACFCACFCAFD17FFA8A984FDFCFFFDFCFFFDFCFFFD28FFA87DFFFF
%FFA8FD7AFF7E05A8FF8405A8FD79FF590559FF2E0559FFFFFF84FD11FF7D
%7D527D527D527D527DA8FD11FFA8AFA8FFC3CAFFCAC3FFC3CAFFFFA8FD36
%FFA8FFFF7E057EFF2E05FFFFFF5905FD10FFA8FD04050C060C00050527FD
%0FFFAF353635AFFFC3B5CAB5C3C3BCB5FFAF605AA9FD33FFA8057DFF5905
%53FF0505FFFFA80505FD10FFA8F82E272E052E282E272EF8FD0EFF840C0D
%2F35A8FFC3B5C3BCBCC3BCB5FFAF595A5960AFFD32FF052EFF590552A806
%05FFFF2F0059FD10FFA805A8AFA8AFA8AFA8AFA805FD0EFF59130D3535AF
%CABCB5CAB5BCC3BCBCFFA8605A6059AFFD10FF8452277DFFFF525252A8FD
%18FF2E00FF2E0527840505FFA80505FD11FFA8F8A9A8AFA8A9A88484A9F8
%FD0EFF84590D2F35A8FFCAFFFFFFCAFFCAFFFFAF595A5984A8FD0FFF2E05
%277D59FFFF7D5227F852A8FD16FF7D0659530552590605FF2E0527FD11FF
%A805A8AFA9AFA8AF84AFA805FD0EFF84AFA88459AFFD0AFFA88484AFA8FD
%0EFFAF27057DFD08FF84002EA8FD15FFA805282805052806055206F884FD
%11FFA8F8AFA8AF8484A8845AAFF8FD0EFF84A8AFA8AFA8AFA8AFA8FFA8FF
%A8AFA8AFA8AFA8AFA8FD0CFFA805057DFD0AFF7DF82784FD15FF06050693
%06058505280527FD12FF8405A8AFA8849ABC9A84A805FD0EFF84AFA8AFA8
%AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFA8AFFD0BFF7DF827A8FD0CFF840505
%59FD14FF055A053505052E054B4B27FD0FFFA8A95984F8A984A993BCA1BC
%9384F8FFA8FF5AAFFD09FF84A8A9A8AFA8A9A8AFA8A9A8AFA8A9A8AFA8A9
%A8AFA8FD09FFA852F805A8FD0EFFA8F8052EFD13FF062E352E592E2F2E59
%0552FFFFFFA9FD0AFFAFA9846059058484A8BCA127A1BC7D058460FF8484
%FD09FF84AFA8AFA9AFA8FFA9AFA8AFA9AFA1C3A9AFA8AFA9FD09FF840D0C
%0D0C130D0D0C130D0D0C130D0D0C130D0D0C0D0C0D0CFD12FF2E05052F59
%592F0C050528FFA82E05057DFD08FFA959845959F8845AA993A84BA1B57E
%F85A59FF5A84FD09FF84A8AFA8AFFD05FFAFA8847DBCB5FFA8AFA8AFA8FD
%09FF2F59595935595959355A7E84FD045935595959355A7E59A8FD11FF53
%052EA8CAA8A88406052E2E06050559FD09FF84845A60590559605A9AB5CA
%B5BC59055A605A8484FD09FF7EAFA8AFFFFFA8FD04FF7E7EFFA8FFFFFFA9
%AFA8FD0AFFA859FD0784A8AFA8FD0984A8AFAFFD12FF2E052EC3B5B5B5A9
%0505000505057DFD0AFF8459845959F85A595A7DB5B5B5765AF85A595A59
%84FD09FF84A8AFA8AFA884A884A87DF805000627FFA8AFA8A9A8FD08FFA8
%FD07052F7DA9A8AF84847E847E847E8484A9A8FD13FF7D052FA1BCB5BCA8
%0C0506050559FD0BFF84605A60590559605A849ABCB56059055A60598484
%FD09FF84AFA9AFA82E2759052E05050005050605AFA9AFA8FD09FFA82837
%5B5B5A05BC052EA8AFFFFF598584848485A8AFA8AFAFFD12FF84062EC3B5
%B5B5AF050605052EFD0CFF8459845959F85A5960597DB57D595AF860595A
%5984FD09FF84A8AFA82EF80505050005F8050006050505AFA8AFA8FD08FF
%A8050505060505000584AF84FFFF5A7EFD0484AFA8AFA8FD14FF062EA8CA
%A1CA5906050527FD0DFFFD048459055A605A5A2E760C5A5A057EFD0484FD
%09FF84AFA8530005F8050505F80500050506050605AFA8AFFD08FFA8532E
%592E59597D84AFA8AFFFFF5AFD0484AFA8AFA8AFAFFD13FF5905052E5AFD
%0505FD12FFA8F8AFA8A9A8AFA8A9A8AFF8FD0EFFAFA852F805F805F805F8
%05F8FD0805AFA8FD0AFF5A7E847EAFA8A9A8AFA8FFFFA85A8484AFA8A9A8
%AFA8FD14FF590605062E05050527FD13FFA805282E272E2E2E272E2805FD
%0FFFA8000505050005050500050506050C0506050C53FD0BFF848484AFA9
%AFA8AFA8FD04FF6084AFA9AFA8AFA9AFFD14FF2EF805F82EF805F8FD14FF
%AFF805F805000DF805F80505FD10FFA8522EF805F805F805F8FD04050605
%5284FD0DFF5A84A8AFA8AF84FD05FFAF84A8AFA8AFA8AFFD15FF522E2E52
%2E2E2E59FD15FFA8597D597D597D597D59AFFD14FFA8A87D7D59592E7D7D
%A8FD12FFAF8484AFAFFD09FF84A984FDFCFFFDFCFFFDFCFFFDFCFFFDA7FF
%A95AFD0DFFCAC3C3C3FD45FFA8A984AF84A984AF84A984AF84A984AF84A9
%84AF84FD12FFA8840CA9A8FD0BFFC3C3BCB5CAFD11FF84A884FD30FFAF84
%847E8484847E8484847E848484595A84845A60FD12FF842F1335AFFD04FF
%CACACACFFD04FFBCBCBCCAFD0CFFA87D2E0C052E062E052E2E7DA8FD0CFF
%C9A0C9CAFD0FFFCACAC3C9CAFD07FFA8AFFD0D84350D60846059FD13FFA8
%0CFFFFFFC3FD07C2C3CAB5BCCABCCAFD0AFFA806060506FF06057D0506FF
%06050628AFFD0AFFA17599C2A0C2A0C9A7CFCFFFFFFFCACAA0C3A0C299C2
%C2CFFD07FFA9A8AF84847E847E847E847E847E842F0D3560595AFD16FFCF
%C2C9A07C517651A0C2C9C2C3FFFFCAFD09FFAF2F062EA82E062E052E0528
%052E062EA82E0659AFFD08FFC94B7699C299C299C2C2C3C2C9C2C299C299
%C299C2C9C9CAFD07FFA8AFA9AF8485FD048459848485848459845A6059FD
%15FFCAC276F805F8270527F80527A0C2FD0CFF2E2E2EFD06050005050500
%05050605532E2EFD08FFA14B4A756F756F756F756F756F756F756F756F75
%75C9C2CFFD07FFAFA8AFA8AF7E848459050605597E8484605960595AFD14
%FFCFA051052E0C0D0C0D0C0D2E28F852C3FD0BFF5A2E052705050527052E
%0527050505270505052F35FD08FFC94A7575997599759975997599759975
%99759975A0C9C9CAFD07FFA8AFA8AFA8AFA852000C0C0D0052A8855A6059
%605AFD14FF9A052E840D0D0C0505840C0D7E7D0527A1FD0AFF845A590505
%000500057D7DFD04050005052F2F35FD08FFA14B4A756F756F756F756F75
%6F756F75759975A0A0C9A0CFFD07FFAFA8A9A8AFA8A80005060D06050584
%845A595A595AFD13FFA1277DAFA9130D2F272752130D84A8AF5252FD0AFF
%84848485590500050584A8AF592705273560595A35FD08FFC94B75759975
%9A4B7575A099C2A0C9767CC2C9C2C9C9C9CAFD07FFA9AFA8AFA9FF0D130C
%524B520C1306A85A6059605AFD12FFCA52A1AFA8AF0D0D0C28F80C0C0D84
%AFA8AF52A7FD09FF8484847E59F805F8057DAF7D2E05050059595A2F35FD
%08FFA14B4A756F75000D0576A0C2C2C2270C0605A0C2C3C9C2FD08FFAFA8
%AFA8AFA80D0C0D0C0C0C0D0C065960595A5960FD12FFCAA1CAA8AFA8600D
%0D0C0C0D0D2FAFA8AFA7C9FD0AFFFD048459050005F8842E05F80505052F
%605A5A35FD08FFC94B4B759927355A3505C2C2C8C20C35600C7CC2C9C9C9
%CAFD07FFA8AFA8AFA8FF0D0C0C130C0D0C0C065A59605A6059FD13FFCFC2
%C9A7A984350C0D0C0D0C84A8CAC9C9CAFD0AFF847E847E59F805F805F805
%F805F8050559595A3535FD08FFA14B4A756F270D5A0C27A07575C2053635
%0C75C2A0C9C2CFFD07FFA9A8AFA8A9A8350C0C06840C0C0606595A595A59
%5AFD15FFC9C9C9CAC9A87DA8A7CAC9CAC3C9FD0CFF8485848459FD040506
%27060506050535605A5A35FD08FFC94B757599A0270627A0A04B75997605
%0C27C2C2C9C9C9CAFD07FFA8AFA9AFA8FF84522E592E532E5984AF59605A
%6059FD16FFC3C2C2C9C3C9C2C9C2C2C3CFFD0DFF847E8484590506A82E05
%FF052E8406055959603535FD08FFA14B4A756FC2C2C2A0C24B4B4B75C2C2
%A0FD04C2C9C2CFFD07FFAFA8AFA8AFA8FFCAC9C9CAC9C9CAFF845A596059
%5AFD12FFC3BCFFC3BCC3FFCAFFCACACAFFFFFF84AFA8AF84FD09FFFD0584
%2E052E052E2E2E052E052E8460595A35FD08FFC94A75759AC2C8C2C29975
%4B9975FD04C2C8C2C9C9C9CAFD07FFA8AF84AFA8FFFFFFC9C9C9CAC9FFFF
%AF5A6059605AFD12FFC3BCBCB5C3FD09FF84845A845A84A8FD08FF847E84
%7E7E52A8FD07FFA82E59595A2F35FD08FFA14B4A7599C2A0C2A0754A756F
%7575C2A0C2A0C2C2C9A0CFFD07FFAF7E357EAFA8A984C3C3C9A0C284A984
%84595A595AFD12FFC3B5BCCAFD0AFFAF5A8460845AFD09FF8484848584FD
%0BFF8460595A35FD08FFC94B7575C2C2C9C2C275CAFFCA7C9AC2C2C2C9C2
%C9C9C9CAFD07FFA9600D84AFFF84FFC2C2C2C9C2CF84FFAF8459605AFD12
%FFBCB5B5B5BCFD09FF848459FD0CFF8484847EA9FFFFB5BCCAB5BCC3B5C3
%FF84595A2F35FD08FFA77CA8FD13FFC9FD08FFAFA85AA8AFA8BCB5C2C2C3
%C2C3BBBD7EAFA8845960FD2FFFFD0584FFFFC3B5C3B5CABCC3BCFF7E605A
%3559FD27FFA8FFAFFFA8BCB5B6B5BCBBBCB5BCB5BCA8FFAFAF59FD30FF84
%847EA8FFCABCB5C3BCBCBCB5C3FF84595A59FD28FFAFA8FFA8C3FD0BB5BC
%A8FFA8AFFD33FFA8FFFFCACAFFC3FFCACAFFFFA8AFFD2EFFC3CAC3C3C3CA
%C3C3C3CAC3C3C3FDFCFFFDFCFFFDFCFFFD97FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Macrovector flat</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-10-15T08:10:57+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-10-15T08:10:57+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-10-15T08:10:57+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>80</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAUAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9N65rml6Hpc+qapP9XsL&#xA;fj603F3483CL8KBmNWYDYZKEDI0ObXlyxxxMpGgETaXUF3aw3du/O3uEWWF6EckcBlNDQ7g98BFG&#xA;mcZCQBHIofVtZsNKtvrF5JwQmgAoWPyHemGMSeTGeQRG6VXX5heTLS6s7W51WGO4vgjQLUsAJJDC&#xA;nqOgZI+UoKDmRVgR1xMSFjkiRYLIsizSzU/MmjabOsF3OyzMvIRxxSzNx8SIlen04REsTMA0iNM1&#xA;aw1OAz2UvqxqxRqqyMGHUFXCsPuxIpYyB5LNa1my0iwlvr2VYbWFeUsrVoo6DpuSTsAMMY2UTmIi&#xA;y3pGrWeq2cd5ZyrNbyjlHKhqrD2xlGlhMSFhG5Fm7FXin/OXP/kq4f8AtqW//JuXJ4+bTn+l8saF&#xA;5EudZ0hdSh1jSrVWuo7M2t5dCC4DSOieoUZdo19QMWr0rSpBGWkuMI2v1H8utWsLU3MmoaVLGsUk&#xA;zLDf27vxjUtQIG5Fm/ZAHUgY2kxYrhYLk+0PmMVTrTNO0a5txJfap9TnLkGExyGkdBSQFVYE9fh2&#xA;7b77GmPFzQE0KLK8cTtIisRHJQqWWuxIoafLGkg7WiU01BarPJKSfUoYVajFR1o5BAP0ZZ4Xptx/&#xA;zI4+Gtu9XW006fUJ2gjmiszzeKKRuTKtaAFgBv8A57444gndc+SUYCuZS2VERiYw5UMFq55dfkBv&#xA;lZ8m+JPI83tf/OHn/kztU/7Ys/8A1F2uV5OTk4ObxbUU5aleGvSeSgAqT8RybSUTJ5a1VNOi1Awl&#xA;raZS6FeLNRetVDVGwr8t8lwGraxljdXugFtZWjMipIUHUhDTIs1SfTbqC3t7maKRIboMbdyuzhDx&#xA;am/Y4aQCEO8fEVqa9wRQjAl9RohZqD6SegHicznTAK81tFFCZXlKRqKtNIhSGh6HmfH3AwWzMUoX&#xA;X9BMvpNfxhq8fhqwr/rD4PvbCN+TAkA0dkz4RsPgerdgwpX5bkYppYQQSCKEbEHFDFPPn5r+ZfOT&#xA;fUNSmFnpQBcabZ0RHPP908skiyMxXwFBXemMNLGB2O6cvaU8sakPT5f2p3+Uf5u+bNJ1HRvKryx6&#xA;jpE97b2CLcAma3imYIqxSoI+QXlX4wfAZTl0seEyvdytN2jIzEAPQeV8+b3L81dA07VPKV1Pdlkk&#xA;09TPbyq7IENQGqAQCCu2+YeHKYHZ2uq00csal0YR5m0qz8u6b5v07SI2Szs7LRkKKWlcBri5d6k8&#xA;mqWfl7V8MnGRnKzzLCUY4cdD6RXn194+96lFqcmneU01TV+Qks7AXWoVADhooectRsK7HbKpD1UO&#xA;9yMciIAy51u840LX/wAvNStRe34bV9f1QC+1SS1DcoS6qEt/UVo/3cKARqte3I7scvOKdd0XEjqs&#xA;UZd8+tb/AGo4eafJvl/zNo0umEWf+ILiPSL/AE8gB2lbmbSc7mrrIfTbckq+/wBhRleQSrduwSgT&#xA;6Nu8cv7fvQX/ADk1HPL5BtIYZDGJtSiSYgkKY1gnkPOn7NUByelIBN9zV2hCUoxERZ4v0Ek+4Dc9&#xA;wFrP+cYUuI/ImowzMzCHVZUhqTQRm3t5Bxr2JkJx1RBlsvZ8DGBEhRv9A+/n583r+YznuxV4p/zl&#xA;z/5KuH/tqW//ACblyePm05/peGfll5S0DU/Kxu73TRd3jXLxxyNDdOnBShCs8SmOp+IeP00yZLTC&#xA;IpML7RPJGmTxLqmnWmltdL6lst7DexB+LcPUX1FFYzwbt1pXuMd0kBJdXHkRrdBo50ESsSJluhfC&#xA;gX7PpsviS1S3X4cO6DTzBTVwT45JqZnpXmKCwtTcS+XLK8ilJ4y3kJdSVIHGNgVWu+4plxnGuTij&#xA;FkveV/Z9yGguba81lppbeK35ciLe3jCxK9RshYltt69vwyWAxMt2GsExj9JTckmCOExxfuyW4CMA&#xA;VLcieYj5MPAF9vCmZdC/xTq+OXDXT3Di+aTW8IutfSxtjHG1wQryOacAKlixHtTMaR9dDq7HHH90&#xA;DLo3r3lzUtMuTpkM3roQkiBVZBKAtS0dSwcfI1rlMoEOTDMD5D7Lel/84ef+TO1T/tiz/wDUXa5R&#xA;k5Odg5vGruJ5NTveI3E77/7JssAJcecgOaaafqGoRwxWNkzRNKWD0oCfhq/v+ztXvlsLJoONlIET&#xA;KVUDY+zr+BzRn6GmTTpIzNCzNJUpSQmi0HIycOA3/wAqvtmR4RA4acH8xGUuO9wOXX4IAWbRaikV&#xA;zRjFVom7bVqN/feuUjHwzALlHUceEkJZqlwrzSKqKgVyCQoqfcnrleSVlvwQqI3fUFkY+L8qbNGz&#xA;13HphviFPnxOZJcCKV+fPLF3pvl6380DUknNpC15Jpl/HF9XkJAPphkCEmjEKH5VNBXMbIeOJidh&#xA;5bOwww8OcZiifMWGKa9+Y8usaxolzcaVbtLoSXC6hZBiLa6JHwRqrLIVRFWu/UkjplOLQSxxnGMq&#xA;EmeftSGWeOc4AyinH5eatc6voJknkhdVuDFHFDzKW6SKskcIMlW/dcuH0dT1zKwk8O7iamIEtuRZ&#xA;HLFMYI7hlbg1U5kGhK+/4fRltuMQatmj/wDONPkYytJFqOrQVcyIsU8A4GvIcGMBcUPT4q5ifnZ1&#xA;WztB2RiBvf8AHwRWhf8AOO/kfR9ZsNVhutRuJtNlSe2hnlh9LnEQyFhHDG3wsoP2sjLVykK2Z4+z&#xA;McJcQu+b0q9srS+s57K8hS4tLlGiuIJAGR43HFlYHqCDmM7FJ4PI/lq10m+0uwtBZW+o0N28J/eu&#xA;VVUUl35k8VQAV6DDbHhCb39hZ6hZT2N7Es9pcoY54X+y6MKFT88QaNhMogijyea6x/zjp5Av7z6z&#xA;ZzahotftQ6bcLHGSe9JUmI+QIGXfmZ1Thns/FdjZFeW/yA/LrRbxNQlgudZ1OKRJbe+1OczSxGNg&#xA;yemEEUa8WFR8NcrlkJb8eCMRsyzzh5Q0jzZo50rVPUWESLNHLCVWRJEBAZSyuvRiN1OxxhkMTsnN&#xA;hGQAHobW+TPJmjeUdG/RWleo0LStPNNOweSSVwAWYqFX7KqtFUCgxyZDI2Vw4RjFBPcg2uxV4p/z&#xA;lz/5KuH/ALalv/yblyePm05/pfM3lryx5Wv9Ot31DVI7SSaOWSYyX0ECrLHJwiiMJimlqyHlzIpl&#xA;hLjgBOn/AC//AC7CMy+ZbVmDMFQahGCQFBVt7WlGJp47fLGyy4R3sF1+wsLOW1Fm399B6k8X1mG7&#xA;9OT1ZE4+rAFTdEVqUrvhDAhLE+2vzGFi9Gn1my1YLa6UIY4pU53C+iBLyjqI42fjzZUULQAkBunQ&#xA;ZdjhEg24ufJMTAj1Y3HompT6t9Us4fWuLJgBKr8Fj+IsC4IDbE12yHASaG7fLKIfVtvXyfUw165P&#xA;lM2J1aH9IfUzD+lPUVXM3pcPW4ivFufxex7ZzYw5eOuCXPlRexOfTnFfix+nnY51zfKEuj6hZaql&#xA;pfQtG7nkrMQVYKalgRs2dLHGeIAvFT1EeAyibTuTzxqenrFb2/2FULLG59RQ5B5FOQPHJ+JKPPdr&#xA;lhx5ADAGArvuz1P7Hon/ADiFK035qavK1A0mj3LsBsKteWx2GYuQux04o15PHRcXEOsXggQvJJcO&#xA;qqoqSSzCgBDVrXwywcqLTuJcQNEX581VjqFm8N9cW0kSpI8bMVZd2U7VPf4jk4zIlxNM8IlDg6Pc&#xA;NC/J/TNY0G21mHX/AErS7hWYxSWacl5KTxP707/Ea8TRtjv8JzDn2zwyIMeXn+xzsXszxxBGQ+rf&#xA;6f8Ajzxdrs3mpzfUkadATFAWorNzfZjQkL8Iqd6DffvmacxJsuujpIxjwg9UBrujatp7h7+2Nv8A&#xA;WG5J8SuDtU/EpI75WTZtyIxoAPafNnmLUdKu7OO2ibg7xyesgLcgGYSxMKH9mhH0+GZcjTrMUOLk&#xA;qeQbPyrr7OvmHSopba3gt42ncSKzXrIHn+HkI0VeYFFUCtfbNdrceQwvHzB6fa7ns3NjjlrNVEbW&#xA;PdXu2vyZ5P8AlF5D1DUI7u3imtEhRUls7YrHDKq7UccS3xL8J4sCRmmwdp5YxMQbvveg1fYuGchO&#xA;Uar+bsCwq/j01/Mtxp0djDFY3VyLqGyiQLBQ24iHJAFXb0HY1FK750uHDwQESbrm8Zn1AnklKqvl&#xA;XTcfov4rPLk9xKsEbXs88aWNpcMjvyX1J1kDCh8CpPXqTl0ZWOTjTgQeZqzt0ZP5988eb9H1WUa/&#xA;qmr6RdfVhdW1rpz2ggjQu6h5B6U/qbx04lhsD41zF4Me1EOzE9QbuJNC9ug+D1/8t7rzncaNdHzZ&#xA;byW96l262nq+jze19ONkY+jt9suPiAbbfxzHy8N+nk5um8Th9fN51/zkd+YF/pix+T7VYyus2TTv&#xA;KHkSeJo5gVc/BwaP92QVDcvo6uGEpTFdGOsyxhjN9UB5E/OTXNWu4NI0y5srCztrOBQ2rlri4kdV&#xA;KMURJbeoDR0Lc+4NN6BhpjEkzldoOuEwBCPCB1PM7PdtKvDe6XZ3hABuYI5iF+zWRA23tvkCN3Ki&#xA;bFvM/Mnm6RdcuYLvVv0fPazfVTBbTL6ZgW8tpVlYOP7wwSMr/JhTY5RMzvaJI9xZxOP+KYib5cQ/&#xA;SzvybqWoapoMWp3ssMhvXkmtxbiipAzH0o2PJquq/bNeuWi+tj3sduhB8x+Pg8X/ADT/ADb81TeY&#xA;rzy9oTS6fa2UjwSNFVLqZ4d3cOPiRAVPHgdwN+vEbTT6aPDxSec1/aGTxDCGwHzZJ+Rf5q6t5ouL&#xA;3Qdbf61qFpCLq3v1RV5wclQrJwCryDOOJUbitem9GqwCG8eTndm6yeUET5h6/mG7V2KsU/Mrydof&#xA;m3y8ml61G8tmtwk4SN2jPNFYD4l3/aOThzasvJ5PJ/zj9+UEchjkhkSRRyZGvHBAqBUgt4sPvGWu&#xA;Nsug/wCcevyjuAxgt5ZQp4sUu5GoR2NGxXZU/wChcfys/wCWG4/6SZf64rTY/wCccvytBr9SuNv+&#xA;XmX+uK0p2v5A/lPcr61rDNKqMyc4ruQgMp4sKq3UHDuGI4ZDvCI0/wDLv8uNLlnsbaO5ScEPNG8z&#xA;O/QUqWLGnhk4ZiCQDuwzaH0DJKMhA7A9Ed/g3yV/Jc/8HlnizcX8th7ilmq/l/8AljqUJ+uR3Ei2&#xA;jndZSrI5XdaqQdww2wSMyyhDFC6U5PyA/KmKdUktbgPJT4mupKVNadW/ycp3Ll7DZmf5Y/lP5M8o&#xA;a/canolvLDdzWr20jSTPIDG0kbkUY0+1GMrnyb8I3fGVrbNNrd48dyLWaK5LRSbgg82+IFdwVzIx&#xA;QMjs4OoyCA3ZXqVhpkVrHcan5sj1iPmvDTEEg5EEcmf3413P39slwgc92s5DOq9NDmz+x/NTR7Kz&#xA;htYLjT1SBFjio1AFQcVFAwGwHbMGfZGCUieI7+Ydni9otXCAjwRNCuR/W8/vLTy2L9tT0i7SJ1Ej&#xA;MkDr6aOwJ5KKih7UBzZiEBy3dKcmaYNkRPPuJ5nb5V8WMeY/Mi6paW8HEtLDtLctUNIFZ2SoqQSP&#xA;VYlu9egoS2NMgnZzcMSIgHm9q12X6vqGm3RguLhAZYClvD9YCGXjSSSM0UqvCnxdK1y3URlKNRNF&#xA;q7MzYceYSzQ8TGOcbq9vwWK6dFr0V9darHa3kaXVxNNYadIsqpAjsVBljWnJuACqlaAfRluGBrcu&#xA;JrMw4jwR/YO60zbW/wAwGbl9a1FCdv3QkiFB7RhRhjodMP4YtWXtXWzABnOh3bICfUPMkN/Y3lxY&#xA;Xl9LbO/FvRkY8HXi4ZgK7g1BNcnm4YjYfJhpOOZIka8yzDRLmO6sjcpYyae0rs0kE0YikLd3Zffx&#xA;OQDbMUedsv8A+chPy28zeavMegzaLaSXKXETWF26NxSNA5l5Tk/CE4sxFe4oBUiuDilERN8+ju9R&#xA;DIZjgOxFH4G3uuY7mpB508vabrmki0vrIX0fMMIyCaFd+QpuOnbMbU8QAlC+IdzkaeMJExnXCe9K&#xA;vK/knSRFHLd6RaxR2y/V7a2kt0JWNQKULgkDc9so0eKdmcrv8buXr8mMAY4bgfimZqqqoVQFVRQA&#xA;bAAZsHWPOvMf5eeXZNfuNRj0iaS7uj6s1xbtOlZG2beN1FT3zD1GpzxlUbr3OXptDppRJlwgk77k&#xA;X9rLvLHly00PT47aBAnEEBQzMFDMXIBbc1YlmPc5dihL6pm5lqyTjQhAcMBy/W8X/Pf8pdVa9k8z&#xA;+WrabUZL+UC/0mCL1XDlP76NQPssUq9T9o96/DtdPqaHCXn9d2dxT448z+OjLvyI/LZ/LOhnWdSS&#xA;ZNe1eNTc286qrW8asSsQA3q2zNX2HbenUZuM10cvQ6QYhfUvUsxnPdiqX65/vEP9cfqOThza8vJ5&#xA;B55j0CTXguoeX/0jO0CxfWv9NH7tyy8CbeCVP2z1atD7ZkRcCdXyQGn6po+jXH6T03y56Ugi9JJF&#xA;a/NY5Ssj1RrQ0+LvTxxq0AgbgMgtfPl5dXkdrDpLl5H4Cv1teO4FXraBVFHBJLUHfBwsxPyZhkWx&#xA;5H5x0TzvLNC+hXQMTTO9xpmnTRWscKuwaNvUYBneRSWZjsenEDfMUTwzJ8U+rzsivKnMy4dVhAGC&#xA;PoN8qBJ8+KuvNkNlps2j6Hd3+tX63ctrAk0t0yqLioT95AxXisgDKoiagJ6GvU3aaA4jwA0eVtOt&#xA;1EzjjHJMenmAdh8tr3P6d3k8X5yeZhqKTy6dA1m8npvpaOv1hItz6vqlqM1B04gH8cz/AAzy/i7v&#xA;2ul8eP1X6O/z/q82dy2Ynmml8t2a30VzwupHtqKXR1B9WhAZqc/s0ruffJCW3qLXLHueAW9BuJdd&#xA;cTJNpKSW3GSlXDFwC3AcAD9oBflXNbjnPi3FDvt6XUYNOMRMZmU6Hp4fIXv77+TIfKYYcQ0JgYQk&#xA;GFm5lfiG3Lvk8ri6f5Pz01Q01O7I/wB/yf8AEzk2kqmkfop9RhXWZJ006reu1sFaYDiePAP8P2qV&#xA;r2xKgBkkll+UrRTmLU9ZjlWSQW6va27q0ZdvSLESJ8QTjz960yO7L0sd12LQ4tTlj0S5nu9NAX0p&#xA;7qJYJWJUFuUaPKBRqj7WEMTXRL8KH1Lmc6ZG6eujlX/SDTqwK+mIQpBG/KvL6KZGV9GcOH+K0U0P&#xA;lbYLc3ZqhJPpps9RQU5bile+C5eTOsfeVHUItCWAHT5p5Jg9CJlVQUofiHHp22qcMTLqiYhXpJS7&#xA;JNTNB/zkPov6eEDIkejcDcPcSVE6RJpzXckTIGI9dJwsZUeNOu+a3wjT0P5kX5fseraVeS32l2d7&#xA;LbvaS3UEc0lrJ9uJpEDGNv8AKUmhyouQDsxXzf571/R9bXStF8tSa6620d1dSreQWixCaSSONaTb&#xA;sWMDdOmTjC2vJl4eQtN/JfmS58xaDHqV1p7aXdGSWGexeVJzG0TlP7yP4WrSu2RkKLOEuIWu1fzQ&#xA;NP1i10pbC4uJruGaaOdF/cgwoziMuKnm/CgFMlwegy7kRyDxo4ztxdegUZPNk8EBnutIu4U9RI1W&#xA;is7cy4JVQewjr9IyvDczyr3uTrscMABEhks/w9OX4+DIEZXRXX7LAEfI4WkJOvm/QZJ76G3mlu30&#xA;0lb02tvcXKo4KhoucMcitIvMco1JYdxscNI4gj9L1XTtWsYr/TrhLqzmBMc0ZqDQ0IPcFSKEHcHY&#xA;4FBtFYpdiqX65/vEP9cfqOThza8vJ5d5ntvKc+qSTam8qTR+jbSMPSSMt/fRoHkFeRG/wmtMvFuF&#xA;IC90ntofy0hmhYXAlaMiRY5HtGVhy7r3BK0+/DuxHCzbSLTQ/UlmsdOis7iFjFKRAkUgLKrkVUdC&#xA;rKciWwAJrgZMC0b8xvIlrq8fl/TfXAuLgxRz0eSEzNRaAuzSAM1ACF499hvkoaTgjtyY6ntk6nL+&#xA;8Ny5XQA+yk71XT/LuuaTq+nQTRI81YbueIBnSU0kUtShajUNK0OTjKUSC40sWKYkBW/Onmf/ACo6&#xA;3Nv6Z8xRqeZHqC0cv4cKfWaUH+rmLHtiRnwcO91z/Y5kvZqAx8fEari+ny97I49TtvIEN7JY2dxq&#xA;YsLJINPtFBaWdx6YXkVA22JYgdK0HbMyYMouDhIhkPdTCYfz5/Ne48w2fq+Vm+rwcPU01YLuOaap&#xA;IarIV+Ig7fuyAQPh6g0jGD1cv8xOPS725fii+i/Kd4b5Y70wS2xuYBKba4XhLHzKtwkXejLWhGVz&#xA;5N+E2UBeXccEsaMGL3Ehji4ozDlxLfEVB4ii9TkwLaJSo+9K7nzD9WmEM8aRyseKKz0LH/JqN8J4&#xA;RVnmmEckgTGJIjzoHb39ypLrXBI2VUkMi8mVWNVNSKGqjfbJCDUcqXT+eNPt9Qh0+YxpdzqWjjMg&#xA;B2IAG/dq/D47+GSGEkW1HVREhE8ym2j6supRzSIvFYn4Ag1rsDX8chKNN2LJxvkOxsnu5DGlS9Kq&#xA;iqWZtxUKB3C1P0ZnZcnALLpsGA5CQO6/f7vhujtV0C6030jcW8sZlAMat8YcMWZWV4wU+xx2JqTW&#xA;m3SjTasZeX45fpcrW9nywUT+Nz+gD5rbLT4JQTOAgodlPJq9AKcsyrcGksn4pL6So5lqax07DvU0&#xA;AwWoj8FJJOTMhVkZezDqPEEVBwgoMaFvSPOWnaXDrGrWFmkGoeaP0zJHb6bCpkM0oumMcRhReFPq&#xA;zksa7NWp5ZrBKV9OCufW3pzjxDFdyOfj+n+Hh/W+pPKFr5ot9Ei/xPex3uszMZrj0I1igh50pBFT&#xA;dlj6cmJY/hlBro3wBrfm8X8565q+jeatTi126gtJ9QsbR7eK4uIU5JFPcNWPm9PgP3dxvl+QAwIh&#xA;zcbST8PPE5h6L35bdxHuO7LvyRl1q509rsSifQ5J7v6vOkqSIx9UD4eLNWhU7/jkZ8IjV2U4zKWQ&#xA;yrhgbod3l8ET+c35k6f5DtLbULqzlvpboiK3gQMqbNV2eQDivFTsK1J+mghyZZjReXeUP+cj4tZ8&#xA;yraaho8lpZXkpgtPq8v1gxlmUR8kESvJvsSD32XLOA87cfxx9Nc/s8nt/wCZEWu/8q+v00VJW1JY&#xA;4KJbyrDIYxLH6/GQtHxpDzP2hleOuMXycnMD4ZrYvOvJGgecbfyvcpdG+0SOxK/UrG2u1IEHIc3Z&#xA;IecabMW+2SaGoHU5BlHi5CnB8OYjfFJmv5e+VE0jVb2/S5uZJ9QUy36SSco3lYqFkdQADJRT8fU5&#xA;TlIrYORpoSB3JLPcoc12KsW/MfzZpflfy+upaksrW7XCQgQqGbkysRsSu3w5bhgZGg42qyiEbLx+&#xA;9/N38r72V5Lm2v2aUq0gUMisUHFSVSZVJA2rTMrwJOtOsxnvUB+Z/wCUwIItNRBFACDJ+yaj/d/Y&#xA;4fAkj85j80ytPzx/L60R1hjv/wB43ORnT1GZqBalnlZuigdcH5eTIa7H5q//ACv7yL/vu9/5Ep/1&#xA;Ux/LyX89j83nVlqvkEedxrELahLpVu/16CwWEF47lZFcHZ6ekpH6h75dIy4aNOHjGPxOIcXeyXWv&#xA;zX8trHPbaHHPp93cylr92hMTkqOJFA70O2+wpmFqcOacQIEPQdja3QYcxlqYyI7gOvnv07kmP5kX&#xA;EcXD600ZI/vBFxf/AIKla+/XNQOx8wN7fN7A+1XZPWM67uHb5cSbWv5s+VpdKFpr5uZbmIkQ3McV&#xA;WCUFKlnTf6M3Olw5ox9dW8V2zrNDly3pxKMCORHI+W/JkkX/ADkF5CqT6V5IKEU9JNqjY7SZZ+Xk&#xA;4X56A6Fln5afmf5b81a7Pp+mLcLcRWr3DGaNUXgskaGhDNvVxlWbEYiy5Gk1MZyodyA8+xeYLyGa&#xA;x0fUFsrj0jJFFGVFxPJU/BybaNOKncbk91A3xpyjxCM74fL9m7n48ObwpZMQHEO/l06na92NeWPL&#xA;vmWy0sap5qvmQ2od7m3uCtwIo0jU+rHKoUhmkU/BVvhIH2q1MIY+MeGCfnXwtjLU5xhl4shG/MXX&#xA;9Lh6bna3mV9+bfnKa9mubWOCyhgci20uQRuZ0oCDK/LlyNf91kfTmy8OgQfqdD41kGO8Op/Zzeh2&#xA;XmC113QdP1ZIxBfOJoLu3JDPbuOBePkNirjiwPhT3GMQQSCs5RkAY72zTyIf9x1x/wAZv+NRlObm&#xA;5WkFRL548j3Ogm6ay1jnbRTspj1OBgk0BqBT4w8bRuDxcMpFDh10MnDxQ3r+Hof2tPZeTCJ8OXYH&#xA;+IGjH9h6sk84eXtOuNQsrHy/rF1rL3SMblneG5ESpxEdEto0ZV+I+1OmYWm1M445TnHhrkK4b+bs&#xA;9boseTNjx458XFzPFxVy7uTC7j8rb+MzTPr4EsIdpYxGysvCtRx5jpTpTMH+WST9J+bt/wDQ3ER+&#xA;uNDy/amflLVbDRbdbqWa+v7vibnT0ikjjtJHUGL9/HSRiAU5fC1GzeYZyyDfajReX1EIYDQ9XFGx&#xA;t59efcmHmjz/AKfqnk+00ePTfR1MtHJfXp40YxAr8FBy+I7mvT3zIjAiV24M8oMBGt31lYyeVry9&#xA;uriz+pzX1lM0N3NGsZljmGzK7Acg3bNVIGI3emhKMyeHcjmizqtgNSTTTL/pskRnSLi1DGDQsGpx&#xA;6++V8Yuurlflp+H4legGvj963VJNFt7c3eqtbQ28WzXF0Y1Ra+LyUAyYcckDmpaPr3lrUeUGjajZ&#xA;3nojk0VnNFLwU9ysZNBviQRzRGQPIo+WSBABMyqsh4AOQAxIPw79dsiZAc2YiTyWW1jZWpc21vHA&#xA;ZKGQxoqcqbDlxArTCxAVElikLCN1coeLhSDQ+BpgEgeTIxI5pYPMOgQExi4SMgnkoRhv36LlnhyL&#xA;R40B1XaXrmg3sz22m3MUsqcmkjiFKFSA1dhuCwrjKEhuU48sJGolM8g2uxV5N/zkz/5LmL/toQf8&#xA;m5cytJ9fwdd2n/dfF4T5S0nSLvTI5bzy1f6nwkl9S9s5+IYsoEURjK0AVhWta7n2zMnIg86dThhE&#xA;jeJPuR3+HdPTd/JWpceDM4+tkMCS3Gn7vYAU+Egkgdd9hxH+cGXhj+YfmuvNN0O2tVvp/I19BbQx&#xA;kTyPdyrEzA0L7ry61rRqdPeqCeXEpjEC+A/NgupyafJfzPp0LwWRb9xFI3NwtKbn36+2XC63cSRF&#xA;7cmc+TPKc01rHdvYjV7E1kRYS0oSRXQvFJEQeEn7sUJAB2+IgZptdmiZEcXAR39e4j7XpOytPIQE&#xA;uETiT0PLvB+zp82O65aiz1eWL6odPaLrbsqI0SbN9mPao5CnembDS/3Y34vN1Gu/vT6eCum36Et1&#xA;Ly35+nnY2mlcLYH4C0kJZh4keptXwGa+XbGG9pfYf1O5x+zmet4faP1ovy/5YvNQlFvq6W1oI2YM&#xA;txexQQ84mUSVkrLTiHHw0J+eZuLVRyDbc7dD15OvzdnnDKpHhBsc4nccx5HcMsu/KH5XPoWq6ra6&#xA;m0N7ZmeKytWuY2klKSFIWMYRXZHXi2w2r12OXXKxs4nBDhPqT3/nF9WX8wtRVtiNKmB/6SbfK9Z9&#xA;A97d2X/eH+r+kPVfNWveXfLn+5jUqi4YGCFYxylkAJbiq1AoK1qaD36ZjY8HHKwN3Z59ecWLgkfR&#xA;d15sS0S/8ree7DWLa0EtrrM0btLHM1eIlqFeMr8Lx8hvVeQ9tsyZcWMi+TrIeHnjKtpFgzfkT525&#xA;NS9sFK8uJM0xK1Wne3Nd998x59sQiSCJbe5ycfs3klEESgQff+PJPNL8k6N5PsD/AIt1S3t3kcy/&#xA;WQ8vpL6o9MRLUcpGKw8vsV6gDxunl8SJ22l0a9PgOnyAxl64biQ7/wAeSdeSPMPkzVL5YNB1OO7m&#xA;tZyzRASpIVZhG0gEiRhkPpj7NaVFaVyqMREGhQLlZ888somcuKUdvg+fbYx8mV15cxQfPrmzBHV5&#xA;yQJ5PXPyPuraDS/MNyzi3eCKCR7mgLBIxIXG4baij780fa8JSMQPP9D1Xs7khETMtqr5bsk0/wAo&#xA;+TdY0mPUp5blGvI/VlhMih6yCpAAX32pmhyQGOZje8S9Zhyyy44yA2kHi7xRzTR2OjWc8tuqtBY2&#xA;kCPczMGDyUonxOVUEk9Nic6/FjGKO53J39753qMx1E9hQAoe78FA6ja3dq5tby1uLSeFA3pXUUkL&#xA;0LdQsgrxNSPCoy+MgeTiZMZjzfQv5oeWfOGvXs8ujX0l1LBdGul2Mpt4Ugr6f7xo6M0rMhMnqN7K&#xA;NqnRY5YjIjILPTbiA+T2GpwaqEIyxemJ5ixEnbvPMcv7WU/lX5ev9EJt7/UBd3BgUz29ywluopwf&#xA;i9OV6T+kVO4krvTiabYRGPETCPDH5IGbLwCGXJxzHQG3nX/OTOhzXgn1SCe4a/sTbw2dusn7kCVk&#xA;5fAehqa1BB8egzMxfS6zU/Xu8v8AL+lQr5unurK21PRbexgW5sUuZeM/qgqvLkoDKvxbANX/ACsv&#xA;xizu4eolwC47F9Nfna8qeTomiJWQXsPAr1rxfpmi149Hx/W9Z2af3nw/SHjkd95kVm02W4vG1XZ1&#xA;tEmVUMRFacizAMSGX5Dn0+HMHw8PFXH+7rnR5+78d3m5vj6jwzLwv3vF9PEOV87/AB3+T3z8vbVb&#xA;XRPQV2cKQebkFiWHI1IA7nMrs36D73E7TPrDzP8ANOw85aitj/hQViDSG8nt54YpOcdOCsZHXYGv&#xA;T5Ntm68aGMXM18Hmzp8uU1jHF8QD9v2/eE7/AClj1WPXpU1aJIdTFiTdxxFSvqF4qmqEqSep47V6&#xA;bZPOQYCmvRAjKQedfqesZhu2diryb/nJn/yXMX/bQg/5Ny5laT6/g67tP+6+Lwjyl5s0bSdHe2uj&#xA;N67SlmjS3EiMhAPxP9Zh7jpx96npmZOBJdRhzRjGj+PtRmo/mRaBY1sbUXAPIymeNoKNyLKQEnmB&#xA;+1v0+nrgGLvZy1I6D8fNCXH5ly3KSR3OlW8qShllBeZao1QF+FhsqsQMIxebE6q+YYfO8ck8jxxi&#xA;GN2LJCpLBFJqFBYljTpucuDill3lrVvOflmZ5LC1lpOtGQxySxNvUMpj2J67g5q9R+W1A9Uht5gF&#xA;3mk/O6SR4YS9XThJHv2ZJ5H0uTXPPzTeZbDm93ayX0dvKpWN3V1T40ap41rs3gPpq1GeMMFYpbRP&#xA;Df7XI0emlk1d6iFGQMqr9H62XS+TJtZv7m6028trKOGVoGtIFoInj2KEIFFe/TOcnhPUc93tMeoF&#xA;VE3wmj73knmbSo9H1HUNMW8GoyfW7i5uJ0Xioe4MYeBRU1KGLfOo7NxSEeI7XGIHwvf428N23nhK&#xA;ZhHcicyffLh2+FIF/LvmmLRR5jfTK6IZPSW99aCpAcwFhFz9SnNTtxzPjmF06mekJhd9Lel/84ym&#xA;v5iahtQ/oiQEeB+sW230dMp1n0/Fyeyh+8P9X9T0H80PJs/mfRPTsyo1GzdprVWPEOSpUxlj9mux&#xA;+ilRWorw5OEuTq9P4sa6hgXlHy9q3k61u9d1uzca/qXK2gtOUcgSPmJHkeSF5PtNQ09vfanXa0Qi&#xA;KFuy9nOwDqcpEpcMRzP6vM/YnEfnGcoxms5ub/bRGIjO1OhHT51zl8pnORker6Xj7FxYwIwlHhHf&#xA;zclloHnw/o3zHo4kmiDvZTKZFZa05UbmlG2B/pm70esMzwyG7yHb/s7DSw8TFLigTuNrH7Pu8048&#xA;kflN5V8tXpvoNNVL6BmFpcmSRyqMvE0VndQdz7++bGcu55PFjIJMubwfyjF6rXEYSJ3dowomWNh0&#xA;kJ/vaL27kfMZT2pIjgomO/S/LuZ9hRifEuMZenYSqr373oPlK9sLS3vrgyx21hFHI1wieiA8yCjf&#xA;Ai82AFSDt28SF1eOWQ5IXKZ9XW6ravx+DvM0cUcU+GGOI4OYIJ4t7HLp3/gFlt+ZUlvAsMUyhEUK&#xA;rekNgBQbgU2zcz7JwSlZB383nsXtFrIQEQRsK5BL9I8yeXbHXdN1OK4SC+iuZTJM4ZY1jktplJ6c&#xA;PieT78y8sRVdHA0uQ8ZPOX7UB5w1zRdWub65MolvjBBHbcWaQDjKxcFxUVoSdz3yvSCQj6ubldrz&#xA;xSyXjFQ6Psiy0uwsZLiS1hET3UhmuCCfjkYkljU9STmsjADl1ehy6ieQASN8Ioe5elhYx3L3SW8S&#xA;XMn95OqKJG6dWAqemT4jVOOIAG63Qd75d0+6uZbk84rieNopJYmoSHj9PkKg0YL0OJNxMWWOoZBk&#xA;A3j8vigLvyHot5Abe8kurmBpfWaOWdmBNWPGp3C/GelMGG8dkdWzXT/MiImABH+aK+ad3lhY3sax&#xA;3lvHcxowkRJVDqHAIDUYEVFcjKIPNjGZjyNKR0XRy4c2FuXDcg3pJUNx41rTrx2+WR8KNVQZeNO7&#xA;s/NEQ28EIIhjWMHchAFHh2yUYCPIUxlMy5m2Maj+XGj3lwJku7uyVQQLe1eJIqseTPxMbfEx6nKt&#xA;RgGU3Ilz+z+0fysDGGPGbN2Qb+whM9C8rafowRopJrmdEaIXNyyvKY2YNxLKqVAK7Vy6AMY8N2HD&#xA;1OQZcpy8MYSP83YJxhanYq8p/wCclYZZfy7iWJGkb9IQHioJNOEnhmTpPr+Dr+0x+6+LwXQfM91p&#xA;Vlb2z6RdXAhjliKiaWGJvVk5+pwjQNzX7IPLpmdKF9XT48piKops35iTMjL/AIalUsWPIXV1UBlA&#xA;oNugpUe5yHhebb+Z/o/aWH61Lf6jJbuLS7/cQ+iXuGaeR/3jyVL8I/8AflAKdstjQcWZMuhS79Ha&#xA;h/yzS/8AAN/TJWGHCe5m1tfWMK27H1ZGlrHco9rMwiSlA6/Z5EU6DxO/2ePMDs/J1gDRv6uY7vx/&#xA;b3J7Xw71lkLjX0fSf53Lf3fgTHy3qWn3Hm2xksGZo7LR2had4Wt/35uAXIVlVauHJ2zN0ekMccoz&#xA;jVyurt1mu14nmjLHInhhRNVv+1uy8w2miXF/bQ2zfvLueWR45OPMvITVtt9tvlh1XZRzSEhKtgKp&#xA;dB7QR00DA4+L1E3fO+/Zh2uQ21xq8urrbkwtJ60tgPiq1N2Xp8XfNlp8Ph4xG7p0es1fj5pZBHh4&#xA;jdc2pfM0MmhpZNaXLBbsym0a3c0iN+bjgppwoUJrv7ZQcZOQHu/H4+Ds8erjHTSxkAmVUe7bf9nd&#xA;cu9mX/OOqF/zN1a4itpLa1k0yb0lkUrQfWLfY9q7ZPV/QPe4vZg/en+r+kPaHR+bfCep7ZjOxIQ9&#xA;6l/9Tn+ohBe+m31b1g3perQ8PU4/Fx5dab4opi3ofm18I56MCCORpdGoANduI6nfr9OFaLJtMGpt&#xA;p9u2pRol8yA3EcNeCudyq1LVp064FpE8H/lP3YrT4x/R+of8s0v/AADf0zaWHnOE9zKLfSfIZsBJ&#xA;cLrovVSMPAkEPBpCn7xkck/B6g2DAGnicrMpX0cgQx1vxW0dN8hhdodfZgz7GG3AZSp4dG+EhuvX&#xA;bG5eS8OP+l9iuumflwTKvo+YAHlPou8MA9OEfZ5cS3Nz3+EDBc/JPDi/pMR/R2of8s0v/AN/TLbD&#xA;jcJ7n//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:c8e06355-92e3-8a44-bc47-199b4130dd3e</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:c8e06355-92e3-8a44-bc47-199b4130dd3e</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ca428f05-2ffa-184a-90bf-764ac842e206</stRef:instanceID>
            <stRef:documentID>xmp.did:ca428f05-2ffa-184a-90bf-764ac842e206</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9765d3d6-5913-7341-a38a-878b4ccb3119</stEvt:instanceID>
                  <stEvt:when>2016-10-12T22:28:03+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c8e06355-92e3-8a44-bc47-199b4130dd3e</stEvt:instanceID>
                  <stEvt:when>2016-10-15T08:10:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
40.1571 317.538 mo
40.1571 317.538 42.0615 312.248 41.5325 309.391 cv
41.0035 306.534 36.9829 298.599 36.4539 293.52 cv
35.9249 288.442 35.9249 277.755 35.9249 276.38 cv
35.9249 275.272 32.561 263.557 31.2525 259.043 cv
30.9605 258.035 31.4616 256.967 32.4229 256.548 cv
32.4229 256.548 li
33.5403 256.06 34.8363 256.629 35.2334 257.781 cv
40.6933 273.633 li
40.9106 274.264 41.5042 274.687 42.1713 274.687 cv
43.0217 274.687 43.7161 274.007 43.7342 273.157 cv
44.2847 247.422 li
44.3134 246.081 45.4089 245.009 46.7504 245.009 cv
46.7504 245.009 li
48.0434 245.009 49.1169 246.007 49.2102 247.297 cv
51.001 272.047 li
51.0615 272.883 51.7497 273.535 52.5881 273.551 cv
52.5881 273.551 li
53.3819 273.565 54.0696 273.003 54.2128 272.222 cv
58.8025 247.187 li
59.0277 245.959 60.1621 245.112 61.4038 245.245 cv
61.4039 245.245 li
62.662 245.38 63.5962 246.473 63.5329 247.737 cv
62.297 272.409 li
62.2521 273.304 62.9086 274.081 63.7984 274.185 cv
64.4758 274.265 65.1354 273.933 65.4745 273.341 cv
76.8638 253.468 li
77.3779 252.571 78.4898 252.212 79.4316 252.639 cv
79.4316 252.639 li
80.3994 253.077 80.8597 254.188 80.4779 255.18 cv
78.3623 260.674 72.0129 277.227 71.7926 278.549 cv
71.5281 280.136 69.3062 291.563 72.11 292.885 cv
74.9139 294.208 82.7434 285.267 85.9704 284.315 cv
89.1975 283.363 92.4245 284.051 92.5832 285.955 cv
92.7419 287.86 87.4517 289.023 85.3885 291.986 cv
83.3253 294.949 76.7125 303.519 73.4326 306.217 cv
70.1526 308.915 67.243 309.073 66.3437 312.353 cv
65.4444 315.633 65.5502 317.538 65.5502 317.538 cv
40.1571 317.538 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 .219608 .270588 rgb
f
92.5032 286.414 mo
91.2288 286.913 88.6342 287.025 86.875 288.061 cv
83.2083 290.22 82.625 294.035 76.7917 300.285 cv
70.9584 306.535 64.7917 309.619 60.0417 311.119 cv
56.2152 312.327 45.5253 312.183 41.5116 312.082 cv
41.1699 314.717 40.157 317.538 40.157 317.538 cv
65.5502 317.538 li
65.5502 317.538 65.4443 315.633 66.3437 312.353 cv
67.243 309.073 70.1527 308.915 73.4326 306.217 cv
76.7125 303.519 83.3253 294.949 85.3885 291.986 cv
87.2806 289.269 91.8748 288.064 92.5032 286.414 cv
cp
0 .109804 .133333 rgb
f
72.1101 292.885 mo
69.3062 291.563 71.5281 280.136 71.7926 278.549 cv
72.0129 277.227 78.3623 260.674 80.4779 255.18 cv
80.8597 254.188 80.3994 253.077 79.4316 252.639 cv
79.4316 252.639 70.0417 274.65 69.2917 279.447 cv
68.5417 284.244 67.2917 293.153 70.2917 294.511 cv
73.2917 295.869 79.8121 288.694 79.8121 288.694 cv
79.8121 288.694 li
76.7948 291.173 73.6723 293.622 72.1101 292.885 cv
cp
f
60.9167 273.244 mo
61.2917 274.869 63.6 275.477 64.7632 274.015 cv
64.4713 274.162 64.1371 274.225 63.7985 274.185 cv
62.9086 274.081 62.2521 273.304 62.2969 272.409 cv
63.5328 247.737 li
63.5962 246.473 62.662 245.38 61.4039 245.245 cv
61.4039 245.245 62.3542 246.306 62.2917 248.306 cv
62.2292 250.306 60.5417 271.619 60.9167 273.244 cv
cp
f
48.2917 248.202 mo
48.5417 250.702 48.9248 271.035 49.9416 273.035 cv
50.9584 275.035 53.6462 275.312 54.2128 272.222 cv
54.0696 273.003 53.3819 273.565 52.5881 273.551 cv
51.7497 273.535 51.0615 272.883 51.001 272.046 cv
49.2102 247.297 li
49.1169 246.007 48.0434 245.009 46.7504 245.009 cv
46.7504 245.009 48.0417 245.702 48.2917 248.202 cv
cp
f
34.5 257.952 mo
35.1667 259.285 38.7917 274.619 40.5834 275.765 cv
42.375 276.91 43.9247 275.211 43.7123 273.352 cv
43.7114 273.346 li
43.6021 274.105 42.9568 274.687 42.1713 274.687 cv
41.5042 274.687 40.9106 274.264 40.6933 273.633 cv
35.2334 257.781 li
34.8363 256.629 33.5403 256.06 32.4229 256.548 cv
32.4229 256.548 33.8334 256.619 34.5 257.952 cv
cp
f
54.2268 317.538 mo
53.2268 317.538 li
53.2268 308.93 li
54.2268 308.93 li
54.2268 317.538 li
cp
.4 .662745 .72549 rgb
f
49.9416 288.061 mo
48.9416 288.061 li
48.9416 286.077 li
48.9416 285.302 48.3117 284.672 47.5373 284.672 cv
43.2263 284.672 li
42.2092 284.672 41.2785 284.116 40.7971 283.219 cv
39.1613 280.176 li
40.0422 279.704 li
41.6779 282.746 li
41.9851 283.318 42.5783 283.672 43.2263 283.672 cv
47.5373 283.672 li
48.863 283.672 49.9416 284.75 49.9416 286.077 cv
49.9416 288.061 li
cp
f
52.7458 288.061 mo
51.7458 288.061 li
51.7458 284.204 li
51.7458 283.624 51.4235 283.102 50.9045 282.842 cv
48.5104 281.64 li
47.6457 281.205 47.1086 280.335 47.1086 279.369 cv
47.1086 276.978 li
48.1086 276.978 li
48.1086 279.369 li
48.1086 279.954 48.4343 280.483 48.9592 280.746 cv
51.3532 281.948 li
52.2121 282.379 52.7458 283.244 52.7458 284.204 cv
52.7458 288.061 li
cp
f
55.7609 288.061 mo
54.7609 288.061 li
54.7609 283.759 li
54.7609 282.996 55.0998 282.283 55.6911 281.801 cv
57.1823 280.586 li
57.4592 280.361 57.6179 280.027 57.6179 279.669 cv
57.6179 276.708 li
58.6179 276.708 li
58.6179 279.669 li
58.6179 280.329 58.3249 280.946 57.8142 281.362 cv
56.3229 282.577 li
55.9655 282.868 55.7609 283.298 55.7609 283.759 cv
55.7609 288.061 li
cp
f
58.6179 288.061 mo
57.6179 288.061 li
57.6179 285.752 li
57.6179 284.51 58.6281 283.5 59.8703 283.5 cv
63.6071 283.5 li
64.2404 283.5 64.8102 283.149 65.0944 282.582 cv
66.6691 279.447 li
67.5627 279.896 li
65.988 283.032 li
65.5334 283.938 64.6208 284.5 63.6071 284.5 cv
59.8703 284.5 li
59.1799 284.5 58.6179 285.062 58.6179 285.752 cv
58.6179 288.061 li
cp
f
41.0832 278.936 mo
41.0832 279.754 40.42 280.417 39.6019 280.417 cv
38.7838 280.417 38.1206 279.754 38.1206 278.936 cv
38.1206 278.118 38.7838 277.454 39.6019 277.454 cv
40.42 277.454 41.0832 278.118 41.0832 278.936 cv
cp
.67451 .819608 1 rgb
f
49.09 275.765 mo
49.09 276.583 48.4268 277.246 47.6088 277.246 cv
46.7907 277.246 46.1275 276.583 46.1275 275.765 cv
46.1275 274.947 46.7907 274.284 47.6088 274.284 cv
48.4268 274.284 49.09 274.947 49.09 275.765 cv
cp
1 .247059 .25098 rgb
f
59.599 275.496 mo
59.599 276.314 58.9358 276.977 58.1177 276.977 cv
57.2996 276.977 56.6364 276.314 56.6364 275.496 cv
56.6364 274.678 57.2996 274.015 58.1177 274.015 cv
58.9358 274.015 59.599 274.678 59.599 275.496 cv
cp
.67451 .819608 1 rgb
f
68.597 278.727 mo
68.597 279.545 67.9339 280.209 67.1158 280.209 cv
66.2977 280.209 65.6345 279.545 65.6345 278.727 cv
65.6345 277.909 66.2977 277.246 67.1158 277.246 cv
67.9339 277.246 68.597 277.909 68.597 278.727 cv
cp
1 .247059 .25098 rgb
f
55.3139 308.93 mo
52.1397 308.93 li
51.6431 308.93 51.2404 308.528 51.2404 308.031 cv
51.2404 305.624 li
56.2132 305.624 li
56.2132 308.031 li
56.2132 308.528 55.8106 308.93 55.3139 308.93 cv
cp
.4 .662745 .72549 rgb
f
59.7048 305.624 mo
47.7489 305.624 li
46.2068 305.624 44.945 304.362 44.945 302.82 cv
44.945 290.864 li
44.945 289.322 46.2068 288.061 47.7489 288.061 cv
59.7048 288.061 li
61.2469 288.061 62.5086 289.322 62.5086 290.864 cv
62.5086 302.82 li
62.5086 304.362 61.2469 305.624 59.7048 305.624 cv
cp
.8 .886275 .909804 rgb
f
57.7241 302.714 mo
49.7295 302.714 li
48.6983 302.714 47.8547 301.871 47.8547 300.84 cv
47.8547 292.845 li
47.8547 291.814 48.6983 290.97 49.7295 290.97 cv
57.7241 290.97 li
58.7553 290.97 59.599 291.814 59.599 292.845 cv
59.599 300.84 li
59.599 301.871 58.7553 302.714 57.7241 302.714 cv
cp
1 .247059 .25098 rgb
f
176.649 314.255 mo
142.677 314.255 li
142.677 255.593 li
176.649 255.593 li
176.649 314.255 li
cp
.8 .886275 .909804 rgb
f
178.809 304.419 mo
186.228 304.419 li
186.228 279.696 li
178.809 284.279 li
178.809 304.419 li
cp
.4 .662745 .72549 rgb
f
195.664 304.419 mo
191.297 304.419 li
191.297 277.227 li
195.664 282.269 li
195.664 304.419 li
cp
f
178.809 304.419 mo
171.88 304.419 li
171.88 281.106 li
178.809 281.106 li
178.809 304.419 li
cp
f
178.809 281.322 mo
174.489 281.322 li
174.489 278.069 li
178.809 278.069 li
178.809 281.322 li
cp
f
171.88 304.419 mo
164.95 304.419 li
164.95 276.185 li
171.88 276.185 li
171.88 304.419 li
cp
f
170.574 276.185 mo
166.257 276.185 li
166.257 272.247 li
170.574 272.247 li
170.574 276.185 li
cp
f
169.619 272.247 mo
167.211 272.247 li
167.211 265.916 li
168.418 263.149 li
169.619 265.916 li
169.619 272.247 li
cp
f
191.297 304.419 mo
185.739 304.419 li
185.739 292.635 li
191.297 292.635 li
191.297 304.419 li
cp
f
190.25 292.635 mo
186.789 292.635 li
186.789 290.989 li
190.25 290.989 li
190.25 292.635 li
cp
f
189.484 290.989 mo
187.551 290.989 li
187.551 289.346 li
188.521 287.545 li
189.484 289.346 li
189.484 290.989 li
cp
f
150.681 304.419 mo
145.122 304.419 li
145.122 286.56 li
150.681 286.56 li
150.681 304.419 li
cp
f
149.634 286.56 mo
146.169 286.56 li
146.169 284.069 li
149.634 284.069 li
149.634 286.56 li
cp
f
148.868 284.069 mo
146.938 284.069 li
146.938 281.58 li
147.905 278.851 li
148.868 281.58 li
148.868 284.069 li
cp
f
164.95 304.419 mo
162.539 304.419 li
162.539 290.425 li
163.746 275.104 li
164.95 290.425 li
164.95 304.419 li
cp
f
149.606 304.419 mo
142.677 304.419 li
142.677 286.644 li
149.606 289.94 li
149.606 304.419 li
cp
f
165.604 304.419 mo
161.238 304.419 li
161.238 286.644 li
165.604 289.94 li
165.604 304.419 li
cp
f
138.379 304.419 mo
131.446 304.419 li
131.446 280.589 li
138.379 280.589 li
138.379 304.419 li
cp
f
137.073 280.589 mo
132.755 280.589 li
132.755 277.264 li
137.073 277.264 li
137.073 280.589 li
cp
f
130.873 304.419 mo
123.944 304.419 li
123.944 289.715 li
130.873 289.715 li
130.873 304.419 li
cp
f
129.567 289.715 mo
125.25 289.715 li
125.25 287.664 li
129.567 287.664 li
129.567 289.715 li
cp
f
128.613 287.664 mo
126.204 287.664 li
126.204 284.365 li
127.409 280.757 li
128.613 284.365 li
128.613 287.664 li
cp
f
156.237 304.419 mo
150.681 304.419 li
150.681 292.632 li
156.237 292.632 li
156.237 304.419 li
cp
f
155.188 292.632 mo
151.728 292.632 li
151.728 290.988 li
155.188 290.988 li
155.188 292.632 li
cp
f
154.428 290.988 mo
152.492 290.988 li
152.492 289.347 li
153.46 287.545 li
154.428 289.347 li
154.428 290.988 li
cp
f
161.238 304.419 mo
155.682 304.419 li
155.682 280.583 li
161.238 280.583 li
161.238 304.419 li
cp
f
160.188 280.583 mo
156.726 280.583 li
156.726 273.776 li
160.188 273.776 li
160.188 280.583 li
cp
f
159.428 277.257 mo
157.495 277.257 li
157.495 273.933 li
158.458 270.295 li
159.428 273.933 li
159.428 277.257 li
cp
f
141.817 304.419 mo
139.407 304.419 li
139.407 293.149 li
140.612 280.813 li
141.817 293.149 li
141.817 304.419 li
cp
f
175.989 310.745 mo
143.415 310.745 li
143.415 259.05 li
175.989 259.05 li
175.989 310.745 li
cp
176.028 251.756 mo
143.374 251.756 li
141.811 251.756 140.543 253.089 140.543 254.735 cv
140.543 314.558 li
140.543 316.203 141.811 317.538 143.374 317.538 cv
176.028 317.538 li
177.591 317.538 178.859 316.203 178.859 314.558 cv
178.859 254.735 li
178.859 253.089 177.591 251.756 176.028 251.756 cv
cp
0 .109804 .133333 rgb
f
164.126 254.421 mo
155.278 254.421 li
154.63 254.421 154.107 254.946 154.107 255.593 cv
154.107 256.238 154.63 256.764 155.278 256.764 cv
164.126 256.764 li
164.772 256.764 165.295 256.238 165.295 255.593 cv
165.295 254.946 164.772 254.421 164.126 254.421 cv
cp
0 .435294 .541176 rgb
f
159.701 312.192 mo
158.689 312.192 157.868 313.012 157.868 314.025 cv
157.868 315.037 158.689 315.858 159.701 315.858 cv
160.713 315.858 161.533 315.037 161.533 314.025 cv
161.533 313.012 160.713 312.192 159.701 312.192 cv
cp
f
163.345 254.77 mo
155.935 254.77 li
155.392 254.77 154.953 255.137 154.953 255.593 cv
154.953 256.047 155.392 256.414 155.935 256.414 cv
163.345 256.414 li
163.887 256.414 164.327 256.047 164.327 255.593 cv
164.327 255.137 163.887 254.77 163.345 254.77 cv
cp
0 .219608 .270588 rgb
f
170.274 304.419 mo
170.274 305.063 167.351 305.585 163.745 305.585 cv
160.138 305.585 157.215 305.063 157.215 304.419 cv
157.215 303.774 160.138 303.252 163.745 303.252 cv
167.351 303.252 170.274 303.774 170.274 304.419 cv
cp
0 .32549 .407843 rgb
f
169.199 284.614 mo
169.199 287.755 166.653 290.302 163.512 290.302 cv
160.371 290.302 157.824 287.755 157.824 284.614 cv
157.824 281.473 160.371 278.927 163.512 278.927 cv
166.653 278.927 169.199 281.473 169.199 284.614 cv
cp
0 .109804 .133333 rgb
f
163.743 289.391 mo
161.07 289.391 158.907 287.226 158.907 284.556 cv
158.907 281.886 161.07 279.72 163.743 279.72 cv
166.416 279.72 168.579 281.886 168.579 284.556 cv
168.579 287.226 166.416 289.391 163.743 289.391 cv
cp
163.743 275.46 mo
158.881 275.46 154.937 279.403 154.937 284.265 cv
154.937 289.13 163.743 304.333 163.743 304.333 cv
163.743 304.333 172.552 289.13 172.552 284.265 cv
172.552 279.403 168.606 275.46 163.743 275.46 cv
cp
1 .247059 .25098 rgb
f
163.743 289.391 mo
161.07 289.391 158.907 287.226 158.907 284.556 cv
158.907 281.886 161.07 279.72 163.743 279.72 cv
166.416 279.72 168.579 281.886 168.579 284.556 cv
168.579 287.226 166.416 289.391 163.743 289.391 cv
cp
163.743 278.641 mo
160.473 278.641 157.824 281.289 157.824 284.556 cv
157.824 287.826 160.473 290.475 163.743 290.475 cv
167.013 290.475 169.661 287.826 169.661 284.556 cv
169.661 281.289 167.013 278.641 163.743 278.641 cv
cp
.8 .886275 .909804 rgb
f
259.435 78.4671 mo
256.286 77.6168 li
257.584 72.809 li
258.217 70.4669 259.217 68.2532 260.558 66.2306 cv
275.27 44.034 li
277.988 45.8353 li
263.276 68.0319 li
262.129 69.7621 261.274 71.6552 260.733 73.6587 cv
259.435 78.4671 li
cp
0 .219608 .270588 rgb
f
334.888 78.6311 mo
332.329 72.032 li
331.986 71.1441 331.555 70.2832 331.048 69.4734 cv
316.256 45.7987 li
319.022 44.0706 li
333.813 67.7448 li
334.428 68.7287 334.952 69.7753 335.369 70.8543 cv
337.928 77.4528 li
334.888 78.6311 li
cp
f
321.107 51.1891 mo
321.107 51.1891 li
319.783 51.9536 318.074 51.4957 317.309 50.1717 cv
314.152 44.7024 li
313.387 43.3784 313.845 41.6696 315.169 40.9052 cv
315.169 40.9052 li
316.493 40.1408 318.202 40.5986 318.966 41.9226 cv
322.124 47.392 li
322.888 48.716 322.431 50.4247 321.107 51.1891 cv
cp
0 .32549 .407843 rgb
f
272.928 51.1891 mo
272.928 51.1891 li
274.252 51.9536 275.961 51.4957 276.725 50.1717 cv
279.883 44.7024 li
280.647 43.3784 280.19 41.6696 278.866 40.9052 cv
278.866 40.9052 li
277.542 40.1408 275.833 40.5986 275.068 41.9226 cv
271.911 47.392 li
271.146 48.716 271.604 50.4247 272.928 51.1891 cv
cp
f
297.134 39.9095 mo
306.751 39.9095 314.901 41.7558 317.849 44.3198 cv
318.609 43.6579 319.042 42.9509 319.042 42.2124 cv
319.042 38.6127 309.233 35.6946 297.134 35.6946 cv
285.034 35.6946 275.226 38.6127 275.226 42.2124 cv
275.226 42.9509 275.658 43.6579 276.419 44.3198 cv
279.366 41.7558 287.517 39.9095 297.134 39.9095 cv
cp
0 .109804 .133333 rgb
f
297.134 48.7301 mo
287.517 48.7301 279.366 46.8838 276.419 44.3198 cv
276.136 44.5657 275.226 42.2124 275.226 42.2124 cv
275.226 42.2124 275.226 45.9631 275.226 46.4272 cv
275.226 50.0269 285.034 52.945 297.134 52.945 cv
309.233 52.945 319.042 50.0269 319.042 46.4272 cv
319.042 45.8445 318.995 41.7996 318.995 41.7996 cv
318.995 41.7996 318.009 44.4594 317.849 44.3198 cv
314.901 46.8838 306.751 48.7301 297.134 48.7301 cv
cp
0 .32549 .407843 rgb
f
297.134 46.4272 mo
287.172 46.4272 279.096 44.3554 279.096 41.7996 cv
279.096 39.2438 287.172 37.172 297.134 37.172 cv
307.096 37.172 315.171 39.2438 315.171 41.7996 cv
315.171 44.3554 307.096 46.4272 297.134 46.4272 cv
cp
297.134 35.6946 mo
285.034 35.6946 275.226 38.6127 275.226 42.2124 cv
275.226 45.812 285.034 48.7301 297.134 48.7301 cv
309.233 48.7301 319.042 45.812 319.042 42.2124 cv
319.042 38.6127 309.233 35.6946 297.134 35.6946 cv
cp
.6 .772549 .815686 rgb
f
264.115 98.7162 mo
250.833 98.7162 li
253.82 78.5429 li
253.977 77.484 254.886 76.6998 255.957 76.6998 cv
261.956 76.6998 li
263.148 76.6998 264.115 77.6667 264.115 78.8593 cv
264.115 98.7162 li
cp
0 .32549 .407843 rgb
f
330.045 98.7162 mo
343.327 98.7162 li
340.34 78.5429 li
340.183 77.484 339.274 76.6998 338.203 76.6998 cv
332.204 76.6998 li
331.012 76.6998 330.045 77.6667 330.045 78.8593 cv
330.045 98.7162 li
cp
0 .109804 .133333 rgb
f
264.115 81.056 mo
253.448 81.056 li
253.619 79.9044 li
264.115 79.9044 li
264.115 81.056 li
cp
1 .247059 .25098 rgb
f
330.055 81.056 mo
340.722 81.056 li
340.552 79.9044 li
330.055 79.9044 li
330.055 81.056 li
cp
f
280.6 93.6146 mo
264.115 85.6858 li
280.6 77.757 li
313.57 77.757 li
330.055 85.6858 li
313.57 93.6146 li
280.6 93.6146 li
cp
.2 .54902 .631373 rgb
f
313.667 106.645 mo
280.6 106.645 li
280.6 93.6146 li
313.667 93.6146 li
313.667 106.645 li
cp
0 .219608 .270588 rgb
f
330.055 98.7162 mo
313.667 106.645 li
313.667 93.6146 li
330.055 85.6858 li
330.055 98.7162 li
cp
0 .109804 .133333 rgb
f
280.649 106.645 mo
264.115 98.7162 li
264.115 85.6858 li
280.649 93.6146 li
280.649 106.645 li
cp
0 .32549 .407843 rgb
f
280.6 77.757 mo
313.57 77.757 li
297.481 88.2217 li
280.6 77.757 li
cp
.4 .662745 .72549 rgb
f
330.055 85.6858 mo
297.481 88.2217 li
313.57 77.757 li
330.055 85.6858 li
cp
.6 .772549 .815686 rgb
f
297.481 88.2217 mo
313.667 93.6146 li
330.055 85.6858 li
297.481 88.2217 li
cp
.4 .662745 .72549 rgb
f
280.649 93.6146 mo
297.481 88.2217 li
264.115 85.6858 li
280.649 93.6146 li
cp
0 .435294 .541176 rgb
f
289.985 90.6436 mo
282.666 87.1235 li
289.985 83.6034 li
304.622 83.6034 li
311.941 87.1235 li
304.622 90.6436 li
289.985 90.6436 li
cp
.6 .772549 .815686 rgb
f
301.564 51.5594 mo
291.496 51.5594 li
291.051 51.5594 290.688 51.1956 290.688 50.751 cv
290.688 50.3064 291.051 49.9426 291.496 49.9426 cv
301.564 49.9426 li
302.008 49.9426 302.372 50.3064 302.372 50.751 cv
302.372 51.1956 302.008 51.5594 301.564 51.5594 cv
cp
1 .247059 .25098 rgb
f
273.145 218.378 mo
273.145 218.378 275.208 212.649 274.635 209.555 cv
274.062 206.461 269.708 197.867 269.135 192.366 cv
268.562 186.866 268.562 175.292 268.562 173.803 cv
268.562 172.603 264.919 159.915 263.501 155.026 cv
263.185 153.934 263.728 152.778 264.769 152.323 cv
265.979 151.795 267.383 152.411 267.813 153.66 cv
273.726 170.827 li
273.962 171.511 274.604 171.969 275.327 171.969 cv
276.248 171.969 277 171.233 277.02 170.312 cv
277.616 142.44 li
277.647 140.988 278.833 139.826 280.286 139.826 cv
281.687 139.826 282.849 140.908 282.95 142.305 cv
284.89 169.109 li
284.955 170.015 285.701 170.721 286.609 170.738 cv
287.469 170.754 288.213 170.145 288.368 169.299 cv
293.339 142.186 li
293.583 140.855 294.812 139.938 296.157 140.082 cv
297.519 140.228 298.531 141.412 298.462 142.781 cv
297.124 169.502 li
297.075 170.471 297.786 171.312 298.75 171.426 cv
299.484 171.512 300.198 171.152 300.565 170.511 cv
312.9 148.988 li
313.457 148.017 314.661 147.628 315.681 148.09 cv
316.73 148.565 317.228 149.768 316.815 150.842 cv
314.523 156.793 307.647 174.72 307.408 176.152 cv
307.122 177.871 304.715 190.246 307.752 191.679 cv
310.788 193.111 319.268 183.428 322.763 182.397 cv
326.258 181.366 329.753 182.11 329.925 184.173 cv
330.097 186.236 324.367 187.496 322.133 190.705 cv
319.898 193.913 312.736 203.195 309.184 206.117 cv
305.632 209.039 302.481 209.211 301.507 212.763 cv
300.533 216.316 300.647 218.378 300.647 218.378 cv
273.145 218.378 li
cp
1 .792157 .623529 rgb
f
295.629 170.406 mo
296.035 172.166 298.535 172.825 299.795 171.241 cv
299.479 171.401 299.117 171.469 298.75 171.426 cv
297.786 171.312 297.075 170.471 297.124 169.502 cv
298.462 142.781 li
298.531 141.412 297.519 140.228 296.157 140.082 cv
296.157 140.082 297.186 141.231 297.118 143.398 cv
297.05 145.564 295.223 168.646 295.629 170.406 cv
cp
1 .631373 .466667 rgb
f
281.956 143.285 mo
282.226 145.992 282.641 168.014 283.742 170.18 cv
284.844 172.346 287.755 172.646 288.368 169.299 cv
288.213 170.145 287.468 170.754 286.609 170.738 cv
285.701 170.721 284.955 170.015 284.89 169.109 cv
282.95 142.305 li
282.849 140.908 281.687 139.826 280.286 139.826 cv
280.286 139.826 281.685 140.577 281.956 143.285 cv
cp
f
329.838 184.67 mo
328.458 185.21 325.648 185.331 323.743 186.453 cv
319.772 188.792 319.14 192.924 312.822 199.693 cv
306.505 206.462 299.826 209.801 294.681 211.426 cv
290.537 212.735 278.959 212.579 274.612 212.469 cv
274.242 215.323 273.145 218.378 273.145 218.378 cv
300.647 218.378 li
300.647 218.378 300.533 216.316 301.507 212.763 cv
302.481 209.211 305.632 209.039 309.184 206.117 cv
312.736 203.195 319.898 193.913 322.133 190.705 cv
324.182 187.762 329.158 186.457 329.838 184.67 cv
cp
f
307.752 191.679 mo
304.715 190.246 307.122 177.871 307.408 176.152 cv
307.647 174.72 314.523 156.793 316.815 150.842 cv
317.228 149.768 316.73 148.565 315.681 148.09 cv
315.681 148.09 305.512 171.929 304.699 177.124 cv
303.887 182.319 302.533 191.968 305.782 193.439 cv
309.032 194.91 316.093 187.14 316.093 187.14 cv
316.093 187.14 li
312.826 189.824 309.444 192.477 307.752 191.679 cv
cp
f
268.785 188.902 mo
268.785 188.902 270.04 191.203 275.184 191.304 cv
280.328 191.405 298.746 190.09 301.492 190.728 cv
304.237 191.366 305.782 193.439 305.782 193.439 cv
306.275 187.87 li
268.785 188.902 li
cp
f
267.019 153.844 mo
267.741 155.288 271.667 171.896 273.607 173.136 cv
275.548 174.377 277.226 172.536 276.996 170.523 cv
276.995 170.517 li
276.876 171.339 276.178 171.969 275.327 171.969 cv
274.604 171.969 273.962 171.511 273.726 170.827 cv
267.813 153.66 li
267.383 152.411 265.979 151.795 264.769 152.323 cv
264.769 152.323 266.297 152.4 267.019 153.844 cv
cp
f
272.819 178.178 mo
267.569 161.764 li
268.451 161.428 li
273.701 177.842 li
272.819 178.178 li
cp
0 .109804 .133333 rgb
f
280.814 178.021 mo
280.279 149.605 li
281.214 149.584 li
281.749 178 li
280.814 178.021 li
cp
f
292.345 178.071 mo
291.417 177.949 li
294.574 149.533 li
295.501 149.655 li
292.345 178.071 li
cp
f
301.522 178.241 mo
300.689 177.779 li
310.194 157.42 li
311.027 157.882 li
301.522 178.241 li
cp
f
308.212 188.902 mo
268.789 188.902 li
267.025 188.902 265.582 187.459 265.582 185.696 cv
265.582 180.298 li
265.582 178.534 267.025 177.091 268.789 177.091 cv
308.212 177.091 li
309.976 177.091 311.419 178.534 311.419 180.298 cv
311.419 185.696 li
311.419 187.459 309.976 188.902 308.212 188.902 cv
cp
0 .435294 .541176 rgb
f
308.338 177.104 mo
308.351 177.226 li
308.351 182.617 li
308.351 184.383 306.909 185.827 305.148 185.827 cv
265.717 185.827 li
265.595 185.815 li
265.661 187.523 267.066 188.902 268.785 188.902 cv
308.216 188.902 li
309.977 188.902 311.419 187.458 311.419 185.692 cv
311.419 180.301 li
311.419 178.578 310.042 177.17 308.338 177.104 cv
cp
0 .32549 .407843 rgb
f
305.564 184.24 mo
291.375 184.24 li
290.692 184.24 290.133 183.681 290.133 182.998 cv
290.133 182.995 li
290.133 182.312 290.692 181.753 291.375 181.753 cv
305.564 181.753 li
306.247 181.753 306.806 182.312 306.806 182.995 cv
306.806 182.998 li
306.806 183.681 306.247 184.24 305.564 184.24 cv
cp
.6 .772549 .815686 rgb
f
289.104 182.997 mo
289.104 183.683 288.549 184.24 287.864 184.24 cv
287.179 184.24 286.624 183.683 286.624 182.997 cv
286.624 182.31 287.179 181.753 287.864 181.753 cv
288.549 181.753 289.104 182.31 289.104 182.997 cv
cp
1 .247059 .25098 rgb
f
285.568 182.997 mo
285.568 183.683 285.012 184.24 284.327 184.24 cv
283.642 184.24 283.087 183.683 283.087 182.997 cv
283.087 182.31 283.642 181.753 284.327 181.753 cv
285.012 181.753 285.568 182.31 285.568 182.997 cv
cp
f
313.889 159.937 mo
307.646 157.086 li
307.156 156.862 306.938 156.277 307.162 155.787 cv
308.6 152.639 li
308.824 152.149 309.408 151.931 309.899 152.155 cv
316.141 155.007 li
316.632 155.231 316.85 155.815 316.626 156.305 cv
315.188 159.453 li
314.964 159.943 314.379 160.161 313.889 159.937 cv
cp
0 .32549 .407843 rgb
f
298.376 151.334 mo
291.538 150.747 li
291.001 150.701 290.599 150.224 290.645 149.686 cv
290.941 146.239 li
290.987 145.702 291.464 145.3 292.001 145.346 cv
298.839 145.933 li
299.376 145.979 299.778 146.456 299.732 146.993 cv
299.436 150.441 li
299.39 150.978 298.913 151.38 298.376 151.334 cv
cp
f
283.994 150.999 mo
277.132 151.101 li
276.593 151.108 276.145 150.674 276.137 150.135 cv
276.086 146.675 li
276.078 146.136 276.513 145.689 277.052 145.681 cv
283.914 145.579 li
284.453 145.571 284.901 146.006 284.909 146.545 cv
284.96 150.005 li
284.968 150.544 284.533 150.991 283.994 150.999 cv
cp
f
270.976 161.086 mo
265.325 162.939 li
264.843 163.097 264.32 162.832 264.162 162.35 cv
263.047 158.951 li
262.889 158.469 263.154 157.946 263.636 157.788 cv
269.287 155.935 li
269.769 155.777 270.292 156.042 270.45 156.524 cv
271.565 159.923 li
271.723 160.405 271.458 160.928 270.976 161.086 cv
cp
f
395.447 213.433 mo
393.549 213.157 391.286 212.995 388.85 212.995 cv
386.414 212.995 384.151 213.157 382.253 213.433 cv
376.767 213.433 li
376.767 215.687 li
376.767 217.173 382.177 218.378 388.85 218.378 cv
395.523 218.378 400.933 217.173 400.933 215.687 cv
400.933 213.433 li
395.447 213.433 li
cp
f
400.933 213.433 mo
400.933 214.92 395.523 216.125 388.85 216.125 cv
382.177 216.125 376.767 214.92 376.767 213.433 cv
376.767 211.947 382.177 210.741 388.85 210.741 cv
395.523 210.741 400.933 211.947 400.933 213.433 cv
cp
0 .219608 .270588 rgb
f
383.815 205.221 mo
383.815 212.961 li
383.815 213.587 386.115 214.094 388.952 214.094 cv
391.789 214.094 394.089 213.587 394.089 212.961 cv
394.089 205.221 li
383.815 205.221 li
cp
0 .109804 .133333 rgb
f
388.954 210.743 mo
386.703 211.231 385.301 211.913 385.301 212.669 cv
385.301 214.148 390.655 215.347 397.28 215.36 cv
399.531 214.871 400.933 214.189 400.933 213.433 cv
400.933 211.954 395.579 210.755 388.954 210.743 cv
cp
f
418.762 177.251 mo
418.762 194.321 404.923 208.16 387.853 208.16 cv
370.783 208.16 356.945 194.321 356.945 177.251 cv
356.945 160.181 370.783 146.343 387.853 146.343 cv
404.923 146.343 418.762 160.181 418.762 177.251 cv
0 .435294 .541176 rgb
f
393.665 146.896 mo
402.507 151.228 408.597 160.312 408.597 170.821 cv
408.597 185.528 396.675 197.45 381.968 197.45 cv
370.618 197.45 360.932 190.346 357.099 180.344 cv
358.651 195.962 371.827 208.16 387.853 208.16 cv
404.923 208.16 418.762 194.321 418.762 177.251 cv
418.762 162.169 407.956 149.617 393.665 146.896 cv
0 .32549 .407843 rgb
f
398.018 177.251 mo
398.018 182.865 393.467 187.416 387.853 187.416 cv
382.239 187.416 377.688 182.865 377.688 177.251 cv
377.688 171.637 382.239 167.086 387.853 167.086 cv
393.467 167.086 398.018 171.637 398.018 177.251 cv
.2 .54902 .631373 rgb
f
398.018 150.87 mo
398.018 153.371 393.467 155.398 387.853 155.398 cv
382.239 155.398 377.688 153.371 377.688 150.87 cv
377.688 148.37 382.239 146.343 387.853 146.343 cv
393.467 146.343 398.018 148.37 398.018 150.87 cv
f
365.904 159.432 mo
368.282 160.204 368.804 165.159 367.069 170.498 cv
365.334 175.837 362 179.539 359.622 178.766 cv
357.244 177.994 356.723 173.039 358.458 167.7 cv
360.193 162.361 363.527 158.659 365.904 159.432 cv
f
364.123 192.619 mo
365.593 190.596 370.466 191.632 375.008 194.931 cv
379.55 198.231 382.04 202.546 380.57 204.569 cv
379.101 206.592 374.227 205.556 369.686 202.257 cv
365.144 198.957 362.654 194.642 364.123 192.619 cv
0 .219608 .270588 rgb
f
395.136 204.569 mo
393.666 202.546 396.157 198.231 400.699 194.931 cv
405.24 191.632 410.113 190.596 411.583 192.619 cv
413.053 194.642 410.562 198.957 406.021 202.257 cv
401.479 205.556 396.606 206.592 395.136 204.569 cv
f
416.084 178.766 mo
413.706 179.539 410.372 175.837 408.637 170.498 cv
406.903 165.159 407.424 160.204 409.802 159.432 cv
412.18 158.659 415.514 162.361 417.249 167.7 cv
418.984 173.039 418.462 177.994 416.084 178.766 cv
f
394.317 147.881 mo
394.317 149.543 391.418 150.891 387.842 150.891 cv
384.267 150.891 381.368 149.543 381.368 147.881 cv
381.368 146.219 384.267 144.871 387.842 144.871 cv
391.418 144.871 394.317 146.219 394.317 147.881 cv
f
361.91 162.018 mo
363.491 162.531 363.877 165.705 362.772 169.105 cv
361.667 172.506 359.49 174.847 357.909 174.333 cv
356.328 173.819 355.942 170.646 357.047 167.245 cv
358.152 163.844 360.33 161.504 361.91 162.018 cv
f
417.776 174.333 mo
416.195 174.847 414.018 172.506 412.913 169.105 cv
411.808 165.705 412.194 162.531 413.775 162.018 cv
415.356 161.504 417.533 163.844 418.638 167.245 cv
419.743 170.646 419.357 173.819 417.776 174.333 cv
0 .109804 .133333 rgb
f
396.724 177.317 mo
396.724 182.216 392.753 186.188 387.853 186.188 cv
382.954 186.188 378.982 182.216 378.982 177.317 cv
378.982 172.418 382.954 168.446 387.853 168.446 cv
392.753 168.446 396.724 172.418 396.724 177.317 cv
0 .219608 .270588 rgb
f
396.243 177.317 mo
396.243 181.951 392.487 185.707 387.853 185.707 cv
383.22 185.707 379.463 181.951 379.463 177.317 cv
379.463 172.684 383.22 168.928 387.853 168.928 cv
392.487 168.928 396.243 172.684 396.243 177.317 cv
0 .109804 .133333 rgb
f
395.202 177.317 mo
395.202 181.376 391.912 184.666 387.853 184.666 cv
383.795 184.666 380.505 181.376 380.505 177.317 cv
380.505 173.259 383.795 169.969 387.853 169.969 cv
391.912 169.969 395.202 173.259 395.202 177.317 cv
0 .435294 .541176 rgb
f
394.227 177.317 mo
394.227 180.837 391.373 183.691 387.853 183.691 cv
384.333 183.691 381.48 180.837 381.48 177.317 cv
381.48 173.797 384.333 170.944 387.853 170.944 cv
391.373 170.944 394.227 173.797 394.227 177.317 cv
0 .32549 .407843 rgb
f
392.023 177.317 mo
392.023 179.62 390.156 181.487 387.853 181.487 cv
385.55 181.487 383.683 179.62 383.683 177.317 cv
383.683 175.014 385.55 173.147 387.853 173.147 cv
390.156 173.147 392.023 175.014 392.023 177.317 cv
.2 .54902 .631373 rgb
f
380.88 179.643 mo
380.196 178.81 379.791 177.776 379.791 176.656 cv
379.791 174.865 380.826 173.295 382.382 172.412 cv
381.214 173.713 380.505 175.432 380.505 177.317 cv
380.505 178.13 380.637 178.912 380.88 179.643 cv
0 .317647 .356863 rgb
f
382.698 181.066 mo
381.983 180.718 381.362 180.231 380.88 179.643 cv
380.637 178.912 380.505 178.13 380.505 177.317 cv
380.505 175.432 381.214 173.713 382.382 172.412 cv
383.121 171.992 383.978 171.728 384.898 171.669 cv
382.866 172.734 381.48 174.864 381.48 177.317 cv
381.48 178.719 381.932 180.014 382.698 181.066 cv
0 .658823 .737255 rgb
f
385.288 181.655 mo
384.352 181.655 383.47 181.442 382.698 181.066 cv
381.932 180.014 381.48 178.719 381.48 177.317 cv
381.48 174.864 382.866 172.734 384.898 171.669 cv
385.027 171.661 385.157 171.657 385.288 171.657 cv
387.014 171.657 388.554 172.38 389.562 173.512 cv
389.04 173.278 388.462 173.147 387.853 173.147 cv
385.55 173.147 383.683 175.014 383.683 177.317 cv
383.683 179.333 385.114 181.015 387.015 181.403 cv
386.472 181.566 385.891 181.655 385.288 181.655 cv
0 .568627 .639216 rgb
f
387.015 181.403 mo
385.114 181.015 383.683 179.333 383.683 177.317 cv
383.683 175.014 385.55 173.147 387.853 173.147 cv
388.462 173.147 389.04 173.278 389.562 173.512 cv
390.326 174.371 390.784 175.465 390.784 176.656 cv
390.784 178.868 389.204 180.744 387.015 181.403 cv
.447059 .741176 .796078 rgb
f
364.892 169.398 mo
363.462 173.906 360.577 177.012 358.447 176.337 cv
356.318 175.661 355.751 171.46 357.181 166.952 cv
358.611 162.445 361.496 159.338 363.625 160.014 cv
365.755 160.689 366.321 164.891 364.892 169.398 cv
0 .219608 .270588 rgb
f
364.464 169.332 mo
363.112 173.595 360.383 176.533 358.369 175.894 cv
356.355 175.255 355.819 171.282 357.171 167.019 cv
358.524 162.756 361.253 159.818 363.266 160.456 cv
365.28 161.095 365.816 165.069 364.464 169.332 cv
0 .109804 .133333 rgb
f
362.77 168.745 mo
361.585 172.479 359.4 175.118 357.889 174.638 cv
356.378 174.159 356.113 170.743 357.297 167.009 cv
358.482 163.275 360.667 160.637 362.178 161.116 cv
363.689 161.595 363.954 165.011 362.77 168.745 cv
0 .435294 .541176 rgb
f
362.102 168.494 mo
361.075 171.732 359.18 174.021 357.869 173.605 cv
356.559 173.189 356.329 170.227 357.356 166.988 cv
358.384 163.749 360.279 161.461 361.59 161.877 cv
362.9 162.293 363.13 165.255 362.102 168.494 cv
0 .32549 .407843 rgb
f
360.88 168.062 mo
360.208 170.18 358.852 171.641 357.851 171.323 cv
356.85 171.006 356.584 169.031 357.256 166.912 cv
357.928 164.793 359.284 163.333 360.285 163.65 cv
361.286 163.968 361.553 165.943 360.88 168.062 cv
.2 .54902 .631373 rgb
f
357.587 175.415 mo
356.803 174.875 356.365 173.489 356.429 171.815 cv
356.473 173.42 356.872 174.715 357.587 175.415 cv
0 .470588 .521569 rgb
f
358.349 175.657 mo
358.261 175.657 358.174 175.648 358.087 175.63 cv
357.908 175.594 357.741 175.521 357.587 175.415 cv
356.872 174.715 356.473 173.42 356.429 171.815 cv
356.447 171.348 356.504 170.859 356.603 170.36 cv
356.403 172.603 356.853 174.31 357.889 174.638 cv
358.008 174.676 358.131 174.694 358.258 174.694 cv
359.223 174.694 360.384 173.627 361.377 171.932 cv
360.784 174.105 359.527 175.657 358.349 175.657 cv
0 .317647 .356863 rgb
f
358.258 174.694 mo
358.131 174.694 358.008 174.676 357.889 174.638 cv
356.853 174.31 356.403 172.603 356.603 170.36 cv
356.606 170.345 356.609 170.33 356.612 170.314 cv
356.661 170.074 356.719 169.839 356.783 169.612 cv
356.544 171.695 356.928 173.306 357.869 173.605 cv
357.973 173.638 358.08 173.654 358.19 173.654 cv
359.312 173.654 360.739 171.99 361.713 169.578 cv
361.707 170.129 361.646 170.715 361.524 171.315 cv
361.481 171.525 361.432 171.731 361.377 171.932 cv
360.384 173.627 359.223 174.694 358.258 174.694 cv
0 .658823 .737255 rgb
f
358.19 173.654 mo
358.08 173.654 357.973 173.638 357.869 173.605 cv
356.928 173.306 356.544 171.695 356.783 169.612 cv
356.816 169.496 356.85 169.383 356.886 169.272 cv
356.911 170.337 357.247 171.132 357.851 171.323 cv
357.943 171.352 358.038 171.367 358.135 171.367 cv
359.096 171.367 360.27 169.986 360.88 168.062 cv
361.004 167.671 361.096 167.285 361.158 166.914 cv
361.524 167.565 361.724 168.505 361.713 169.578 cv
360.739 171.99 359.312 173.654 358.19 173.654 cv
0 .568627 .639216 rgb
f
358.135 171.367 mo
358.038 171.367 357.943 171.352 357.851 171.323 cv
357.247 171.132 356.911 170.337 356.886 169.272 cv
357.519 167.325 358.688 165.973 359.787 165.973 cv
359.875 165.973 359.963 165.981 360.049 165.999 cv
360.503 166.091 360.879 166.419 361.158 166.914 cv
361.096 167.285 361.004 167.671 360.88 168.062 cv
360.27 169.986 359.096 171.367 358.135 171.367 cv
.447059 .741176 .796078 rgb
f
387.878 153.092 mo
383.042 153.121 379.109 151.293 379.095 149.008 cv
379.081 146.723 382.991 144.847 387.828 144.817 cv
392.665 144.788 396.597 146.616 396.611 148.901 cv
396.625 151.186 392.715 153.062 387.878 153.092 cv
0 .219608 .270588 rgb
f
387.808 152.655 mo
383.234 152.682 379.514 150.953 379.501 148.792 cv
379.488 146.631 383.186 144.857 387.761 144.829 cv
392.335 144.801 396.054 146.53 396.067 148.691 cv
396.081 150.852 392.383 152.627 387.808 152.655 cv
0 .109804 .133333 rgb
f
387.845 150.821 mo
383.838 150.845 380.582 149.551 380.572 147.929 cv
380.562 146.307 383.802 144.973 387.809 144.949 cv
391.816 144.924 395.073 146.219 395.083 147.841 cv
395.092 149.462 391.852 150.797 387.845 150.821 cv
0 .435294 .541176 rgb
f
387.88 150.092 mo
384.404 150.114 381.58 148.991 381.572 147.584 cv
381.563 146.178 384.373 145.02 387.849 144.999 cv
391.324 144.978 394.148 146.101 394.156 147.508 cv
394.165 148.914 391.355 150.071 387.88 150.092 cv
0 .32549 .407843 rgb
f
387.915 148.767 mo
385.641 148.781 383.793 147.921 383.786 146.847 cv
383.779 145.773 385.617 144.892 387.891 144.878 cv
390.165 144.864 392.013 145.723 392.02 146.797 cv
392.026 147.871 390.188 148.753 387.915 148.767 cv
.2 .54902 .631373 rgb
f
379.721 147.88 mo
380 146.947 381.21 146.084 382.859 145.619 cv
381.311 146.168 380.177 146.964 379.721 147.88 cv
0 .470588 .521569 rgb
f
383.862 150.481 mo
381.595 150.481 379.806 149.652 379.669 148.435 cv
379.648 148.249 379.667 148.063 379.721 147.88 cv
380.177 146.964 381.311 146.168 382.859 145.619 cv
383.319 145.489 383.813 145.39 384.33 145.329 cv
382.084 145.842 380.565 146.818 380.572 147.929 cv
380.579 149.031 382.083 149.982 384.305 150.47 cv
384.155 150.477 384.007 150.481 383.862 150.481 cv
0 .317647 .356863 rgb
f
384.305 150.47 mo
382.083 149.982 380.579 149.031 380.572 147.929 cv
380.565 146.818 382.084 145.842 384.33 145.329 cv
384.346 145.328 384.361 145.326 384.377 145.324 cv
384.627 145.296 384.873 145.278 385.114 145.269 cv
383.012 145.693 381.565 146.575 381.572 147.584 cv
381.579 148.828 383.788 149.85 386.702 150.055 cv
386.164 150.223 385.574 150.349 384.952 150.419 cv
384.733 150.443 384.517 150.46 384.305 150.47 cv
0 .658823 .737255 rgb
f
386.702 150.055 mo
383.788 149.85 381.579 148.828 381.572 147.584 cv
381.565 146.575 383.012 145.693 385.114 145.269 cv
385.233 145.264 385.351 145.262 385.467 145.262 cv
385.471 145.262 385.475 145.262 385.478 145.262 cv
384.449 145.622 383.782 146.2 383.786 146.847 cv
383.792 147.913 385.612 148.767 387.861 148.767 cv
387.879 148.767 387.897 148.767 387.915 148.767 cv
388.334 148.765 388.738 148.733 389.119 148.675 cv
388.601 149.237 387.749 149.727 386.702 150.055 cv
0 .568627 .639216 rgb
f
387.861 148.767 mo
385.612 148.767 383.792 147.913 383.786 146.847 cv
383.782 146.2 384.449 145.622 385.478 145.262 cv
387.74 145.264 389.523 146.093 389.66 147.308 cv
389.713 147.779 389.512 148.248 389.119 148.675 cv
388.738 148.733 388.334 148.765 387.915 148.767 cv
387.897 148.767 387.879 148.767 387.861 148.767 cv
.447059 .741176 .796078 rgb
f
411.119 169.376 mo
409.716 165.048 410.235 161.002 412.279 160.339 cv
414.324 159.676 417.119 162.647 418.522 166.975 cv
419.925 171.303 419.405 175.348 417.361 176.011 cv
415.317 176.674 412.522 173.703 411.119 169.376 cv
0 .219608 .270588 rgb
f
411.491 169.188 mo
410.163 165.095 410.655 161.269 412.588 160.642 cv
414.522 160.015 417.165 162.825 418.492 166.918 cv
419.819 171.011 419.328 174.837 417.395 175.464 cv
415.461 176.091 412.818 173.281 411.491 169.188 cv
0 .109804 .133333 rgb
f
413.145 168.699 mo
411.982 165.114 412.216 161.827 413.667 161.356 cv
415.118 160.886 417.236 163.411 418.399 166.996 cv
419.561 170.581 419.328 173.868 417.877 174.339 cv
416.426 174.809 414.307 172.284 413.145 168.699 cv
0 .435294 .541176 rgb
f
413.808 168.523 mo
412.8 165.413 413.002 162.562 414.261 162.154 cv
415.519 161.746 417.356 163.936 418.365 167.045 cv
419.373 170.155 419.17 173.006 417.912 173.414 cv
416.653 173.822 414.816 171.632 413.808 168.523 cv
0 .32549 .407843 rgb
f
415.006 168.177 mo
414.346 166.143 414.591 164.241 415.551 163.929 cv
416.512 163.618 417.826 165.014 418.486 167.049 cv
419.146 169.083 418.901 170.985 417.94 171.296 cv
416.979 171.608 415.666 170.211 415.006 168.177 cv
.2 .54902 .631373 rgb
f
416.388 162.748 mo
415.456 161.517 414.42 160.727 413.469 160.58 cv
413.478 160.579 413.487 160.579 413.495 160.579 cv
414.406 160.579 415.511 161.416 416.388 162.748 cv
0 .360784 .458824 rgb
f
412.451 165.426 mo
411.644 163.242 411.837 161.19 412.957 160.691 cv
413.117 160.619 413.289 160.583 413.469 160.58 cv
414.42 160.727 415.456 161.517 416.388 162.748 cv
416.636 163.123 416.865 163.538 417.067 163.984 cv
416.097 162.337 414.966 161.3 414.03 161.3 cv
413.905 161.3 413.784 161.318 413.667 161.356 cv
412.681 161.676 412.257 163.296 412.451 165.426 cv
0 .227451 .301961 rgb
f
413.506 167.456 mo
413.202 167.022 412.922 166.529 412.682 165.991 cv
412.598 165.802 412.521 165.614 412.451 165.426 cv
412.257 163.296 412.681 161.676 413.667 161.356 cv
413.784 161.318 413.905 161.3 414.03 161.3 cv
414.966 161.3 416.097 162.337 417.067 163.984 cv
417.073 163.998 417.079 164.012 417.085 164.026 cv
417.182 164.241 417.268 164.457 417.345 164.671 cv
416.476 163.105 415.431 162.105 414.576 162.105 cv
414.467 162.105 414.362 162.121 414.261 162.154 cv
413.148 162.515 412.861 164.786 413.506 167.456 cv
0 .560784 .686274 rgb
f
415.431 169.23 mo
414.78 168.926 414.098 168.302 413.506 167.456 cv
412.861 164.786 413.148 162.515 414.261 162.154 cv
414.362 162.121 414.467 162.105 414.576 162.105 cv
415.431 162.105 416.476 163.105 417.345 164.671 cv
417.384 164.779 417.42 164.887 417.454 164.995 cv
416.935 164.303 416.349 163.886 415.831 163.886 cv
415.735 163.886 415.642 163.9 415.551 163.929 cv
414.591 164.241 414.346 166.143 415.006 168.177 cv
415.127 168.552 415.271 168.905 415.431 169.23 cv
0 .462745 .580392 rgb
f
416.272 169.438 mo
416.005 169.438 415.721 169.366 415.431 169.23 cv
415.271 168.905 415.127 168.552 415.006 168.177 cv
414.346 166.143 414.591 164.241 415.551 163.929 cv
415.642 163.9 415.735 163.886 415.831 163.886 cv
416.349 163.886 416.935 164.303 417.454 164.995 cv
418.096 167.023 417.861 168.857 416.811 169.326 cv
416.642 169.401 416.461 169.438 416.272 169.438 cv
.360784 .658823 .752941 rgb
f
401.614 196.897 mo
405.175 194.304 409.055 193.566 410.279 195.249 cv
411.504 196.931 409.61 200.397 406.049 202.989 cv
402.487 205.582 398.608 206.32 397.383 204.637 cv
396.158 202.955 398.052 199.49 401.614 196.897 cv
0 .219608 .270588 rgb
f
401.898 197.183 mo
405.266 194.731 408.936 194.033 410.094 195.624 cv
411.252 197.215 409.461 200.493 406.092 202.945 cv
402.724 205.397 399.055 206.094 397.897 204.503 cv
396.738 202.912 398.53 199.635 401.898 197.183 cv
0 .109804 .133333 rgb
f
402.845 198.559 mo
405.795 196.411 408.892 195.638 409.761 196.832 cv
410.63 198.025 408.943 200.734 405.993 202.882 cv
403.043 205.03 399.946 205.803 399.077 204.609 cv
398.208 203.415 399.895 200.706 402.845 198.559 cv
0 .435294 .541176 rgb
f
403.207 199.116 mo
405.766 197.253 408.451 196.582 409.205 197.618 cv
409.959 198.653 408.496 201.003 405.937 202.865 cv
403.378 204.728 400.693 205.399 399.939 204.363 cv
399.185 203.328 400.648 200.978 403.207 199.116 cv
0 .32549 .407843 rgb
f
403.885 200.114 mo
405.559 198.896 407.383 198.549 407.959 199.34 cv
408.535 200.13 407.644 201.759 405.97 202.978 cv
404.296 204.197 402.472 204.544 401.897 203.753 cv
401.321 202.962 402.211 201.333 403.885 200.114 cv
.2 .54902 .631373 rgb
f
409.298 199.755 mo
410.151 198.526 410.566 197.335 410.416 196.416 cv
410.706 197.253 410.27 198.535 409.298 199.755 cv
0 .360784 .458824 rgb
f
408.364 200.75 mo
409.752 199.178 410.356 197.649 409.761 196.832 cv
409.484 196.451 408.98 196.27 408.327 196.27 cv
407.589 196.27 406.659 196.502 405.65 196.936 cv
406.798 196.027 408.022 195.523 408.956 195.523 cv
409.461 195.523 409.881 195.669 410.16 195.978 cv
410.274 196.104 410.359 196.251 410.416 196.416 cv
410.566 197.335 410.151 198.526 409.298 199.755 cv
409.027 200.095 408.714 200.431 408.364 200.75 cv
0 .227451 .301961 rgb
f
407.816 201.213 mo
409.145 199.781 409.746 198.361 409.205 197.618 cv
408.965 197.288 408.528 197.131 407.962 197.131 cv
406.958 197.131 405.546 197.624 404.098 198.517 cv
404.406 198.107 404.776 197.701 405.199 197.318 cv
405.347 197.184 405.498 197.057 405.65 196.936 cv
406.659 196.502 407.589 196.27 408.327 196.27 cv
408.98 196.27 409.484 196.451 409.761 196.832 cv
410.356 197.649 409.752 199.178 408.364 200.75 cv
408.353 200.76 408.342 200.77 408.331 200.78 cv
408.162 200.934 407.99 201.078 407.816 201.213 cv
0 .560784 .686274 rgb
f
407.55 201.411 mo
408.12 200.598 408.306 199.816 407.959 199.34 cv
407.75 199.053 407.377 198.915 406.906 198.915 cv
406.079 198.915 404.952 199.338 403.885 200.114 cv
403.577 200.339 403.295 200.577 403.044 200.822 cv
403.128 200.132 403.497 199.316 404.098 198.517 cv
405.546 197.624 406.958 197.131 407.962 197.131 cv
408.528 197.131 408.965 197.288 409.205 197.618 cv
409.746 198.361 409.145 199.781 407.816 201.213 cv
407.728 201.281 407.639 201.347 407.55 201.411 cv
0 .462745 .580392 rgb
f
404.573 202.576 mo
404.069 202.576 403.649 202.429 403.37 202.121 cv
403.081 201.801 402.98 201.348 403.044 200.822 cv
403.295 200.577 403.577 200.339 403.885 200.114 cv
404.952 199.338 406.079 198.915 406.906 198.915 cv
407.377 198.915 407.75 199.053 407.959 199.34 cv
408.306 199.816 408.12 200.598 407.55 201.411 cv
406.502 202.163 405.419 202.576 404.573 202.576 cv
.360784 .658823 .752941 rgb
f
373.722 196.785 mo
377.402 199.45 379.406 202.963 378.198 204.632 cv
376.989 206.301 373.026 205.493 369.346 202.828 cv
365.665 200.163 363.661 196.65 364.87 194.981 cv
366.078 193.312 370.042 194.12 373.722 196.785 cv
0 .219608 .270588 rgb
f
373.436 197.065 mo
376.982 199.633 378.93 202.994 377.787 204.572 cv
376.644 206.15 372.843 205.348 369.297 202.781 cv
365.751 200.213 363.803 196.852 364.946 195.274 cv
366.089 193.695 369.89 194.497 373.436 197.065 cv
0 .109804 .133333 rgb
f
372.802 198.647 mo
375.728 200.766 377.406 203.444 376.548 204.629 cv
375.691 205.813 372.623 205.055 369.696 202.936 cv
366.769 200.817 365.092 198.139 365.95 196.954 cv
366.807 195.77 369.875 196.527 372.802 198.647 cv
0 .435294 .541176 rgb
f
372.388 199.158 mo
374.927 200.996 376.381 203.319 375.637 204.346 cv
374.894 205.374 372.233 204.716 369.694 202.878 cv
367.156 201.04 365.701 198.717 366.445 197.69 cv
367.189 196.663 369.85 197.32 372.388 199.158 cv
0 .32549 .407843 rgb
f
371.656 200.103 mo
373.317 201.306 374.202 202.917 373.634 203.701 cv
373.066 204.486 371.259 204.147 369.599 202.944 cv
367.938 201.742 367.052 200.131 367.62 199.346 cv
368.188 198.562 369.995 198.901 371.656 200.103 cv
.2 .54902 .631373 rgb
f
366.067 198.987 mo
365.177 198.003 364.809 196.963 365.217 196.252 cv
365.51 195.74 366.153 195.489 366.974 195.489 cv
367.931 195.489 369.13 195.83 370.299 196.501 cv
371.315 197.083 372.128 197.81 372.641 198.532 cv
370.702 197.163 368.721 196.395 367.376 196.395 cv
366.726 196.395 366.224 196.575 365.95 196.954 cv
365.603 197.433 365.67 198.155 366.067 198.987 cv
0 .317647 .356863 rgb
f
373.223 199.812 mo
372.96 199.589 372.681 199.37 372.388 199.158 cv
370.663 197.909 368.881 197.205 367.683 197.205 cv
367.118 197.205 366.683 197.361 366.445 197.69 cv
366.142 198.109 366.204 198.745 366.557 199.474 cv
366.38 199.315 366.216 199.151 366.067 198.987 cv
365.67 198.155 365.603 197.433 365.95 196.954 cv
366.224 196.575 366.726 196.395 367.376 196.395 cv
368.721 196.395 370.702 197.163 372.641 198.532 cv
372.953 198.971 373.155 199.409 373.223 199.812 cv
0 .658823 .737255 rgb
f
372.786 201.107 mo
372.47 200.759 372.09 200.417 371.656 200.103 cv
370.6 199.339 369.486 198.924 368.668 198.924 cv
368.199 198.924 367.827 199.06 367.62 199.346 cv
367.459 199.569 367.415 199.857 367.472 200.184 cv
367.138 199.96 366.831 199.721 366.557 199.474 cv
366.204 198.745 366.142 198.109 366.445 197.69 cv
366.683 197.361 367.118 197.205 367.683 197.205 cv
368.881 197.205 370.663 197.909 372.388 199.158 cv
372.681 199.37 372.96 199.589 373.223 199.812 cv
373.282 200.162 373.24 200.486 373.083 200.761 cv
373.007 200.894 372.907 201.009 372.786 201.107 cv
0 .568627 .639216 rgb
f
371.326 201.524 mo
370.368 201.524 369.169 201.182 368 200.512 cv
367.817 200.407 367.641 200.297 367.472 200.184 cv
367.415 199.857 367.459 199.569 367.62 199.346 cv
367.827 199.06 368.199 198.924 368.668 198.924 cv
369.486 198.924 370.6 199.339 371.656 200.103 cv
372.09 200.417 372.47 200.759 372.786 201.107 cv
372.443 201.386 371.933 201.524 371.326 201.524 cv
.447059 .741176 .796078 rgb
f
311.961 410.529 mo
290.853 410.529 li
280.825 404.417 li
270.797 410.529 li
249.69 410.529 li
249.69 369.886 li
311.961 369.886 li
311.961 410.529 li
.956863 .631373 .415686 rgb
f
280.825 391.046 mo
280.825 391.046 li
279.385 391.046 278.091 391.928 277.566 393.268 cv
270.797 410.529 li
274.771 408.686 li
278.525 406.945 282.85 406.922 286.622 408.622 cv
290.853 410.529 li
284.084 393.268 li
283.559 391.928 282.265 391.046 280.825 391.046 cv
cp
.435294 .239216 .141176 rgb
f
311.961 369.886 mo
249.69 369.886 li
242.414 360.419 li
242.414 360.419 270.71 367.393 280.825 367.393 cv
290.94 367.393 319.236 360.419 319.236 360.419 cv
311.961 369.886 li
cp
.866667 .47451 .278431 rgb
f
249.69 369.886 mo
249.69 410.529 li
242.414 413.585 li
242.414 360.419 li
249.69 369.886 li
cp
.435294 .239216 .141176 rgb
f
319.236 360.419 mo
319.236 413.585 li
311.961 410.529 li
311.961 369.886 li
319.236 360.419 li
cp
1 .780392 .572549 rgb
f
249.69 369.886 mo
311.961 369.886 li
311.961 377.611 li
311.961 377.611 272.15 379.33 264 385.474 cv
255.85 391.619 253.558 410.529 253.558 410.529 cv
249.69 410.529 li
249.69 369.886 li
.65098 .356863 .207843 rgb
f
241.154 360.419 mo
242.414 360.419 li
242.414 413.585 li
241.154 413.585 li
241.154 360.419 li
cp
.956863 .631373 .415686 rgb
f
319.236 359.161 mo
320.496 359.161 li
320.496 413.585 li
319.236 413.585 li
319.236 359.161 li
cp
f
319.279 359.159 mo
319.279 360.419 li
319.279 360.419 290.95 367.386 280.825 367.393 cv
270.398 367.401 241.162 360.419 241.162 360.419 cv
241.162 359.159 li
241.162 359.159 270.398 366.14 280.825 366.133 cv
290.95 366.126 319.279 359.159 319.279 359.159 cv
cp
f
295.905 382.641 mo
299.875 382.641 303.093 385.859 303.093 389.829 cv
303.093 393.799 299.875 397.017 295.905 397.017 cv
291.936 397.017 288.717 393.799 288.717 389.829 cv
288.717 385.859 291.936 382.641 295.905 382.641 cv
0 .219608 .270588 rgb
f
295.905 383.031 mo
299.66 383.031 302.703 386.074 302.703 389.829 cv
302.703 393.583 299.66 396.627 295.905 396.627 cv
292.151 396.627 289.107 393.583 289.107 389.829 cv
289.107 386.074 292.151 383.031 295.905 383.031 cv
0 .109804 .133333 rgb
f
295.905 383.874 mo
299.194 383.874 301.86 386.54 301.86 389.829 cv
301.86 393.117 299.194 395.783 295.905 395.783 cv
292.617 395.783 289.951 393.117 289.951 389.829 cv
289.951 386.54 292.617 383.874 295.905 383.874 cv
0 .435294 .541176 rgb
f
295.905 384.664 mo
298.758 384.664 301.07 386.977 301.07 389.829 cv
301.07 392.681 298.758 394.993 295.905 394.993 cv
293.053 394.993 290.741 392.681 290.741 389.829 cv
290.741 386.977 293.053 384.664 295.905 384.664 cv
0 .32549 .407843 rgb
f
295.905 386.45 mo
297.771 386.45 299.284 387.963 299.284 389.829 cv
299.284 391.695 297.771 393.208 295.905 393.208 cv
294.039 393.208 292.526 391.695 292.526 389.829 cv
292.526 387.963 294.039 386.45 295.905 386.45 cv
.2 .54902 .631373 rgb
f
292.892 394.023 mo
291.326 393.408 290.206 391.762 290.206 389.829 cv
290.206 387.896 291.326 386.25 292.892 385.634 cv
291.589 386.572 290.741 388.101 290.741 389.829 cv
290.741 391.556 291.589 393.086 292.892 394.023 cv
0 .658823 .737255 rgb
f
294.257 394.283 mo
293.778 394.283 293.318 394.191 292.892 394.023 cv
291.589 393.086 290.741 391.556 290.741 389.829 cv
290.741 388.101 291.589 386.572 292.892 385.634 cv
293.318 385.466 293.778 385.375 294.257 385.375 cv
295.372 385.375 296.382 385.871 297.115 386.673 cv
296.739 386.529 296.332 386.45 295.905 386.45 cv
294.039 386.45 292.526 387.963 292.526 389.829 cv
292.526 391.695 294.039 393.208 295.905 393.208 cv
296.332 393.208 296.739 393.129 297.115 392.985 cv
296.382 393.787 295.372 394.283 294.257 394.283 cv
0 .568627 .639216 rgb
f
295.905 393.208 mo
294.039 393.208 292.526 391.695 292.526 389.829 cv
292.526 387.963 294.039 386.45 295.905 386.45 cv
296.332 386.45 296.739 386.529 297.115 386.673 cv
297.852 387.479 298.307 388.596 298.307 389.829 cv
298.307 391.062 297.851 392.178 297.115 392.985 cv
296.739 393.129 296.332 393.208 295.905 393.208 cv
.447059 .741176 .796078 rgb
f
265.745 382.641 mo
269.714 382.641 272.933 385.859 272.933 389.829 cv
272.933 393.799 269.714 397.017 265.745 397.017 cv
261.775 397.017 258.557 393.799 258.557 389.829 cv
258.557 385.859 261.775 382.641 265.745 382.641 cv
0 .219608 .270588 rgb
f
265.745 383.031 mo
269.499 383.031 272.543 386.074 272.543 389.829 cv
272.543 393.583 269.499 396.627 265.745 396.627 cv
261.99 396.627 258.947 393.583 258.947 389.829 cv
258.947 386.074 261.99 383.031 265.745 383.031 cv
0 .109804 .133333 rgb
f
265.745 383.874 mo
269.033 383.874 271.699 386.54 271.699 389.829 cv
271.699 393.117 269.033 395.783 265.745 395.783 cv
262.456 395.783 259.79 393.117 259.79 389.829 cv
259.79 386.54 262.456 383.874 265.745 383.874 cv
0 .435294 .541176 rgb
f
265.745 384.664 mo
268.597 384.664 270.909 386.977 270.909 389.829 cv
270.909 392.681 268.597 394.993 265.745 394.993 cv
262.893 394.993 260.58 392.681 260.58 389.829 cv
260.58 386.977 262.893 384.664 265.745 384.664 cv
0 .32549 .407843 rgb
f
265.745 386.45 mo
267.611 386.45 269.124 387.963 269.124 389.829 cv
269.124 391.695 267.611 393.208 265.745 393.208 cv
263.879 393.208 262.366 391.695 262.366 389.829 cv
262.366 387.963 263.879 386.45 265.745 386.45 cv
.2 .54902 .631373 rgb
f
262.732 394.023 mo
261.166 393.408 260.046 391.762 260.046 389.829 cv
260.046 387.896 261.166 386.25 262.732 385.634 cv
261.429 386.572 260.58 388.101 260.58 389.829 cv
260.58 391.556 261.429 393.086 262.732 394.023 cv
0 .658823 .737255 rgb
f
264.096 394.283 mo
263.617 394.283 263.158 394.191 262.732 394.023 cv
261.429 393.086 260.58 391.556 260.58 389.829 cv
260.58 388.101 261.429 386.572 262.732 385.634 cv
263.158 385.466 263.617 385.375 264.096 385.375 cv
265.212 385.375 266.222 385.871 266.954 386.673 cv
266.579 386.529 266.171 386.45 265.745 386.45 cv
263.879 386.45 262.366 387.963 262.366 389.829 cv
262.366 391.695 263.879 393.208 265.745 393.208 cv
266.171 393.208 266.579 393.129 266.954 392.985 cv
266.222 393.787 265.212 394.283 264.096 394.283 cv
0 .568627 .639216 rgb
f
265.745 393.208 mo
263.879 393.208 262.366 391.695 262.366 389.829 cv
262.366 387.963 263.879 386.45 265.745 386.45 cv
266.171 386.45 266.579 386.529 266.954 386.673 cv
267.691 387.479 268.147 388.596 268.147 389.829 cv
268.147 391.062 267.691 392.178 266.954 392.985 cv
266.579 393.129 266.171 393.208 265.745 393.208 cv
.447059 .741176 .796078 rgb
f
279.762 407.418 mo
282.089 407.253 284.447 407.642 286.622 408.622 cv
290.853 410.529 li
284.918 395.395 li
284.496 395.759 284.153 396.221 283.941 396.763 cv
279.762 407.418 li
cp
.65098 .356863 .207843 rgb
f
62.3904 218.378 mo
62.3904 218.378 li
57.2696 218.378 52.9684 214.527 52.4055 209.437 cv
46.9496 160.106 li
77.8312 160.106 li
72.3753 209.437 li
71.8124 214.527 67.5112 218.378 62.3904 218.378 cv
cp
0 .32549 .407843 rgb
f
74.6409 160.106 mo
69.3928 207.557 li
68.8299 212.647 64.5287 216.499 59.4079 216.499 cv
58.0709 216.499 56.7962 216.224 55.623 215.746 cv
57.4171 217.384 59.7957 218.378 62.3904 218.378 cv
67.5112 218.378 71.8124 214.527 72.3753 209.437 cv
77.8313 160.106 li
74.6409 160.106 li
cp
0 .109804 .133333 rgb
f
62.3904 194.479 mo
62.3904 194.479 li
58.1811 194.479 54.7371 191.035 54.7371 186.825 cv
54.7371 179.709 li
54.7371 175.5 58.1811 172.056 62.3904 172.056 cv
62.3904 172.056 li
66.5997 172.056 70.0437 175.5 70.0437 179.709 cv
70.0437 186.825 li
70.0437 191.035 66.5997 194.479 62.3904 194.479 cv
cp
0 .243137 .305882 rgb
f
32.7507 156.545 mo
31.2264 164.912 li
31.0155 166.07 31.4 167.256 32.2498 168.07 cv
34.0492 169.792 li
35.3008 170.991 37.2406 171.094 38.6119 170.034 cv
44.3178 165.627 li
32.7507 156.545 li
cp
.2 .54902 .631373 rgb
f
92.0301 156.545 mo
93.5544 164.912 li
93.7653 166.07 93.3808 167.256 92.5309 168.07 cv
90.7316 169.792 li
89.48 170.991 87.5402 171.094 86.1689 170.034 cv
80.463 165.627 li
92.0301 156.545 li
cp
0 .109804 .133333 rgb
f
62.3904 158.132 mo
54.2299 158.132 47.6145 155.412 47.6145 152.057 cv
47.6145 148.701 54.2299 145.981 62.3904 145.981 cv
70.5509 145.981 77.1663 148.701 77.1663 152.057 cv
77.1663 155.412 70.5509 158.132 62.3904 158.132 cv
cp
62.3904 144.032 mo
46.0694 144.032 32.8386 149.473 32.8386 156.184 cv
32.8386 162.896 46.0694 168.336 62.3904 168.336 cv
78.7114 168.336 91.9422 162.896 91.9422 156.184 cv
91.9422 149.473 78.7114 144.032 62.3904 144.032 cv
cp
.360784 .639216 .705882 rgb
f
82.488 147.278 mo
86.3966 149.339 88.7317 151.929 88.7317 154.744 cv
88.7317 161.455 75.5009 166.896 59.1799 166.896 cv
51.4164 166.896 44.356 165.663 39.0823 163.65 cv
44.4903 166.501 52.9166 168.336 62.3904 168.336 cv
78.7114 168.336 91.9422 162.896 91.9422 156.184 cv
91.9422 152.665 88.3009 149.497 82.488 147.278 cv
cp
0 .32549 .407843 rgb
f
49.1537 154.744 mo
51.5672 152.739 56.5799 151.356 62.3904 151.356 cv
68.2008 151.356 73.2135 152.739 75.627 154.744 cv
76.6032 153.933 77.1663 153.023 77.1663 152.056 cv
77.1663 148.701 70.5508 145.981 62.3904 145.981 cv
54.2299 145.981 47.6145 148.701 47.6145 152.056 cv
47.6145 153.023 48.1776 153.933 49.1537 154.744 cv
cp
0 .109804 .133333 rgb
f
59.0739 187.214 mo
59.0739 180.098 li
59.0739 176.412 61.7148 173.313 65.1977 172.599 cv
64.3267 172.253 63.3812 172.056 62.3904 172.056 cv
58.1811 172.056 54.7371 175.5 54.7371 179.709 cv
54.7371 186.825 li
54.7371 191.035 58.1811 194.479 62.3904 194.479 cv
62.9137 194.479 63.4252 194.425 63.9197 194.324 cv
61.0902 193.197 59.0739 190.432 59.0739 187.214 cv
cp
f
70.0437 181.589 mo
70.0437 185.816 66.6172 189.242 62.3904 189.242 cv
58.1636 189.242 54.7371 185.816 54.7371 181.589 cv
54.7371 177.362 58.1636 173.936 62.3904 173.936 cv
66.6172 173.936 70.0437 177.362 70.0437 181.589 cv
cp
f
70.0437 179.709 mo
70.0437 183.936 66.6172 187.362 62.3904 187.362 cv
58.1636 187.362 54.7371 183.936 54.7371 179.709 cv
54.7371 175.482 58.1636 172.056 62.3904 172.056 cv
66.6172 172.056 70.0437 175.482 70.0437 179.709 cv
cp
.2 .54902 .631373 rgb
f
64.7155 175.899 mo
64.7155 176.984 63.8363 177.863 62.7517 177.863 cv
61.6672 177.863 60.788 176.984 60.788 175.899 cv
60.788 174.815 61.6672 173.936 62.7517 173.936 cv
63.8363 173.936 64.7155 174.815 64.7155 175.899 cv
cp
0 .109804 .133333 rgb
f
64.7155 184.168 mo
64.7155 185.252 63.8363 186.132 62.7517 186.132 cv
61.6672 186.132 60.788 185.252 60.788 184.168 cv
60.788 183.083 61.6672 182.204 62.7517 182.204 cv
63.8363 182.204 64.7155 183.083 64.7155 184.168 cv
cp
f
58.6021 178.07 mo
59.6866 178.07 60.5658 178.949 60.5658 180.034 cv
60.5658 181.118 59.6866 181.997 58.6021 181.997 cv
57.5175 181.997 56.6383 181.118 56.6383 180.034 cv
56.6383 178.949 57.5175 178.07 58.6021 178.07 cv
cp
f
66.8705 178.07 mo
67.9551 178.07 68.8343 178.949 68.8343 180.034 cv
68.8343 181.118 67.9551 181.997 66.8705 181.997 cv
65.786 181.997 64.9068 181.118 64.9068 180.034 cv
64.9068 178.949 65.786 178.07 66.8705 178.07 cv
cp
f
64.2784 175.575 mo
64.2784 176.659 63.3992 177.539 62.3146 177.539 cv
61.2301 177.539 60.3509 176.659 60.3509 175.575 cv
60.3509 174.49 61.2301 173.611 62.3146 173.611 cv
63.3992 173.611 64.2784 174.49 64.2784 175.575 cv
cp
1 .247059 .25098 rgb
f
64.2784 183.843 mo
64.2784 184.928 63.3992 185.807 62.3146 185.807 cv
61.2301 185.807 60.3509 184.928 60.3509 183.843 cv
60.3509 182.759 61.2301 181.88 62.3146 181.88 cv
63.3992 181.88 64.2784 182.759 64.2784 183.843 cv
cp
f
58.165 177.745 mo
59.2495 177.745 60.1287 178.625 60.1287 179.709 cv
60.1287 180.794 59.2495 181.673 58.165 181.673 cv
57.0804 181.673 56.2012 180.794 56.2012 179.709 cv
56.2012 178.625 57.0804 177.745 58.165 177.745 cv
cp
f
66.4334 177.745 mo
67.518 177.745 68.3972 178.625 68.3972 179.709 cv
68.3972 180.794 67.518 181.673 66.4334 181.673 cv
65.3489 181.673 64.4697 180.794 64.4697 179.709 cv
64.4697 178.625 65.3489 177.745 66.4334 177.745 cv
cp
f
405.186 43.72 mo
405.186 50.4361 399.762 55.8785 393.046 55.8785 cv
386.318 55.8785 380.875 50.4361 380.875 43.72 cv
380.875 37.0102 386.318 31.5673 393.046 31.5673 cv
399.762 31.5673 405.186 37.0102 405.186 43.72 cv
cp
.8 .886275 .909804 rgb
ef
393.046 28.0098 mo
384.283 28.0098 377.167 35.1311 377.167 43.8823 cv
377.167 52.6207 384.283 59.7357 393.046 59.7357 cv
401.791 59.7357 408.912 52.6207 408.912 43.8823 cv
408.912 35.1311 401.791 28.0098 393.046 28.0098 cv
cp
393.046 61.2773 mo
383.447 61.2773 375.626 53.4695 375.626 43.8823 cv
375.626 34.2824 383.447 26.4739 393.046 26.4739 cv
402.633 26.4739 410.448 34.2824 410.448 43.8823 cv
410.448 53.4695 402.633 61.2773 393.046 61.2773 cv
cp
f
393.046 20.7503 mo
380.457 20.7503 370.214 30.9991 370.214 43.5826 cv
370.214 56.1718 380.457 66.4084 393.046 66.4084 cv
405.635 66.4084 415.866 56.1718 415.866 43.5826 cv
415.866 30.9991 405.635 20.7503 393.046 20.7503 cv
cp
393.046 67.176 mo
380.026 67.176 369.441 56.5905 369.441 43.5826 cv
369.441 30.5747 380.026 19.9891 393.046 19.9891 cv
406.054 19.9891 416.64 30.5747 416.64 43.5826 cv
416.64 56.5905 406.054 67.176 393.046 67.176 cv
cp
f
398.437 48.6616 mo
398.437 51.63 396.009 54.0587 393.04 54.0587 cv
390.072 54.0587 387.643 51.63 387.643 48.6616 cv
387.643 44.0648 li
387.643 41.0964 390.072 38.6678 393.04 38.6678 cv
396.009 38.6678 398.437 41.0964 398.437 44.0648 cv
398.437 48.6616 li
cp
393.04 35.1688 mo
393.04 35.1688 li
388.093 35.1688 384.045 39.2166 384.045 44.164 cv
384.045 51.8253 li
384.045 56.7726 388.093 60.8204 393.04 60.8204 cv
393.04 60.8204 li
397.987 60.8204 402.035 56.7726 402.035 51.8253 cv
402.035 44.164 li
402.035 39.2166 397.987 35.1688 393.04 35.1688 cv
cp
0 .219608 .270588 rgb
f
393.04 106.645 mo
393.04 106.645 li
384.124 106.645 376.828 99.3497 376.828 90.4332 cv
376.828 59.104 li
376.828 50.1875 384.124 42.8922 393.04 42.8922 cv
393.04 42.8922 li
401.957 42.8922 409.252 50.1875 409.252 59.104 cv
409.252 90.4332 li
409.252 99.3497 401.957 106.645 393.04 106.645 cv
cp
0 .435294 .541176 rgb
f
399.799 44.396 mo
402.553 47.305 404.258 51.2152 404.258 55.5123 cv
404.258 86.8414 li
404.258 95.7579 396.963 103.053 388.047 103.053 cv
385.635 103.053 383.35 102.505 381.287 101.549 cv
384.248 104.677 388.421 106.645 393.04 106.645 cv
393.04 106.645 li
401.957 106.645 409.252 99.3497 409.252 90.4332 cv
409.252 59.104 li
409.252 52.5994 405.361 46.9723 399.799 44.396 cv
cp
0 .32549 .407843 rgb
f
409.252 84.3593 mo
409.252 60.8205 li
406.455 62.0511 404.366 66.8478 404.366 72.5899 cv
404.366 78.3319 406.455 83.1286 409.252 84.3593 cv
cp
0 .219608 .270588 rgb
f
376.828 60.8204 mo
376.828 84.3593 li
379.626 83.1288 381.714 78.332 381.714 72.5899 cv
381.714 66.8477 379.626 62.051 376.828 60.8204 cv
cp
0 .32549 .407843 rgb
f
404.378 58.7428 mo
404.378 64.9979 399.307 70.0687 393.052 70.0687 cv
386.797 70.0687 381.726 64.9979 381.726 58.7428 cv
381.726 52.4878 386.797 47.417 393.052 47.417 cv
399.307 47.417 404.378 52.4878 404.378 58.7428 cv
cp
0 .219608 .270588 rgb
f
402.475 58.7841 mo
402.475 63.9886 398.256 68.2077 393.052 68.2077 cv
387.847 68.2077 383.628 63.9886 383.628 58.7841 cv
383.628 53.5796 387.847 49.3605 393.052 49.3605 cv
398.256 49.3605 402.475 53.5796 402.475 58.7841 cv
cp
0 .109804 .133333 rgb
f
401.306 58.7841 mo
401.306 63.3428 397.611 67.0383 393.052 67.0383 cv
388.493 67.0383 384.798 63.3428 384.798 58.7841 cv
384.798 54.2254 388.493 50.5299 393.052 50.5299 cv
397.611 50.5299 401.306 54.2254 401.306 58.7841 cv
cp
0 .435294 .541176 rgb
f
400.211 58.7841 mo
400.211 62.7378 397.006 65.943 393.052 65.943 cv
389.098 65.943 385.893 62.7378 385.893 58.7841 cv
385.893 54.8303 389.098 51.6252 393.052 51.6252 cv
397.006 51.6252 400.211 54.8303 400.211 58.7841 cv
cp
0 .32549 .407843 rgb
f
387.717 59.3587 mo
387.717 55.6978 390.685 52.7301 394.346 52.7301 cv
395.983 52.7301 397.479 53.3266 398.636 54.3102 cv
397.324 52.6748 395.312 51.6252 393.052 51.6252 cv
389.098 51.6252 385.893 54.8304 385.893 58.7841 cv
385.893 62.7378 389.098 65.943 393.052 65.943 cv
393.191 65.943 393.327 65.93 393.465 65.9221 cv
390.222 65.4902 387.717 62.7201 387.717 59.3587 cv
cp
0 .219608 .270588 rgb
f
401.18 88.5179 mo
401.18 93.0418 397.513 96.7091 392.989 96.7091 cv
388.465 96.7091 384.798 93.0418 384.798 88.5179 cv
384.798 83.994 388.465 80.3267 392.989 80.3267 cv
397.513 80.3267 401.18 83.994 401.18 88.5179 cv
cp
0 .32549 .407843 rgb
f
386.885 89.1754 mo
386.885 84.9866 390.281 81.5909 394.47 81.5909 cv
396.343 81.5909 398.055 82.2733 399.378 83.3988 cv
397.877 81.5276 395.575 80.3266 392.989 80.3266 cv
388.465 80.3266 384.798 83.994 384.798 88.5179 cv
384.798 93.0418 388.465 96.7091 392.989 96.7091 cv
393.148 96.7091 393.304 96.6943 393.461 96.6853 cv
389.751 96.191 386.885 93.0215 386.885 89.1754 cv
cp
0 .219608 .270588 rgb
f
396.05 80.3778 mo
396.05 82.1156 394.641 83.5244 392.903 83.5244 cv
391.165 83.5244 389.757 82.1156 389.757 80.3778 cv
389.757 78.64 391.165 77.2312 392.903 77.2312 cv
394.641 77.2312 396.05 78.64 396.05 80.3778 cv
cp
.2 .54902 .631373 rgb
f
396.05 96.658 mo
396.05 98.3958 394.641 99.8046 392.903 99.8046 cv
391.165 99.8046 389.757 98.3958 389.757 96.658 cv
389.757 94.9202 391.165 93.5114 392.903 93.5114 cv
394.641 93.5114 396.05 94.9202 396.05 96.658 cv
cp
f
384.9 85.3713 mo
386.638 85.3713 388.047 86.7801 388.047 88.5179 cv
388.047 90.2557 386.638 91.6645 384.9 91.6645 cv
383.162 91.6645 381.753 90.2557 381.753 88.5179 cv
381.753 86.7801 383.162 85.3713 384.9 85.3713 cv
cp
f
401.18 85.3713 mo
402.918 85.3713 404.327 86.7801 404.327 88.5179 cv
404.327 90.2557 402.918 91.6645 401.18 91.6645 cv
399.442 91.6645 398.034 90.2557 398.034 88.5179 cv
398.034 86.7801 399.442 85.3713 401.18 85.3713 cv
cp
f
395.465 80.3266 mo
395.465 81.7413 394.318 82.888 392.903 82.888 cv
391.489 82.888 390.342 81.7413 390.342 80.3266 cv
390.342 78.912 391.489 77.7652 392.903 77.7652 cv
394.318 77.7652 395.465 78.912 395.465 80.3266 cv
cp
1 .247059 .25098 rgb
f
387.461 88.5179 mo
387.461 89.9325 386.315 91.0793 384.9 91.0793 cv
383.485 91.0793 382.339 89.9325 382.339 88.5179 cv
382.339 87.1033 383.485 85.9565 384.9 85.9565 cv
386.315 85.9565 387.461 87.1033 387.461 88.5179 cv
cp
f
395.465 96.658 mo
395.465 98.0726 394.318 99.2194 392.903 99.2194 cv
391.489 99.2194 390.342 98.0726 390.342 96.658 cv
390.342 95.2434 391.489 94.0966 392.903 94.0966 cv
394.318 94.0966 395.465 95.2434 395.465 96.658 cv
cp
f
403.742 88.5179 mo
403.742 89.9325 402.595 91.0793 401.18 91.0793 cv
399.766 91.0793 398.619 89.9325 398.619 88.5179 cv
398.619 87.1033 399.766 85.9565 401.18 85.9565 cv
402.595 85.9565 403.742 87.1033 403.742 88.5179 cv
cp
f
149.137 218.378 mo
149.137 218.378 155.485 203.142 154.691 199.968 cv
153.898 196.794 141.36 188.065 141.36 168.862 cv
141.36 149.658 158.5 143.151 169.61 143.151 cv
180.719 143.151 189.607 148.23 191.353 150.769 cv
193.098 153.309 200.24 182.511 199.447 183.622 cv
198.653 184.732 195.955 184.891 196.114 186.478 cv
196.273 188.065 198.018 195.525 196.59 198.54 cv
195.162 201.555 185.957 200.762 184.687 203.936 cv
183.417 207.11 179.45 218.378 179.45 218.378 cv
149.137 218.378 li
1 .792157 .623529 rgb
f
163.949 218.378 mo
179.45 218.378 li
179.45 218.378 183.417 207.11 184.687 203.936 cv
185.957 200.762 195.162 201.555 196.59 198.54 cv
197.098 197.467 197.201 195.828 197.12 194.094 cv
197.12 194.094 196.59 197.746 192.781 198.699 cv
188.972 199.651 166.118 200.603 165.96 202.032 cv
165.801 203.46 170.403 206.475 169.769 209.649 cv
169.134 212.824 163.949 218.378 163.949 218.378 cv
cp
1 .631373 .466667 rgb
f
196.114 186.478 mo
195.955 184.891 198.653 184.732 199.447 183.622 cv
200.24 182.511 193.098 153.309 191.353 150.769 cv
190.3 149.239 186.643 146.791 181.479 145.084 cv
182.868 146.724 184.389 148.935 185.057 151.351 cv
186.433 156.324 186.75 172.195 186.75 172.195 cv
162.309 174.416 li
155.918 185.121 li
155.918 185.121 157.866 190.816 165.483 190.922 cv
173.101 191.028 176.064 185.843 177.122 185.843 cv
178.18 185.843 179.317 187.113 180.547 187.325 cv
181.359 187.464 190.196 186.913 196.12 186.522 cv
196.114 186.478 li
f
212.272 182.828 mo
186.069 182.828 li
180.93 182.828 176.613 178.964 176.046 173.857 cv
175.518 169.106 li
174.943 163.931 178.402 159.169 183.501 158.116 cv
207.664 153.128 li
210.505 152.541 213.242 154.503 213.598 157.382 cv
216.196 178.388 li
216.488 180.747 214.648 182.828 212.272 182.828 cv
cp
0 .109804 .133333 rgb
f
216.227 177.602 mo
196.307 177.602 li
192.97 177.602 190.167 175.094 189.799 171.777 cv
189.456 168.692 li
189.082 165.332 191.329 162.24 194.64 161.556 cv
213.754 157.61 li
216.227 177.602 li
cp
.6 .772549 .815686 rgb
f
178.303 176.32 mo
177.775 171.569 li
177.2 166.394 180.66 161.632 185.759 160.579 cv
209.921 155.59 li
211.102 155.347 212.261 155.548 213.242 156.067 cv
212.348 153.938 210.045 152.636 207.664 153.127 cv
183.501 158.116 li
178.402 159.169 174.943 163.931 175.518 169.106 cv
176.046 173.857 li
176.355 176.643 177.785 179.052 179.851 180.673 cv
179.027 179.398 178.481 177.92 178.303 176.32 cv
cp
0 .32549 .407843 rgb
f
168.076 139.977 mo
159.823 139.977 li
159.823 167.433 li
168.076 167.433 li
168.076 139.977 li
0 .109804 .133333 rgb
f
169.015 151.194 mo
158.699 151.194 li
158.151 151.194 157.707 150.75 157.707 150.202 cv
157.707 140.719 li
157.707 139.755 158.488 138.974 159.453 138.974 cv
168.261 138.974 li
169.225 138.974 170.007 139.755 170.007 140.719 cv
170.007 150.202 li
170.007 150.75 169.562 151.194 169.015 151.194 cv
cp
0 .32549 .407843 rgb
f
156.278 176.888 mo
183.259 176.888 li
183.259 166.027 li
156.278 166.027 li
156.278 176.888 li
f
145.463 154.53 mo
159.532 166.027 li
156.278 180.209 li
142.581 180.209 li
141.87 180.209 141.256 179.71 141.111 179.014 cv
139.841 172.928 li
139.683 172.169 140.262 171.458 141.036 171.458 cv
146.23 171.458 li
147.525 171.458 148.661 170.593 149.006 169.344 cv
149.006 169.344 li
149.324 168.193 148.899 166.966 147.937 166.258 cv
141.511 161.526 li
141.103 161.225 140.97 160.675 141.197 160.221 cv
143.872 154.871 li
144.171 154.273 144.946 154.107 145.463 154.53 cv
0 .109804 .133333 rgb
f
176.368 174.645 mo
176.368 182.896 170.808 189.584 163.949 189.584 cv
157.091 189.584 151.531 182.896 151.531 174.645 cv
151.531 166.394 157.091 159.706 163.949 159.706 cv
170.808 159.706 176.368 166.394 176.368 174.645 cv
0 .219608 .270588 rgb
f
161.342 188.194 mo
156.321 188.194 152.25 182.128 152.25 174.645 cv
152.25 167.162 156.321 161.096 161.342 161.096 cv
166.363 161.096 170.434 167.162 170.434 174.645 cv
170.434 182.128 166.363 188.194 161.342 188.194 cv
0 .27451 .341176 rgb
f
183.188 178 mo
183.188 178 li
182.672 178 182.25 177.578 182.25 177.062 cv
182.25 165.937 li
182.25 165.422 182.672 165 183.188 165 cv
183.703 165 184.125 165.422 184.125 165.937 cv
184.125 177.062 li
184.125 177.578 183.703 178 183.188 178 cv
cp
.2 .54902 .631373 rgb
f
171.688 174.645 mo
171.688 179.787 168.223 183.955 163.949 183.955 cv
159.675 183.955 156.21 179.787 156.21 174.645 cv
156.21 169.503 159.675 165.335 163.949 165.335 cv
168.223 165.335 171.688 169.503 171.688 174.645 cv
cp
0 .32549 .407843 rgb
f
157.707 174.645 mo
157.707 169.807 160.775 165.833 164.698 165.38 cv
164.451 165.352 164.202 165.335 163.949 165.335 cv
159.675 165.335 156.21 169.503 156.21 174.645 cv
156.21 179.787 159.675 183.955 163.949 183.955 cv
164.202 183.955 164.451 183.938 164.698 183.91 cv
160.775 183.457 157.707 179.483 157.707 174.645 cv
cp
.2 .54902 .631373 rgb
f
201.394 160.162 mo
203.25 177.602 li
211.917 177.602 li
209.254 158.539 li
201.394 160.162 li
cp
.8 .886275 .909804 rgb
f
367.129 418.857 mo
366.015 418.857 li
373.989 404.414 li
375.102 404.414 li
367.129 418.857 li
cp
.6 .772549 .815686 rgb
f
403.52 418.857 mo
404.633 418.857 li
396.659 404.414 li
395.546 404.414 li
403.52 418.857 li
cp
f
421.593 417.549 mo
348.837 417.549 li
348.837 418.857 li
421.593 418.857 li
421.593 417.549 li
cp
f
421.404 412.484 mo
348.952 412.484 li
348.952 413.49 li
421.404 413.49 li
421.404 412.484 li
cp
f
421.404 407.746 mo
348.952 407.746 li
348.952 408.351 li
421.404 408.351 li
421.404 407.746 li
cp
f
421.404 404.414 mo
348.952 404.414 li
348.952 404.858 li
421.404 404.858 li
421.404 404.414 li
cp
f
403.258 373.827 mo
367.129 373.827 li
348.806 352.64 li
421.58 352.64 li
403.258 373.827 li
cp
f
367.129 404.538 mo
348.806 418.877 li
348.806 352.64 li
367.129 373.827 li
367.129 404.538 li
cp
.8 .886275 .909804 rgb
f
421.58 418.877 mo
403.258 404.538 li
403.258 373.827 li
421.58 352.64 li
421.58 418.877 li
cp
.4 .662745 .72549 rgb
f
406.061 366.73 mo
403.671 366.73 li
403.671 357.177 li
406.061 357.177 li
406.061 366.73 li
cp
0 .435294 .541176 rgb
f
409.642 363.149 mo
400.089 363.149 li
400.089 360.759 li
409.642 360.759 li
409.642 363.149 li
cp
f
357.712 413.127 mo
355.322 413.127 li
355.322 403.574 li
357.712 403.574 li
357.712 413.127 li
cp
f
361.293 409.546 mo
351.74 409.546 li
351.74 407.156 li
361.293 407.156 li
361.293 409.546 li
cp
f
407.081 423.585 mo
363.254 423.585 li
363.254 416.182 373.065 410.181 385.167 410.181 cv
397.27 410.181 407.081 416.182 407.081 423.585 cv
cp
1 .247059 .25098 rgb
ef
392.489 397.981 mo
392.567 394.835 379.179 394.477 379.124 397.625 cv
378.938 409.307 375.077 411.672 375.077 411.672 cv
375.077 411.672 376.971 415.314 385.337 415.314 cv
394.626 415.314 395.257 411.672 395.257 411.672 cv
395.257 411.672 392.206 410.498 392.489 397.981 cv
cp
1 .643137 .486275 rgb
f
392.435 401.668 mo
392.75 405.762 li
392.75 405.762 389.049 409.438 379.219 411.506 cv
378.206 411.719 375.077 411.672 375.077 411.672 cv
375.077 411.672 377.367 408.43 378.012 406.388 cv
378.657 404.345 378.736 400.487 378.736 400.487 cv
392.435 401.668 li
cp
.937255 .584314 .427451 rgb
f
385.329 372.324 mo
378.2 372.324 371.471 379.891 372.419 389.103 cv
373.418 398.836 380.484 406.533 385.329 406.533 cv
390.059 406.533 397.17 398.683 398.242 389.103 cv
399.262 379.896 392.461 372.324 385.329 372.324 cv
cp
1 .792157 .666667 rgb
f
376.906 391.138 mo
375.958 381.925 382.688 374.359 389.817 374.359 cv
390.563 374.359 391.303 374.46 392.034 374.619 cv
390.015 373.17 387.694 372.324 385.329 372.324 cv
378.2 372.324 371.471 379.89 372.419 389.103 cv
373.388 398.546 380.063 406.05 384.884 406.491 cv
381.153 403.565 377.594 397.834 376.906 391.138 cv
cp
1 .74902 .6 rgb
f
385.042 369.94 mo
379.76 369.94 374.029 373.633 372.549 377.524 cv
371.197 381.056 371.502 386.574 371.615 388.056 cv
371.634 388.302 371.734 388.528 371.9 388.709 cv
372.509 389.373 373.609 389.063 373.785 388.18 cv
374.258 385.805 375.149 382.241 376.339 381.548 cv
376.802 381.281 379.155 380.085 380.036 379.638 cv
380.255 379.527 380.494 379.494 380.735 379.542 cv
382.829 379.959 393.209 382.07 394.341 383.207 cv
395.263 384.128 395.906 386.039 396.304 387.609 cv
396.535 388.52 397.73 388.731 398.266 387.959 cv
398.493 387.632 li
398.611 387.462 398.678 387.267 398.687 387.06 cv
398.754 385.581 398.921 379.269 397.116 376.38 cv
395.643 374.026 390.573 369.932 385.042 369.94 cv
cp
0 .109804 .133333 rgb
f
396.79 395.256 mo
373.449 395.256 li
371.145 395.256 369.26 393.371 369.26 391.067 cv
369.26 383.069 li
369.26 380.764 371.145 378.879 373.449 378.879 cv
396.79 378.879 li
399.095 378.879 400.98 380.764 400.98 383.069 cv
400.98 391.067 li
400.98 393.371 399.095 395.256 396.79 395.256 cv
cp
0 .435294 .541176 rgb
f
387.297 368.795 mo
382.943 368.795 li
382.296 368.795 381.772 369.32 381.772 369.967 cv
381.772 377.708 li
381.772 378.355 382.296 378.879 382.943 378.879 cv
387.297 378.879 li
387.944 378.879 388.468 378.355 388.468 377.708 cv
388.468 369.967 li
388.468 369.32 387.944 368.795 387.297 368.795 cv
cp
0 .219608 .270588 rgb
f
388.345 372.658 mo
381.895 372.658 li
381.647 372.658 381.445 372.86 381.445 373.108 cv
381.445 378.879 li
388.794 378.879 li
388.794 373.108 li
388.794 372.86 388.593 372.658 388.345 372.658 cv
cp
0 .435294 .541176 rgb
f
391.457 378.879 mo
391.457 380.33 li
391.457 381.368 390.613 382.212 389.575 382.212 cv
380.869 382.212 li
379.831 382.212 378.987 381.368 378.987 380.33 cv
378.987 378.879 li
378.726 378.879 li
378.726 380.33 li
378.726 381.512 379.687 382.473 380.869 382.473 cv
389.575 382.473 li
390.757 382.473 391.718 381.512 391.718 380.33 cv
391.718 378.879 li
391.457 378.879 li
cp
0 .109804 .133333 rgb
f
385.467 395.256 mo
385.206 395.256 li
385.206 382.473 li
385.467 382.473 li
385.467 395.256 li
cp
f
387.54 392.053 mo
387.54 393.27 386.554 394.257 385.337 394.257 cv
384.12 394.257 383.133 393.27 383.133 392.053 cv
383.133 390.836 384.12 389.85 385.337 389.85 cv
386.554 389.85 387.54 390.836 387.54 392.053 cv
cp
0 .219608 .270588 rgb
f
385.336 393.386 mo
384.602 393.386 384.003 392.788 384.003 392.053 cv
384.003 391.318 384.602 390.72 385.336 390.72 cv
386.071 390.72 386.669 391.318 386.669 392.053 cv
386.669 392.788 386.071 393.386 385.336 393.386 cv
cp
.8 .886275 .909804 rgb
f
393.355 390.517 mo
393.355 391.365 392.667 392.053 391.818 392.053 cv
390.97 392.053 390.282 391.365 390.282 390.517 cv
390.282 389.668 390.97 388.98 391.818 388.98 cv
392.667 388.98 393.355 389.668 393.355 390.517 cv
cp
0 .219608 .270588 rgb
f
396.684 387.52 mo
396.684 388.134 396.186 388.633 395.571 388.633 cv
394.956 388.633 394.458 388.134 394.458 387.52 cv
394.458 386.905 394.956 386.406 395.571 386.406 cv
396.186 386.406 396.684 386.905 396.684 387.52 cv
cp
f
377.318 390.517 mo
377.318 391.365 378.006 392.053 378.855 392.053 cv
379.703 392.053 380.391 391.365 380.391 390.517 cv
380.391 389.668 379.703 388.98 378.855 388.98 cv
378.006 388.98 377.318 389.668 377.318 390.517 cv
cp
f
373.989 387.52 mo
373.989 388.134 374.488 388.633 375.102 388.633 cv
375.717 388.633 376.216 388.134 376.216 387.52 cv
376.216 386.905 375.717 386.406 375.102 386.406 cv
374.488 386.406 373.989 386.905 373.989 387.52 cv
cp
f
397.808 379.02 mo
398.538 379.774 398.993 380.797 398.993 381.923 cv
398.993 389.921 li
398.993 392.225 397.108 394.111 394.804 394.111 cv
371.462 394.111 li
371.11 394.111 370.773 394.053 370.445 393.97 cv
371.208 394.759 372.272 395.256 373.449 395.256 cv
396.79 395.256 li
399.095 395.256 400.98 393.371 400.98 391.066 cv
400.98 383.069 li
400.98 381.117 399.622 379.479 397.808 379.02 cv
cp
f
383.155 380.49 mo
383.155 380.872 382.846 381.182 382.464 381.182 cv
382.082 381.182 381.772 380.872 381.772 380.49 cv
381.772 380.108 382.082 379.798 382.464 379.798 cv
382.846 379.798 383.155 380.108 383.155 380.49 cv
cp
1 .247059 .25098 rgb
f
386.028 380.49 mo
386.028 380.872 385.719 381.182 385.337 381.182 cv
384.955 381.182 384.645 380.872 384.645 380.49 cv
384.645 380.108 384.955 379.798 385.337 379.798 cv
385.719 379.798 386.028 380.108 386.028 380.49 cv
cp
f
388.901 380.49 mo
388.901 380.872 388.592 381.182 388.21 381.182 cv
387.828 381.182 387.518 380.872 387.518 380.49 cv
387.518 380.108 387.828 379.798 388.21 379.798 cv
388.592 379.798 388.901 380.108 388.901 380.49 cv
cp
f
105.833 367.184 mo
102.833 367.184 li
102.833 356.516 li
92.0766 356.516 li
92.0766 353.516 li
105.833 353.516 li
105.833 367.184 li
cp
f
51.4351 414.585 mo
37.6787 414.585 li
37.6787 400.917 li
40.6787 400.917 li
40.6787 411.585 li
51.4351 411.585 li
51.4351 414.585 li
cp
f
39.9698 414.324 mo
37.7882 411.848 li
102.926 354.436 li
105.107 356.912 li
39.9698 414.324 li
f
70.8192 369.737 mo
51.511 369.737 38.6329 387.378 38.6329 387.378 cv
38.6329 387.378 55.2344 397.651 71.8361 397.651 cv
88.4376 397.651 102.6 385.729 102.6 385.729 cv
102.6 385.729 90.1273 369.737 70.8192 369.737 cv
.8 .886275 .909804 rgb
f
42.0963 382.967 mo
40.4503 382.967 38.3419 387.378 38.3419 387.378 cv
38.3419 387.378 40.5903 390.681 42.2374 390.681 cv
43.8857 390.681 44.307 389.1 44.307 386.918 cv
44.307 384.736 43.7444 382.967 42.0963 382.967 cv
1 .643137 .486275 rgb
f
70.8186 367.796 mo
63.0939 367.796 56.8328 374.059 56.8328 381.783 cv
56.8328 389.508 63.0939 395.77 70.8186 395.77 cv
78.5432 395.77 84.8055 389.508 84.8055 381.783 cv
84.8055 374.059 78.5432 367.796 70.8186 367.796 cv
0 .435294 .541176 rgb
f
70.8186 396.93 mo
49.8369 396.762 38.7964 387.328 38.7964 387.328 cv
38.8997 387.19 li
38.7213 387.19 38.5668 387.19 38.3963 387.19 cv
38.3632 387.302 38.3419 387.378 38.3419 387.378 cv
38.3419 387.378 47.9584 401.683 71.5144 401.882 cv
93.2385 401.698 101.614 388.131 102.788 386.015 cv
102.653 386.015 102.488 386.015 102.299 386.015 cv
100.511 387.68 89.8848 396.777 70.8186 396.93 cv
1 .631373 .466667 rgb
f
72.2489 360.892 mo
46.5911 361.478 39.0566 384.952 38.3963 387.19 cv
38.5668 387.19 38.7213 387.19 38.8997 387.19 cv
40.0601 385.657 51.7278 370.904 71.0767 370.741 cv
91.4868 370.913 102.6 385.729 102.6 385.729 cv
102.6 385.729 102.478 385.847 102.299 386.015 cv
102.488 386.015 102.653 386.015 102.788 386.015 cv
102.888 385.836 102.942 385.729 102.942 385.729 cv
102.942 385.729 95.1583 360.369 72.2489 360.892 cv
f
102.377 385.447 mo
102.372 385.444 102.367 385.441 102.362 385.438 cv
101.924 384.912 100.886 383.714 99.3099 382.203 cv
100.922 383.715 101.952 384.923 102.377 385.447 cv
.8 .865098 .881569 rgb
f
102.362 385.438 mo
100.691 384.372 93.3472 379.88 83.9911 377.069 cv
83.3024 375.145 82.2041 373.415 80.8013 371.986 cv
89.5561 374.206 95.807 378.92 99.3099 382.203 cv
100.886 383.714 101.924 384.912 102.362 385.438 cv
43.49 383.605 mo
43.2655 383.337 42.9884 383.143 42.6514 383.043 cv
46.2635 379.545 52.3352 374.788 60.5011 372.34 cv
59.3885 373.555 58.4881 374.967 57.8576 376.518 cv
51.8233 378.35 46.8448 381.264 43.49 383.605 cv
.639216 .772549 .807843 rgb
f
38.7964 387.328 mo
38.7964 387.328 li
38.7964 387.328 li
38.8997 387.19 li
38.8997 387.19 li
39.2449 386.734 40.5201 385.108 42.6514 383.043 cv
42.9884 383.143 43.2655 383.337 43.49 383.605 cv
40.4965 385.695 38.7964 387.328 38.7964 387.328 cv
.8 .580392 .470588 rgb
f
83.9911 377.069 mo
79.4742 375.711 74.4895 374.745 69.4472 374.745 cv
69.2228 374.745 68.9966 374.747 68.7719 374.751 cv
64.8748 374.819 61.2036 375.502 57.8576 376.518 cv
58.4881 374.967 59.3885 373.555 60.5011 372.34 cv
63.7103 371.378 67.2421 370.773 71.0767 370.741 cv
74.5984 370.771 77.8425 371.236 80.8013 371.986 cv
82.2041 373.415 83.3024 375.145 83.9911 377.069 cv
0 .411765 .513725 rgb
f
38.7964 387.328 mo
38.7964 387.328 li
38.7964 387.328 li
38.7964 387.328 li
38.7964 387.328 mo
38.7964 387.328 38.8275 387.281 38.8896 387.19 cv
38.893 387.19 38.8963 387.19 38.8997 387.19 cv
38.7964 387.328 li
.8 .568627 .454902 rgb
f
38.8997 387.19 mo
38.8997 387.19 li
38.8963 387.19 38.893 387.19 38.8896 387.19 cv
40.0073 385.564 51.1381 370.104 70.4708 370.104 cv
90.8771 370.104 102.721 385.671 102.721 385.671 cv
102.721 385.671 102.603 385.592 102.377 385.447 cv
101.952 384.923 100.922 383.715 99.3099 382.203 cv
95.807 378.92 89.5561 374.206 80.8013 371.986 cv
77.8425 371.236 74.5984 370.771 71.0767 370.741 cv
67.2421 370.773 63.7103 371.378 60.5011 372.34 cv
52.3352 374.788 46.2635 379.545 42.6514 383.043 cv
40.5201 385.108 39.2449 386.734 38.8997 387.19 cv
f
38.7964 387.328 mo
38.3419 387.378 li
38.3419 387.378 50.3879 399.091 71.4843 398.446 cv
92.5784 397.802 102.6 385.729 102.6 385.729 cv
102.6 385.729 90.192 394.306 71.4843 396.323 cv
55.5354 398.043 39.2587 387.475 38.7964 387.328 cv
cp
1 .792157 .666667 rgb
f
70.8186 375.391 mo
67.3385 375.391 64.5194 378.213 64.5194 381.69 cv
64.5194 385.17 67.3385 387.989 70.8186 387.989 cv
74.2986 387.989 77.1187 385.17 77.1187 381.69 cv
77.1187 378.213 74.2986 375.391 70.8186 375.391 cv
cp
0 .109804 .133333 rgb
f
70.8186 367.796 mo
49.7123 367.796 38.3419 387.378 38.3419 387.378 cv
38.7964 387.328 li
38.7964 387.328 52.3604 371.09 71.175 371.353 cv
89.9907 371.616 102.6 385.729 102.6 385.729 cv
102.6 385.729 95.119 367.796 70.8186 367.796 cv
cp
f
75.1134 377.181 mo
74.0059 377.181 73.1081 378.078 73.1081 379.186 cv
73.1081 380.293 74.0059 381.191 75.1134 381.191 cv
76.2209 381.191 77.1187 380.293 77.1187 379.186 cv
77.1187 378.078 76.2209 377.181 75.1134 377.181 cv
cp
1 1 1 rgb
f
66.8512 381.827 mo
66.2706 381.827 65.8 382.298 65.8 382.878 cv
65.8 383.459 66.2706 383.93 66.8512 383.93 cv
67.4317 383.93 67.9023 383.459 67.9023 382.878 cv
67.9023 382.298 67.4317 381.827 66.8512 381.827 cv
cp
f
105.833 404.797 mo
86.9634 404.797 li
86.9634 403.651 li
105.833 403.651 li
105.833 404.797 li
cp
0 .435294 .541176 rgb
f
105.833 408.941 mo
86.9634 408.941 li
86.9634 407.795 li
105.833 407.795 li
105.833 408.941 li
cp
f
94.811 413.086 mo
86.9634 413.086 li
86.9634 411.939 li
94.811 411.939 li
94.811 413.086 li
cp
f
44.9704 365.583 mo
41.8475 365.583 li
41.8475 353.099 li
44.9704 353.099 li
44.9704 365.583 li
cp
f
49.6503 360.902 mo
37.1671 360.902 li
37.1671 357.779 li
49.6503 357.779 li
49.6503 360.902 li
cp
f
173.995 56.5947 mo
150.399 56.5947 li
149.159 56.5947 148.154 55.5893 148.154 54.3491 cv
148.154 42.006 li
176.241 42.006 li
176.241 54.3491 li
176.241 55.5893 175.235 56.5947 173.995 56.5947 cv
cp
.2 .54902 .631373 rgb
f
170.923 42.006 mo
153.471 42.006 li
153.471 32.3256 li
170.923 32.3256 li
170.923 42.006 li
cp
.8 .886275 .909804 rgb
f
167.067 63.0028 mo
157.327 63.0028 li
156.289 63.0028 155.448 62.1617 155.448 61.124 cv
155.448 56.5947 li
168.946 56.5947 li
168.946 61.124 li
168.946 62.1617 168.105 63.0028 167.067 63.0028 cv
cp
.2 .54902 .631373 rgb
f
170.923 35.8705 mo
153.471 35.8705 li
153.471 32.3256 li
170.923 32.3256 li
170.923 35.8705 li
cp
.6 .772549 .815686 rgb
f
159.256 39.2791 mo
159.256 39.8438 158.798 40.3017 158.233 40.3017 cv
157.668 40.3017 157.211 39.8438 157.211 39.2791 cv
157.211 38.7143 157.668 38.2565 158.233 38.2565 cv
158.798 38.2565 159.256 38.7143 159.256 39.2791 cv
cp
0 .219608 .270588 rgb
f
163.22 39.2791 mo
163.22 39.8438 162.762 40.3017 162.197 40.3017 cv
161.632 40.3017 161.175 39.8438 161.175 39.2791 cv
161.175 38.7143 161.632 38.2565 162.197 38.2565 cv
162.762 38.2565 163.22 38.7143 163.22 39.2791 cv
cp
f
167.184 39.2791 mo
167.184 39.8438 166.726 40.3017 166.161 40.3017 cv
165.596 40.3017 165.139 39.8438 165.139 39.2791 cv
165.139 38.7143 165.596 38.2565 166.161 38.2565 cv
166.726 38.2565 167.184 38.7143 167.184 39.2791 cv
cp
f
148.154 52.8282 mo
166.108 52.8282 li
169.497 52.8282 172.244 50.0813 172.244 46.6928 cv
172.244 42.006 li
176.241 42.006 li
176.241 54.3491 li
176.241 55.5893 175.235 56.5947 173.995 56.5947 cv
150.399 56.5947 li
149.159 56.5947 148.154 55.5893 148.154 54.3491 cv
148.154 52.8282 li
cp
0 .435294 .541176 rgb
f
208.961 106.645 mo
205.539 106.645 li
205.539 47.3572 li
205.539 43.2825 202.224 39.9675 198.149 39.9675 cv
194.263 39.9675 li
190.188 39.9675 186.873 43.2825 186.873 47.3572 cv
186.873 88.1241 li
186.873 94.0857 182.023 98.9357 176.062 98.9357 cv
171.298 98.9357 li
165.336 98.9357 160.486 94.0857 160.486 88.1241 cv
160.486 63.0032 li
163.908 63.0032 li
163.908 88.1241 li
163.908 92.1987 167.223 95.5137 171.298 95.5137 cv
176.062 95.5137 li
180.136 95.5137 183.451 92.1987 183.451 88.1241 cv
183.451 47.3572 li
183.451 41.3955 188.302 36.5456 194.263 36.5456 cv
198.149 36.5456 li
204.11 36.5456 208.961 41.3955 208.961 47.3572 cv
208.961 106.645 li
cp
0 .109804 .133333 rgb
f
207.25 87.9439 mo
207.25 87.9439 li
203.548 87.9439 200.519 84.9153 200.519 81.2136 cv
200.519 57.841 li
200.519 54.1393 203.548 51.1107 207.25 51.1107 cv
207.25 51.1107 li
210.951 51.1107 213.98 54.1393 213.98 57.841 cv
213.98 81.2136 li
213.98 84.9153 210.951 87.9439 207.25 87.9439 cv
cp
.2 .54902 .631373 rgb
f
209.808 58.9113 mo
209.808 60.3243 208.663 61.4698 207.25 61.4698 cv
205.837 61.4698 204.691 60.3243 204.691 58.9113 cv
204.691 57.4983 205.837 56.3528 207.25 56.3528 cv
208.663 56.3528 209.808 57.4983 209.808 58.9113 cv
cp
1 .247059 .25098 rgb
f
209.808 80.2431 mo
209.808 81.6562 208.663 82.8017 207.25 82.8017 cv
205.837 82.8017 204.691 81.6562 204.691 80.2431 cv
204.691 78.8301 205.837 77.6846 207.25 77.6846 cv
208.663 77.6846 209.808 78.8301 209.808 80.2431 cv
cp
0 .109804 .133333 rgb
f
209.808 69.5772 mo
209.808 70.9902 208.663 72.1357 207.25 72.1357 cv
205.837 72.1357 204.691 70.9902 204.691 69.5772 cv
204.691 68.1642 205.837 67.0187 207.25 67.0187 cv
208.663 67.0187 209.808 68.1642 209.808 69.5772 cv
cp
1 .247059 .25098 rgb
f
211.755 52.8617 mo
212.264 53.8076 212.554 54.8866 212.554 56.0306 cv
212.554 79.4032 li
212.554 83.1049 209.526 86.1335 205.824 86.1335 cv
204.093 86.1335 202.515 85.4657 201.319 84.3824 cv
202.457 86.4972 204.692 87.9439 207.25 87.9439 cv
210.952 87.9439 213.98 84.9153 213.98 81.2135 cv
213.98 57.841 li
213.98 55.87 213.116 54.0955 211.755 52.8617 cv
cp
0 .435294 .541176 rgb
f
246.202 252.229 mo
236.762 254.254 230.578 257.622 230.578 261.437 cv
230.578 306.326 li
230.578 302.511 236.762 299.143 246.202 297.118 cv
246.202 252.229 li
cp
.2 .54902 .631373 rgb
f
287.677 252.229 mo
287.677 297.118 li
296.424 298.995 302.37 302.027 303.192 305.499 cv
303.192 262.264 li
303.257 261.991 303.301 261.715 303.301 261.437 cv
303.301 257.622 297.117 254.254 287.677 252.229 cv
cp
.4 .662745 .72549 rgb
f
238.39 299.385 mo
238.39 254.496 li
233.499 256.404 230.578 258.815 230.578 261.437 cv
230.578 306.326 li
230.578 303.704 233.499 301.294 238.39 299.385 cv
cp
0 .435294 .541176 rgb
f
254.048 260.504 mo
254.746 261.184 255.61 261.68 256.602 261.68 cv
257.742 261.68 258.496 261.184 258.496 260.301 cv
258.496 259.272 257.889 258.629 255.353 258.629 cv
255.353 256.717 li
257.448 256.717 258.11 256.093 258.11 255.155 cv
258.11 254.346 257.595 253.869 256.676 253.869 cv
255.849 253.869 255.224 254.255 254.489 254.898 cv
253.129 253.243 li
254.195 252.325 255.371 251.756 256.805 251.756 cv
259.212 251.756 260.83 252.914 260.83 254.953 cv
260.83 256.166 260.131 257.011 258.882 257.544 cv
258.882 257.618 li
260.223 258.004 261.197 258.96 261.197 260.467 cv
261.197 262.635 259.212 263.867 256.86 263.867 cv
254.967 263.867 253.643 263.205 252.798 262.212 cv
254.048 260.504 li
cp
1 .247059 .25098 rgb
f
268.677 259.953 mo
268.677 258.72 268.034 258.261 267.152 258.261 cv
266.564 258.261 265.92 258.574 265.387 259.419 cv
265.626 261.257 266.398 261.845 267.207 261.845 cv
268.015 261.845 268.677 261.275 268.677 259.953 cv
cp
269.559 254.769 mo
269.155 254.328 268.42 253.942 267.74 253.942 cv
266.453 253.942 265.424 254.862 265.332 257.582 cv
265.939 256.81 266.95 256.35 267.666 256.35 cv
269.67 256.35 271.14 257.489 271.14 259.953 cv
271.14 262.378 269.375 263.867 267.262 263.867 cv
265.001 263.867 262.851 262.176 262.851 258.078 cv
262.851 253.722 265.111 251.756 267.574 251.756 cv
269.118 251.756 270.24 252.398 270.974 253.152 cv
269.559 254.769 li
cp
f
278.27 257.765 mo
278.27 254.567 277.572 253.85 276.653 253.85 cv
275.753 253.85 275.036 254.567 275.036 257.765 cv
275.036 260.944 275.753 261.771 276.653 261.771 cv
277.572 261.771 278.27 260.944 278.27 257.765 cv
cp
272.481 257.765 mo
272.481 253.795 274.154 251.756 276.653 251.756 cv
279.153 251.756 280.825 253.795 280.825 257.765 cv
280.825 261.735 279.153 263.867 276.653 263.867 cv
274.154 263.867 272.481 261.735 272.481 257.765 cv
cp
f
303.192 305.499 mo
303.192 262.264 li
301.817 268.069 286.118 272.649 266.94 272.649 cv
246.858 272.649 230.578 267.629 230.578 261.437 cv
230.578 307.153 li
230.687 307.153 li
232.062 312.959 247.761 317.538 266.94 317.538 cv
287.021 317.538 303.301 312.518 303.301 306.326 cv
303.301 306.047 303.257 305.772 303.192 305.499 cv
cp
.8 .886275 .909804 rgb
f
284.891 285.574 mo
284.891 287.428 283.388 288.931 281.534 288.931 cv
279.68 288.931 278.177 287.428 278.177 285.574 cv
278.177 283.72 279.68 282.217 281.534 282.217 cv
283.388 282.217 284.891 283.72 284.891 285.574 cv
cp
1 .247059 .25098 rgb
f
244.304 289.376 mo
244.314 289.376 li
244.304 289.191 li
244.304 286.877 246.255 285.001 248.661 285.001 cv
249.344 285.001 249.988 285.157 250.564 285.426 cv
251.493 284.15 253.03 283.313 254.774 283.313 cv
256.793 283.313 258.535 284.436 259.375 286.065 cv
260.056 285.631 260.878 285.376 261.764 285.376 cv
264.116 285.376 266.023 287.168 266.023 289.378 cv
266.023 291.433 264.374 293.124 262.252 293.352 cv
262.252 293.38 li
244.304 293.38 li
243.154 293.38 242.222 292.484 242.222 291.378 cv
242.222 290.272 243.154 289.376 244.304 289.376 cv
cp
1 1 1 rgb
f
278.583 291.497 mo
278.589 291.498 li
278.583 291.368 li
278.583 289.745 279.836 288.429 281.382 288.429 cv
281.821 288.429 282.235 288.538 282.604 288.727 cv
283.201 287.832 284.189 287.245 285.309 287.245 cv
286.606 287.245 287.725 288.033 288.265 289.176 cv
288.703 288.871 289.231 288.692 289.8 288.692 cv
291.311 288.692 292.536 289.949 292.536 291.499 cv
292.536 292.94 291.477 294.127 290.113 294.286 cv
290.113 294.306 li
278.583 294.306 li
277.844 294.306 277.245 293.677 277.245 292.902 cv
277.245 292.126 277.844 291.497 278.583 291.497 cv
cp
f
gsave
303.192 303.217 mo
303.192 259.982 li
301.817 268.069 286.118 272.649 266.94 272.649 cv
246.858 272.649 230.578 267.629 230.578 259.155 cv
230.578 304.871 li
230.687 307.153 li
232.062 312.959 247.761 317.538 266.94 317.538 cv
287.022 317.538 303.301 312.518 303.301 306.326 cv
303.301 306.047 303.257 305.772 303.192 303.217 cv
clp
230.578 316.013 mo
252.393 291.55 li
261.732 298.031 li
274.424 286.145 li
303.301 313.86 li
264.727 329.318 li
230.578 316.013 li
cp
0 .109804 .133333 rgb
f
274.424 286.145 mo
274.424 286.145 278.321 299.79 277.276 302.547 cv
276.23 305.304 264.727 329.318 264.727 329.318 cv
303.301 313.86 li
274.424 286.145 li
cp
0 .219608 .270588 rgb
f
252.393 291.55 mo
257.977 309.276 li
258.548 315.096 li
261.732 298.031 li
252.393 291.55 li
cp
f
274.406 286.035 mo
269.042 291.185 li
272.142 290.379 li
272.522 291.995 li
274.139 290.775 li
276.04 291.55 li
274.406 286.035 li
cp
.6 .772549 .815686 rgb
f
280.913 291.861 mo
274.406 286.035 li
276.04 291.55 li
277.062 290.509 li
280.913 291.861 li
cp
1 1 1 rgb
f
248.861 295.142 mo
252.321 291.276 li
254.123 296.427 li
252.393 294.573 li
251.572 295.572 li
250.681 294.538 li
248.861 295.142 li
cp
.6 .772549 .815686 rgb
f
252.321 291.276 mo
256.219 294.205 li
254.317 294.787 li
254.123 296.427 li
252.321 291.276 li
cp
1 1 1 rgb
f
grestore
341.188 286.628 mo
341.188 302.533 li
341.188 310.82 347.906 317.538 356.193 317.538 cv
356.193 317.538 li
364.55 317.538 371.728 311.597 373.289 303.387 cv
375.246 293.098 li
375.596 291.259 377.204 289.929 379.075 289.929 cv
379.075 286.628 li
341.188 286.628 li
cp
0 .435294 .541176 rgb
f
416.962 286.628 mo
416.962 302.533 li
416.962 310.82 410.245 317.538 401.958 317.538 cv
401.958 317.538 li
393.6 317.538 386.423 311.597 384.861 303.387 cv
382.904 293.098 li
382.554 291.259 380.947 289.929 379.075 289.929 cv
379.075 286.628 li
416.962 286.628 li
cp
f
420.089 286.628 mo
338.913 286.628 li
337.51 286.628 336.362 285.48 336.362 284.077 cv
336.362 282.674 337.51 281.526 338.913 281.526 cv
420.089 281.526 li
421.492 281.526 422.64 282.674 422.64 284.077 cv
422.64 285.48 421.492 286.628 420.089 286.628 cv
cp
0 .32549 .407843 rgb
f
342.614 286.628 mo
342.614 302.533 li
342.614 310.82 349.331 317.538 357.618 317.538 cv
357.618 317.538 li
365.976 317.538 373.153 311.597 374.715 303.387 cv
376.672 293.098 li
377.022 291.259 378.629 289.929 380.501 289.929 cv
380.501 286.628 li
342.614 286.628 li
cp
.6 .772549 .815686 rgb
f
418.388 286.628 mo
418.388 302.533 li
418.388 310.82 411.67 317.538 403.383 317.538 cv
403.383 317.538 li
395.026 317.538 387.848 311.597 386.287 303.387 cv
384.33 293.098 li
383.98 291.259 382.372 289.929 380.501 289.929 cv
380.501 286.628 li
418.388 286.628 li
cp
f
340.188 281.526 mo
363.393 263.269 li
364.545 262.363 365.968 261.87 367.434 261.87 cv
373.949 261.87 li
374.881 261.87 375.637 262.626 375.637 263.558 cv
375.637 264.49 374.881 265.246 373.949 265.246 cv
369.086 265.246 li
367.438 265.246 365.85 265.869 364.641 266.99 cv
348.966 281.526 li
340.188 281.526 li
cp
0 .109804 .133333 rgb
f
419.036 281.526 mo
395.832 263.269 li
394.679 262.363 393.256 261.87 391.79 261.87 cv
385.275 261.87 li
384.343 261.87 383.587 262.626 383.587 263.558 cv
383.587 264.49 384.343 265.246 385.275 265.246 cv
390.138 265.246 li
391.786 265.246 393.374 265.869 394.583 266.99 cv
410.258 281.526 li
419.036 281.526 li
cp
f
349.369 315.06 mo
351.737 316.623 354.569 317.538 357.618 317.538 cv
357.618 317.538 li
365.976 317.538 373.153 311.597 374.715 303.387 cv
376.672 293.098 li
377.022 291.259 378.629 289.929 380.501 289.929 cv
380.501 286.628 li
372.676 286.628 li
349.369 315.06 li
cp
.8 .886275 .909804 rgb
f
418.388 302.533 mo
418.388 286.628 li
414.688 286.628 li
392.079 313.354 li
395.144 315.974 399.106 317.538 403.383 317.538 cv
403.383 317.538 li
411.67 317.538 418.388 310.82 418.388 302.533 cv
cp
f
420.063 284.077 mo
339.114 284.077 li
338.687 284.077 338.338 283.728 338.338 283.302 cv
338.338 282.875 338.687 282.526 339.114 282.526 cv
420.063 282.526 li
420.49 282.526 420.838 282.875 420.838 283.302 cv
420.838 283.728 420.49 284.077 420.063 284.077 cv
cp
0 .435294 .541176 rgb
f
362.12 302.833 mo
338.562 302.833 li
338.562 292.03 li
362.12 292.03 li
365.091 292.03 367.522 294.46 367.522 297.431 cv
367.522 297.431 li
367.522 300.402 365.091 302.833 362.12 302.833 cv
cp
0 .219608 .270588 rgb
f
352.991 298.908 mo
338.562 298.908 li
338.562 295.955 li
352.991 295.955 li
353.803 295.955 354.467 296.619 354.467 297.431 cv
354.467 298.243 353.803 298.908 352.991 298.908 cv
cp
.317647 .545098 .952941 rgb
f
362.007 297.587 mo
362.007 298.488 361.277 299.219 360.376 299.219 cv
359.474 299.219 358.744 298.488 358.744 297.587 cv
358.744 296.686 359.474 295.955 360.376 295.955 cv
361.277 295.955 362.007 296.686 362.007 297.587 cv
cp
1 .247059 .25098 rgb
f
365.649 293.357 mo
366.076 294.129 366.321 295.014 366.321 295.955 cv
366.321 298.926 363.89 301.357 360.919 301.357 cv
338.562 301.357 li
338.562 302.833 li
362.12 302.833 li
365.091 302.833 367.522 300.402 367.522 297.431 cv
367.522 295.808 366.792 294.349 365.649 293.357 cv
cp
0 .109804 .133333 rgb
f
338.562 304.361 mo
338.562 304.361 li
337.944 304.361 337.437 303.855 337.437 303.236 cv
337.437 291.627 li
337.437 291.008 337.944 290.502 338.562 290.502 cv
339.181 290.502 339.687 291.008 339.687 291.627 cv
339.687 303.236 li
339.687 303.855 339.181 304.361 338.562 304.361 cv
cp
f
162.057 419.703 mo
162.747 420.355 163.6 420.831 164.581 420.831 cv
165.707 420.831 166.451 420.355 166.451 419.509 cv
166.451 418.522 165.852 417.905 163.347 417.905 cv
163.347 416.072 li
165.416 416.072 166.07 415.474 166.07 414.574 cv
166.07 413.799 165.562 413.341 164.654 413.341 cv
163.837 413.341 163.219 413.711 162.494 414.328 cv
161.15 412.741 li
162.203 411.86 163.365 411.314 164.78 411.314 cv
167.159 411.314 168.757 412.425 168.757 414.381 cv
168.757 415.544 168.067 416.354 166.833 416.865 cv
166.833 416.937 li
168.157 417.307 169.12 418.223 169.12 419.668 cv
169.12 421.747 167.159 422.929 164.836 422.929 cv
162.966 422.929 161.658 422.294 160.823 421.342 cv
162.057 419.703 li
cp
1 .247059 .25098 rgb
f
176.509 419.175 mo
176.509 417.993 175.873 417.553 175.002 417.553 cv
174.42 417.553 173.785 417.853 173.258 418.663 cv
173.495 420.426 174.257 420.989 175.056 420.989 cv
175.855 420.989 176.509 420.443 176.509 419.175 cv
cp
177.38 414.204 mo
176.98 413.781 176.254 413.411 175.582 413.411 cv
174.312 413.411 173.295 414.293 173.204 416.901 cv
173.804 416.161 174.802 415.72 175.51 415.72 cv
177.488 415.72 178.941 416.813 178.941 419.175 cv
178.941 421.501 177.198 422.929 175.11 422.929 cv
172.877 422.929 170.754 421.307 170.754 417.377 cv
170.754 413.2 172.986 411.314 175.419 411.314 cv
176.944 411.314 178.052 411.931 178.777 412.653 cv
177.38 414.204 li
cp
f
185.984 417.077 mo
185.984 414.011 185.294 413.323 184.387 413.323 cv
183.497 413.323 182.789 414.011 182.789 417.077 cv
182.789 420.126 183.497 420.919 184.387 420.919 cv
185.294 420.919 185.984 420.126 185.984 417.077 cv
cp
180.266 417.077 mo
180.266 413.271 181.917 411.314 184.387 411.314 cv
186.856 411.314 188.507 413.271 188.507 417.077 cv
188.507 420.884 186.856 422.929 184.387 422.929 cv
181.917 422.929 180.266 420.884 180.266 417.077 cv
cp
f
207.465 374.534 mo
207.465 375.32 206.868 375.541 206.127 375.053 cv
204.937 374.27 203.725 373.534 202.492 372.847 cv
201.723 372.417 201.086 371.446 201.086 370.66 cv
201.086 369.951 201.086 369.241 201.086 368.531 cv
201.086 367.746 201.723 367.433 202.492 367.862 cv
203.725 368.549 204.937 369.285 206.127 370.069 cv
206.868 370.556 207.464 371.62 207.465 372.404 cv
207.465 373.114 207.465 373.824 207.465 374.534 cv
207.444 410.209 mo
207.444 410.995 206.848 411.216 206.106 410.729 cv
204.917 409.945 203.704 409.21 202.471 408.522 cv
201.703 408.093 201.066 407.121 201.066 406.336 cv
201.066 405.626 201.066 404.916 201.066 404.206 cv
201.066 403.421 201.703 403.108 202.471 403.537 cv
203.704 404.225 204.917 404.96 206.106 405.744 cv
206.848 406.232 207.444 407.295 207.444 408.08 cv
207.444 408.79 207.444 409.499 207.444 410.209 cv
198.096 369.207 mo
198.096 369.992 197.446 370.339 196.643 370.003 cv
195.354 369.463 194.05 368.972 192.732 368.528 cv
191.911 368.251 191.234 367.405 191.234 366.619 cv
191.234 365.909 191.234 365.199 191.234 364.489 cv
191.234 363.705 191.911 363.267 192.732 363.544 cv
194.05 363.987 195.354 364.479 196.643 365.018 cv
197.446 365.354 198.096 366.292 198.096 367.077 cv
198.096 367.787 198.096 368.497 198.096 369.207 cv
198.076 404.882 mo
198.075 405.668 197.426 406.014 196.622 405.678 cv
195.334 405.139 194.029 404.647 192.712 404.204 cv
191.891 403.927 191.213 403.08 191.214 402.294 cv
191.214 401.584 191.214 400.875 191.214 400.165 cv
191.213 399.38 191.891 398.942 192.712 399.219 cv
194.029 399.663 195.334 400.154 196.622 400.693 cv
197.426 401.029 198.075 401.968 198.076 402.753 cv
198.076 403.463 198.076 404.172 198.076 404.882 cv
188.069 365.744 mo
188.069 366.529 187.384 367 186.542 366.816 cv
185.191 366.521 183.831 366.274 182.466 366.074 cv
181.615 365.95 180.916 365.227 180.916 364.441 cv
180.916 363.732 180.916 363.022 180.916 362.312 cv
180.916 361.527 181.615 360.965 182.466 361.09 cv
183.831 361.289 185.191 361.536 186.542 361.832 cv
187.384 362.015 188.069 362.829 188.069 363.614 cv
188.069 364.324 188.069 365.034 188.069 365.744 cv
188.049 401.419 mo
188.049 402.204 187.364 402.675 186.522 402.492 cv
185.171 402.196 183.811 401.949 182.446 401.75 cv
181.595 401.625 180.896 400.902 180.896 400.117 cv
180.896 399.407 180.896 398.697 180.896 397.987 cv
180.896 397.202 181.595 396.64 182.446 396.765 cv
183.811 396.964 185.171 397.212 186.522 397.507 cv
187.364 397.691 188.049 398.505 188.049 399.29 cv
188.049 399.999 188.049 400.709 188.049 401.419 cv
177.664 364.145 mo
177.664 364.93 176.963 365.525 176.104 365.494 cv
174.727 365.442 173.349 365.439 171.972 365.484 cv
171.114 365.512 170.412 364.913 170.412 364.128 cv
170.412 363.418 170.412 362.708 170.412 361.998 cv
170.412 361.213 171.114 360.527 171.972 360.499 cv
173.349 360.455 174.727 360.458 176.104 360.509 cv
176.963 360.54 177.664 361.23 177.664 362.015 cv
177.664 362.725 177.664 363.435 177.664 364.145 cv
177.644 399.82 mo
177.644 400.605 176.942 401.201 176.084 401.169 cv
174.707 401.118 173.329 401.115 171.952 401.159 cv
171.093 401.187 170.392 400.589 170.392 399.803 cv
170.392 399.093 170.392 398.383 170.392 397.673 cv
170.392 396.889 171.093 396.202 171.952 396.175 cv
173.329 396.13 174.707 396.133 176.084 396.184 cv
176.942 396.216 177.644 396.906 177.644 397.69 cv
177.644 398.4 177.644 399.11 177.644 399.82 cv
167.158 364.409 mo
167.159 365.195 166.459 365.914 165.608 366.035 cv
164.242 366.228 162.881 366.469 161.529 366.758 cv
160.686 366.937 160 366.463 160 365.678 cv
160 364.968 160 364.258 160 363.548 cv
160 362.764 160.686 361.953 161.529 361.773 cv
162.881 361.484 164.242 361.243 165.608 361.05 cv
166.459 360.93 167.159 361.495 167.158 362.28 cv
167.158 362.99 167.158 363.699 167.158 364.409 cv
167.138 400.085 mo
167.138 400.87 166.439 401.59 165.588 401.71 cv
164.221 401.903 162.861 402.144 161.508 402.433 cv
160.666 402.613 159.98 402.139 159.98 401.353 cv
159.98 400.643 159.98 399.934 159.98 399.224 cv
159.98 398.439 160.666 397.628 161.508 397.448 cv
162.861 397.16 164.221 396.919 165.588 396.726 cv
166.439 396.605 167.138 397.17 167.138 397.955 cv
167.138 398.665 167.138 399.375 167.138 400.085 cv
156.832 366.538 mo
156.832 367.323 156.154 368.167 155.332 368.44 cv
154.013 368.877 152.707 369.362 151.416 369.895 cv
150.611 370.227 149.96 369.878 149.96 369.092 cv
149.96 368.382 149.96 367.672 149.96 366.963 cv
149.96 366.178 150.611 365.242 151.416 364.911 cv
152.707 364.378 154.013 363.893 155.332 363.456 cv
156.154 363.183 156.832 363.624 156.832 364.408 cv
156.832 365.118 156.832 365.828 156.832 366.538 cv
156.812 402.213 mo
156.812 402.999 156.134 403.843 155.312 404.116 cv
153.993 404.553 152.686 405.038 151.396 405.571 cv
150.591 405.902 149.94 405.553 149.94 404.767 cv
149.94 404.058 149.94 403.348 149.94 402.638 cv
149.94 401.853 150.591 400.918 151.396 400.586 cv
152.686 400.053 153.993 399.568 155.312 399.131 cv
156.134 398.858 156.812 399.299 156.812 400.084 cv
156.812 400.794 156.812 401.503 156.812 402.213 cv
146.964 370.53 mo
146.964 371.316 146.326 372.284 145.556 372.709 cv
144.32 373.391 143.105 374.12 141.912 374.897 cv
141.169 375.381 140.571 375.156 140.571 374.37 cv
140.571 373.66 140.571 372.951 140.571 372.241 cv
140.571 371.456 141.169 370.396 141.912 369.912 cv
143.105 369.135 144.32 368.406 145.556 367.725 cv
146.326 367.3 146.964 367.616 146.964 368.401 cv
146.964 369.111 146.964 369.821 146.964 370.53 cv
146.944 406.206 mo
146.944 406.991 146.305 407.96 145.535 408.385 cv
144.3 409.066 143.084 409.795 141.892 410.572 cv
141.148 411.056 140.551 410.831 140.55 410.046 cv
140.55 409.336 140.55 408.626 140.55 407.916 cv
140.551 407.131 141.148 406.071 141.892 405.587 cv
143.084 404.81 144.3 404.081 145.535 403.4 cv
146.305 402.975 146.944 403.292 146.944 404.076 cv
146.944 404.786 146.944 405.496 146.944 406.206 cv
137.963 371.71 mo
137.963 386.05 137.963 400.39 137.963 414.731 cv
158.955 398.404 188.805 398.404 209.797 414.731 cv
209.797 400.39 209.797 386.05 209.797 371.71 cv
188.805 355.383 158.955 355.383 137.963 371.71 cv
0 .109804 .133333 rgb
f
207.444 410.209 mo
207.444 410.995 206.848 411.216 206.106 410.729 cv
204.917 409.945 203.704 409.21 202.471 408.522 cv
201.703 408.093 201.066 407.121 201.066 406.336 cv
201.066 405.626 201.066 404.916 201.066 404.206 cv
201.066 403.421 201.703 403.108 202.471 403.537 cv
203.704 404.225 204.917 404.96 206.106 405.744 cv
206.848 406.232 207.444 407.295 207.444 408.08 cv
207.444 408.79 207.444 409.499 207.444 410.209 cv
198.076 404.882 mo
198.075 405.668 197.426 406.014 196.622 405.678 cv
195.334 405.139 194.029 404.647 192.712 404.204 cv
191.891 403.927 191.213 403.08 191.214 402.294 cv
191.214 401.584 191.214 400.875 191.214 400.165 cv
191.213 399.38 191.891 398.942 192.712 399.219 cv
194.029 399.663 195.334 400.154 196.622 400.693 cv
197.426 401.029 198.075 401.968 198.076 402.753 cv
198.076 403.463 198.076 404.172 198.076 404.882 cv
188.049 401.419 mo
188.049 402.204 187.364 402.675 186.522 402.492 cv
185.171 402.196 183.811 401.949 182.446 401.75 cv
181.595 401.625 180.896 400.902 180.896 400.117 cv
180.896 399.407 180.896 398.697 180.896 397.987 cv
180.896 397.202 181.595 396.64 182.446 396.765 cv
183.811 396.964 185.171 397.212 186.522 397.507 cv
187.364 397.691 188.049 398.505 188.049 399.29 cv
188.049 399.999 188.049 400.709 188.049 401.419 cv
177.644 399.82 mo
177.644 400.605 176.942 401.201 176.084 401.169 cv
174.707 401.118 173.329 401.115 171.952 401.159 cv
171.093 401.187 170.392 400.589 170.392 399.803 cv
170.392 399.093 170.392 398.383 170.392 397.673 cv
170.392 396.889 171.093 396.202 171.952 396.175 cv
173.329 396.13 174.707 396.133 176.084 396.184 cv
176.942 396.216 177.644 396.906 177.644 397.69 cv
177.644 398.4 177.644 399.11 177.644 399.82 cv
167.138 400.085 mo
167.138 400.87 166.439 401.59 165.588 401.71 cv
164.221 401.903 162.861 402.144 161.508 402.433 cv
160.666 402.613 159.98 402.139 159.98 401.353 cv
159.98 400.643 159.98 399.934 159.98 399.224 cv
159.98 398.439 160.666 397.628 161.508 397.448 cv
162.861 397.16 164.221 396.919 165.588 396.726 cv
166.439 396.605 167.138 397.17 167.138 397.955 cv
167.138 398.665 167.138 399.375 167.138 400.085 cv
156.812 402.213 mo
156.812 402.999 156.134 403.843 155.312 404.116 cv
153.993 404.553 152.686 405.038 151.396 405.571 cv
150.591 405.902 149.94 405.553 149.94 404.767 cv
149.94 404.058 149.94 403.348 149.94 402.638 cv
149.94 401.853 150.591 400.918 151.396 400.586 cv
152.686 400.053 153.993 399.568 155.312 399.131 cv
156.134 398.858 156.812 399.299 156.812 400.084 cv
156.812 400.794 156.812 401.503 156.812 402.213 cv
146.944 406.206 mo
146.944 406.991 146.305 407.96 145.535 408.385 cv
144.3 409.066 143.084 409.795 141.892 410.572 cv
141.148 411.056 140.551 410.831 140.55 410.046 cv
140.55 409.336 140.55 408.626 140.55 407.916 cv
140.551 407.131 141.148 406.071 141.892 405.587 cv
143.084 404.81 144.3 404.081 145.535 403.4 cv
146.305 402.975 146.944 403.292 146.944 404.076 cv
146.944 404.786 146.944 405.496 146.944 406.206 cv
137.963 407.03 mo
137.963 409.597 137.963 412.164 137.963 414.731 cv
158.955 398.404 188.805 398.404 209.797 414.731 cv
209.797 412.164 209.797 409.597 209.797 407.03 cv
188.805 390.704 158.955 390.704 137.963 407.03 cv
0 .219608 .270588 rgb
f
207.465 374.534 mo
207.465 375.32 206.868 375.541 206.127 375.053 cv
204.937 374.27 203.725 373.534 202.492 372.847 cv
201.723 372.417 201.086 371.446 201.086 370.66 cv
201.086 369.951 201.086 369.241 201.086 368.531 cv
201.086 367.746 201.723 367.433 202.492 367.862 cv
203.725 368.549 204.937 369.285 206.127 370.069 cv
206.868 370.556 207.464 371.62 207.465 372.404 cv
207.465 373.114 207.465 373.824 207.465 374.534 cv
198.096 369.207 mo
198.096 369.992 197.446 370.339 196.643 370.003 cv
195.354 369.463 194.05 368.972 192.732 368.528 cv
191.911 368.251 191.234 367.405 191.234 366.619 cv
191.234 365.909 191.234 365.199 191.234 364.489 cv
191.234 363.705 191.911 363.267 192.732 363.544 cv
194.05 363.987 195.354 364.479 196.643 365.018 cv
197.446 365.354 198.096 366.292 198.096 367.077 cv
198.096 367.787 198.096 368.497 198.096 369.207 cv
188.069 365.744 mo
188.069 366.529 187.384 367 186.542 366.816 cv
185.191 366.521 183.831 366.274 182.466 366.074 cv
181.615 365.95 180.916 365.227 180.916 364.441 cv
180.916 363.732 180.916 363.022 180.916 362.312 cv
180.916 361.527 181.615 360.965 182.466 361.09 cv
183.831 361.289 185.191 361.536 186.542 361.832 cv
187.384 362.015 188.069 362.829 188.069 363.614 cv
188.069 364.324 188.069 365.034 188.069 365.744 cv
177.664 364.145 mo
177.664 364.93 176.963 365.525 176.104 365.494 cv
174.727 365.442 173.349 365.439 171.972 365.484 cv
171.114 365.512 170.412 364.913 170.412 364.128 cv
170.412 363.418 170.412 362.708 170.412 361.998 cv
170.412 361.213 171.114 360.527 171.972 360.499 cv
173.349 360.455 174.727 360.458 176.104 360.509 cv
176.963 360.54 177.664 361.23 177.664 362.015 cv
177.664 362.725 177.664 363.435 177.664 364.145 cv
167.158 364.409 mo
167.159 365.195 166.459 365.914 165.608 366.035 cv
164.242 366.228 162.881 366.469 161.529 366.758 cv
160.686 366.937 160 366.463 160 365.678 cv
160 364.968 160 364.258 160 363.548 cv
160 362.764 160.686 361.953 161.529 361.773 cv
162.881 361.484 164.242 361.243 165.608 361.05 cv
166.459 360.93 167.159 361.495 167.158 362.28 cv
167.158 362.99 167.158 363.699 167.158 364.409 cv
156.832 366.538 mo
156.832 367.323 156.154 368.167 155.332 368.44 cv
154.013 368.877 152.707 369.362 151.416 369.895 cv
150.611 370.227 149.96 369.878 149.96 369.092 cv
149.96 368.382 149.96 367.672 149.96 366.963 cv
149.96 366.178 150.611 365.242 151.416 364.911 cv
152.707 364.378 154.013 363.893 155.332 363.456 cv
156.154 363.183 156.832 363.624 156.832 364.408 cv
156.832 365.118 156.832 365.828 156.832 366.538 cv
146.964 370.53 mo
146.964 371.316 146.326 372.284 145.556 372.709 cv
144.32 373.391 143.105 374.12 141.912 374.897 cv
141.169 375.381 140.571 375.156 140.571 374.37 cv
140.571 373.66 140.571 372.951 140.571 372.241 cv
140.571 371.456 141.169 370.396 141.912 369.912 cv
143.105 369.135 144.32 368.406 145.556 367.725 cv
146.326 367.3 146.964 367.616 146.964 368.401 cv
146.964 369.111 146.964 369.821 146.964 370.53 cv
207.806 369.25 mo
187.658 354.827 160.173 354.757 139.953 369.039 cv
139.231 369.55 137.963 371 137.963 371.71 cv
137.963 374.276 137.963 376.843 137.963 379.41 cv
158.955 363.083 188.805 363.083 209.797 379.41 cv
209.797 376.843 209.797 374.276 209.797 371.71 cv
209.797 371.125 208.428 369.695 207.806 369.25 cv
f
209.743 414.689 mo
209.739 414.686 209.734 414.682 209.73 414.679 cv
209.734 414.682 209.739 414.686 209.743 414.689 cv
209.685 414.644 mo
209.676 414.637 209.667 414.63 209.658 414.623 cv
209.667 414.63 209.676 414.637 209.685 414.644 cv
209.647 414.615 mo
206.675 412.319 203.522 410.36 200.248 408.716 cv
200.246 408.71 200.244 408.705 200.241 408.699 cv
203.52 410.344 206.671 412.316 209.647 414.615 cv
198.076 402.753 mo
198.075 401.968 197.426 401.029 196.622 400.693 cv
196.495 400.64 196.365 400.593 196.237 400.54 cv
196.235 400.537 196.233 400.534 196.232 400.532 cv
196.362 400.585 196.492 400.639 196.622 400.693 cv
197.426 401.029 198.075 401.968 198.076 402.753 cv
198.076 402.753 li
.83451 .888627 .901961 rgb
f
209.797 407.03 mo
205.269 403.509 200.331 400.748 195.157 398.745 cv
191.774 393.346 187.376 388.349 181.687 385.019 cv
172.044 379.376 160.24 377.957 150.806 377.957 cv
146.049 377.957 141.893 378.318 138.922 378.68 cv
149.228 371.003 161.554 367.165 173.88 367.165 cv
186.59 367.165 199.301 371.247 209.797 379.41 cv
209.797 388.616 209.797 397.824 209.797 407.03 cv
.0352941 .176471 .207843 rgb
f
209.797 414.731 mo
209.797 414.731 li
209.779 414.717 209.761 414.703 209.743 414.689 cv
209.739 414.686 209.734 414.682 209.73 414.679 cv
209.715 414.667 209.7 414.656 209.685 414.644 cv
209.676 414.637 209.667 414.63 209.658 414.623 cv
209.655 414.62 209.651 414.617 209.647 414.615 cv
206.671 412.316 203.52 410.344 200.241 408.699 cv
199.594 407.138 198.871 405.547 198.076 403.957 cv
198.076 403.555 198.076 403.154 198.076 402.753 cv
198.076 402.753 li
198.076 402.753 li
198.076 402.753 li
198.075 401.968 197.426 401.029 196.622 400.693 cv
196.492 400.639 196.362 400.585 196.232 400.532 cv
195.885 399.932 195.527 399.336 195.157 398.745 cv
200.331 400.748 205.269 403.509 209.797 407.03 cv
209.797 407.03 li
209.797 409.597 209.797 412.164 209.797 414.731 cv
201.066 406.336 mo
201.066 406.336 li
201.066 407.121 201.703 408.093 202.471 408.522 cv
203.704 409.21 204.917 409.945 206.106 410.729 cv
206.371 410.903 206.617 410.986 206.824 410.986 cv
207.198 410.986 207.444 410.714 207.444 410.209 cv
207.444 409.499 207.444 408.79 207.444 408.08 cv
207.444 408.08 li
207.444 408.08 li
207.444 407.295 206.848 406.232 206.106 405.744 cv
204.917 404.96 203.704 404.225 202.471 403.537 cv
202.236 403.406 202.013 403.344 201.817 403.344 cv
201.373 403.344 201.066 403.662 201.066 404.206 cv
201.066 404.916 201.066 405.626 201.066 406.336 cv
201.066 406.336 li
.0352941 .262745 .317647 rgb
f
209.797 379.41 mo
209.797 379.41 li
199.301 371.247 186.59 367.165 173.88 367.165 cv
161.554 367.165 149.228 371.003 138.922 378.68 cv
138.587 378.721 138.267 378.762 137.963 378.802 cv
137.963 376.438 137.963 374.074 137.963 371.71 cv
137.963 371 139.231 369.55 139.953 369.039 cv
150.014 361.933 161.872 358.38 173.732 358.38 cv
185.707 358.38 197.683 362.004 207.806 369.25 cv
208.428 369.695 209.797 371.125 209.797 371.71 cv
209.797 374.276 209.797 376.843 209.797 379.41 cv
201.086 370.66 mo
201.086 370.66 li
201.086 371.446 201.723 372.417 202.492 372.847 cv
203.725 373.534 204.937 374.27 206.127 375.053 cv
206.391 375.227 206.638 375.311 206.845 375.311 cv
207.218 375.311 207.465 375.039 207.465 374.534 cv
207.465 373.824 207.465 373.114 207.465 372.404 cv
207.465 372.404 li
207.465 372.404 li
207.464 371.62 206.868 370.556 206.127 370.069 cv
204.937 369.285 203.725 368.549 202.492 367.862 cv
202.257 367.731 202.034 367.669 201.838 367.669 cv
201.393 367.669 201.086 367.986 201.086 368.531 cv
201.086 369.241 201.086 369.951 201.086 370.66 cv
201.086 370.66 li
140.571 374.37 mo
140.571 374.37 li
140.571 374.877 140.82 375.151 141.197 375.151 cv
141.403 375.151 141.649 375.068 141.912 374.897 cv
143.105 374.12 144.32 373.391 145.556 372.709 cv
146.326 372.284 146.964 371.316 146.964 370.53 cv
146.964 369.821 146.964 369.111 146.964 368.401 cv
146.964 368.401 li
146.964 368.401 li
146.964 367.854 146.654 367.535 146.206 367.535 cv
146.011 367.535 145.789 367.596 145.556 367.725 cv
144.32 368.406 143.105 369.135 141.912 369.912 cv
141.169 370.396 140.571 371.456 140.571 372.241 cv
140.571 372.241 li
140.571 372.241 li
140.571 372.596 140.571 372.951 140.571 373.306 cv
140.571 373.66 140.571 374.015 140.571 374.37 cv
140.571 374.37 li
191.234 366.619 mo
191.234 366.619 li
191.234 367.405 191.911 368.251 192.732 368.528 cv
194.05 368.972 195.354 369.463 196.643 370.003 cv
196.85 370.089 197.047 370.131 197.225 370.131 cv
197.738 370.131 198.096 369.79 198.096 369.207 cv
198.096 368.497 198.096 367.787 198.096 367.077 cv
198.096 367.077 li
198.096 367.077 li
198.096 366.292 197.446 365.354 196.643 365.018 cv
195.354 364.479 194.05 363.987 192.732 363.544 cv
192.564 363.487 192.403 363.461 192.251 363.461 cv
191.663 363.461 191.234 363.865 191.234 364.489 cv
191.234 365.199 191.234 365.909 191.234 366.619 cv
191.234 366.619 li
149.96 369.092 mo
149.96 369.092 li
149.96 369.677 150.321 370.02 150.838 370.02 cv
151.015 370.02 151.211 369.98 151.416 369.895 cv
152.707 369.362 154.013 368.877 155.332 368.44 cv
156.154 368.167 156.832 367.323 156.832 366.538 cv
156.832 365.828 156.832 365.118 156.832 364.408 cv
156.832 364.408 li
156.832 364.408 li
156.832 363.782 156.4 363.375 155.807 363.375 cv
155.658 363.375 155.498 363.401 155.332 363.456 cv
154.013 363.893 152.707 364.378 151.416 364.911 cv
150.611 365.242 149.96 366.178 149.96 366.963 cv
149.96 367.672 149.96 368.382 149.96 369.092 cv
149.96 369.092 li
180.916 364.441 mo
180.916 364.441 li
180.916 365.227 181.615 365.95 182.466 366.074 cv
183.831 366.274 185.191 366.521 186.542 366.816 cv
186.665 366.843 186.784 366.856 186.899 366.856 cv
187.569 366.856 188.069 366.415 188.069 365.744 cv
188.069 365.034 188.069 364.324 188.069 363.614 cv
188.069 363.614 li
188.069 363.614 li
188.069 362.829 187.384 362.015 186.542 361.832 cv
185.191 361.536 183.831 361.289 182.466 361.09 cv
182.386 361.078 182.308 361.072 182.231 361.072 cv
181.49 361.072 180.916 361.601 180.916 362.312 cv
180.916 363.022 180.916 363.732 180.916 364.441 cv
180.916 364.441 li
160 365.678 mo
160 365.678 li
160 366.351 160.504 366.796 161.179 366.796 cv
161.291 366.796 161.409 366.783 161.529 366.758 cv
162.881 366.469 164.242 366.228 165.608 366.035 cv
166.459 365.914 167.159 365.195 167.158 364.409 cv
167.158 363.699 167.158 362.99 167.158 362.28 cv
167.158 362.28 li
167.158 362.28 li
167.159 361.566 166.581 361.034 165.836 361.034 cv
165.761 361.034 165.685 361.039 165.608 361.05 cv
164.242 361.243 162.881 361.484 161.529 361.773 cv
160.686 361.953 160 362.764 160 363.548 cv
160 364.258 160 364.968 160 365.678 cv
160 365.678 li
173.901 365.453 mo
174.636 365.453 175.37 365.466 176.104 365.494 cv
176.126 365.494 176.147 365.495 176.169 365.495 cv
176.997 365.495 177.664 364.91 177.664 364.145 cv
177.664 363.435 177.664 362.725 177.664 362.015 cv
177.664 362.015 li
177.664 362.015 li
177.664 361.23 176.963 360.54 176.104 360.509 cv
175.37 360.482 174.636 360.468 173.901 360.468 cv
173.258 360.468 172.615 360.479 171.972 360.499 cv
171.114 360.527 170.412 361.213 170.412 361.998 cv
170.412 362.708 170.412 363.418 170.412 364.128 cv
170.412 364.128 li
170.412 364.128 li
170.412 364.896 171.083 365.485 171.915 365.485 cv
171.934 365.485 171.953 365.485 171.972 365.484 cv
172.615 365.463 173.258 365.453 173.901 365.453 cv
f
169.67 375.5 mo
182.472 382.675 li
169.67 389.851 li
169.67 375.5 li
cp
.8 .886275 .909804 rgb
f
194.364 423.585 mo
203.688 421.643 209.797 418.414 209.797 414.756 cv
209.797 371.71 li
209.797 375.368 203.688 378.597 194.364 380.54 cv
194.364 423.585 li
cp
.4 .662745 .72549 rgb
f
153.288 423.585 mo
153.288 380.54 li
144.648 378.739 138.775 375.832 137.963 372.503 cv
137.963 372.503 137.963 414.489 137.963 414.756 cv
137.963 418.414 143.963 421.643 153.288 423.585 cv
cp
.6 .772549 .815686 rgb
f
209.797 414.756 mo
209.797 371.71 li
209.797 373.47 208.37 375.13 205.863 376.596 cv
205.857 376.604 li
204.57 420.341 li
207.886 418.714 209.797 416.802 209.797 414.756 cv
cp
.2 .54902 .631373 rgb
f
83.0756 53.9611 mo
62.7532 53.9611 li
61.4208 53.9611 60.1129 54.319 58.9662 54.9975 cv
45.6294 62.8884 li
100.199 62.8884 li
86.8626 54.9975 li
85.7159 54.319 84.408 53.9611 83.0756 53.9611 cv
cp
0 .109804 .133333 rgb
f
80.0186 46.6683 mo
65.8103 46.6683 li
65.8103 36.9185 li
65.8103 35.845 66.6805 34.9748 67.754 34.9748 cv
78.0749 34.9748 li
79.1484 34.9748 80.0186 35.845 80.0186 36.9185 cv
80.0186 46.6683 li
cp
0 .435294 .541176 rgb
f
82.5333 63.0142 mo
63.2955 63.0142 li
63.2955 49.1469 li
63.2955 47.778 64.4052 46.6683 65.7741 46.6683 cv
80.0548 46.6683 li
81.4237 46.6683 82.5333 47.778 82.5333 49.1469 cv
82.5333 63.0142 li
cp
0 .32549 .407843 rgb
f
82.5333 63.0141 mo
82.5333 49.1468 li
82.5333 47.778 81.4236 46.6683 80.0548 46.6683 cv
78.7461 46.6683 li
78.7461 46.6683 78.9128 55.6716 76.3711 58.4247 cv
73.8295 61.1779 63.2955 60.5049 63.2955 60.5049 cv
63.2955 63.0141 li
82.5333 63.0141 li
cp
0 .219608 .270588 rgb
f
103.801 106.645 mo
42.0273 106.645 li
36.0556 106.645 31.1697 101.759 31.1697 95.7874 cv
31.1697 73.7462 li
31.1697 67.7744 36.0556 62.8884 42.0273 62.8884 cv
103.801 62.8884 li
109.773 62.8884 114.659 67.7744 114.659 73.7462 cv
114.659 95.7874 li
114.659 101.759 109.773 106.645 103.801 106.645 cv
0 .435294 .541176 rgb
f
103.83 62.8899 mo
104.598 64.3766 105.04 66.056 105.04 67.8365 cv
105.04 89.8777 li
105.04 95.8494 100.154 100.735 94.1826 100.735 cv
32.4084 100.735 li
32.3798 100.734 li
34.1875 104.234 37.8361 106.645 42.0273 106.645 cv
103.802 106.645 li
109.773 106.645 114.659 101.759 114.659 95.7873 cv
114.659 73.7461 li
114.659 67.7841 109.789 62.9058 103.83 62.8899 cv
cp
0 .32549 .407843 rgb
f
60.1559 84.8472 mo
60.1559 88.1555 57.474 90.8374 54.1657 90.8374 cv
50.8575 90.8374 48.1756 88.1555 48.1756 84.8472 cv
48.1756 81.539 50.8575 78.8571 54.1657 78.8571 cv
57.474 78.8571 60.1559 81.539 60.1559 84.8472 cv
cp
f
56.5562 90.0882 mo
53.6618 90.0882 51.3152 87.7417 51.3152 84.8472 cv
51.3152 81.9527 53.6618 79.6063 56.5562 79.6063 cv
56.7473 79.6063 56.9283 79.6426 57.114 79.6625 cv
56.2404 79.1644 55.2435 78.8571 54.1657 78.8571 cv
50.8574 78.8571 48.1756 81.5389 48.1756 84.8472 cv
48.1756 88.1555 50.8574 90.8373 54.1657 90.8373 cv
55.2435 90.8373 56.2404 90.53 57.114 90.0319 cv
56.9283 90.0518 56.7473 90.0882 56.5562 90.0882 cv
cp
0 .219608 .270588 rgb
f
43.9739 70.3874 mo
43.9739 71.9364 42.7182 73.192 41.1693 73.192 cv
39.6203 73.192 38.3647 71.9364 38.3647 70.3874 cv
38.3647 68.8385 39.6203 67.5828 41.1693 67.5828 cv
42.7182 67.5828 43.9739 68.8385 43.9739 70.3874 cv
cp
0 .32549 .407843 rgb
f
42.2885 72.8413 mo
40.9333 72.8413 39.8347 71.7427 39.8347 70.3874 cv
39.8347 69.0322 40.9333 67.9336 42.2885 67.9336 cv
42.5497 67.9599 li
42.1406 67.7267 41.6739 67.5828 41.1693 67.5828 cv
39.6203 67.5828 38.3647 68.8385 38.3647 70.3874 cv
38.3647 71.9364 39.6203 73.192 41.1693 73.192 cv
41.6739 73.192 42.1406 73.0481 42.5497 72.8149 cv
42.2885 72.8413 li
cp
0 .219608 .270588 rgb
f
43.9739 95.6062 mo
43.9739 97.1551 42.7182 98.4108 41.1693 98.4108 cv
39.6203 98.4108 38.3647 97.1551 38.3647 95.6062 cv
38.3647 94.0573 39.6203 92.8016 41.1693 92.8016 cv
42.7182 92.8016 43.9739 94.0573 43.9739 95.6062 cv
cp
0 .32549 .407843 rgb
f
42.2885 98.06 mo
40.9333 98.06 39.8347 96.9614 39.8347 95.6062 cv
39.8347 94.251 40.9333 93.1524 42.2885 93.1524 cv
42.5497 93.1787 li
42.1406 92.9455 41.6739 92.8016 41.1693 92.8016 cv
39.6203 92.8016 38.3647 94.0572 38.3647 95.6062 cv
38.3647 97.1552 39.6203 98.4108 41.1693 98.4108 cv
41.6739 98.4108 42.1406 98.2669 42.5497 98.0337 cv
42.2885 98.06 li
cp
0 .219608 .270588 rgb
f
97.6324 84.8472 mo
97.6324 88.1555 94.9506 90.8374 91.6423 90.8374 cv
88.334 90.8374 85.6522 88.1555 85.6522 84.8472 cv
85.6522 81.539 88.334 78.8571 91.6423 78.8571 cv
94.9506 78.8571 97.6324 81.539 97.6324 84.8472 cv
cp
0 .32549 .407843 rgb
f
94.0328 90.0882 mo
91.1383 90.0882 88.7918 87.7417 88.7918 84.8472 cv
88.7918 81.9527 91.1383 79.6063 94.0328 79.6063 cv
94.2239 79.6063 94.4049 79.6426 94.5906 79.6625 cv
93.7169 79.1644 92.72 78.8571 91.6423 78.8571 cv
88.334 78.8571 85.6522 81.5389 85.6522 84.8472 cv
85.6522 88.1555 88.334 90.8373 91.6423 90.8373 cv
92.72 90.8373 93.7169 90.53 94.5906 90.0319 cv
94.4049 90.0518 94.2239 90.0882 94.0328 90.0882 cv
cp
0 .219608 .270588 rgb
f
107.443 70.3874 mo
107.443 71.9364 106.188 73.192 104.639 73.192 cv
103.09 73.192 101.834 71.9364 101.834 70.3874 cv
101.834 68.8385 103.09 67.5828 104.639 67.5828 cv
106.188 67.5828 107.443 68.8385 107.443 70.3874 cv
cp
0 .32549 .407843 rgb
f
105.758 72.8413 mo
104.403 72.8413 103.304 71.7427 103.304 70.3874 cv
103.304 69.0322 104.403 67.9336 105.758 67.9336 cv
106.019 67.9599 li
105.61 67.7267 105.143 67.5828 104.639 67.5828 cv
103.09 67.5828 101.834 68.8385 101.834 70.3874 cv
101.834 71.9364 103.09 73.192 104.639 73.192 cv
105.143 73.192 105.61 73.0481 106.019 72.8149 cv
105.758 72.8413 li
cp
0 .219608 .270588 rgb
f
107.443 95.6062 mo
107.443 97.1551 106.188 98.4108 104.639 98.4108 cv
103.09 98.4108 101.834 97.1551 101.834 95.6062 cv
101.834 94.0573 103.09 92.8016 104.639 92.8016 cv
106.188 92.8016 107.443 94.0573 107.443 95.6062 cv
cp
0 .32549 .407843 rgb
f
105.758 98.06 mo
104.403 98.06 103.304 96.9614 103.304 95.6062 cv
103.304 94.251 104.403 93.1524 105.758 93.1524 cv
106.019 93.1787 li
105.61 92.9455 105.143 92.8016 104.639 92.8016 cv
103.09 92.8016 101.834 94.0572 101.834 95.6062 cv
101.834 97.1552 103.09 98.4108 104.639 98.4108 cv
105.143 98.4108 105.61 98.2669 106.019 98.0337 cv
105.758 98.06 li
cp
0 .219608 .270588 rgb
f
90.0896 62.8884 mo
89.8303 67.2525 86.2068 71.8522 81.7789 71.8522 cv
64.0499 71.8522 li
59.6219 71.8522 55.9984 67.2525 55.7391 62.8884 cv
54.0526 62.8884 li
54.3144 68.1831 58.6914 73.5397 64.0499 73.5397 cv
81.7789 73.5397 li
87.1373 73.5397 91.5143 68.1831 91.7761 62.8884 cv
90.0896 62.8884 li
cp
0 .109804 .133333 rgb
f
81.5182 92.9821 mo
81.5182 97.757 77.6474 101.628 72.8725 101.628 cv
68.0976 101.628 64.2268 97.757 64.2268 92.9821 cv
64.2268 88.2073 68.0976 84.3364 72.8725 84.3364 cv
77.6474 84.3364 81.5182 88.2073 81.5182 92.9821 cv
f
78.5776 92.9821 mo
78.5776 96.133 76.0233 98.6871 72.8725 98.6871 cv
69.7217 98.6871 67.1674 96.133 67.1674 92.9821 cv
67.1674 89.8313 69.7217 87.277 72.8725 87.277 cv
76.0233 87.277 78.5776 89.8313 78.5776 92.9821 cv
0 .219608 .270588 rgb
f
78.2682 92.9821 mo
78.2682 95.962 75.8525 98.3777 72.8725 98.3777 cv
69.8926 98.3777 67.4769 95.962 67.4769 92.9821 cv
67.4769 90.0021 69.8926 87.5864 72.8725 87.5864 cv
75.8525 87.5864 78.2682 90.0021 78.2682 92.9821 cv
0 .109804 .133333 rgb
f
77.5986 92.9821 mo
77.5986 95.5923 75.4827 97.7082 72.8725 97.7082 cv
70.2623 97.7082 68.1464 95.5923 68.1464 92.9821 cv
68.1464 90.372 70.2623 88.2561 72.8725 88.2561 cv
75.4827 88.2561 77.5986 90.372 77.5986 92.9821 cv
0 .435294 .541176 rgb
f
76.9715 92.9821 mo
76.9715 95.2459 75.1363 97.0811 72.8725 97.0811 cv
70.6088 97.0811 68.7735 95.2459 68.7735 92.9821 cv
68.7735 90.7183 70.6088 88.8832 72.8725 88.8832 cv
75.1363 88.8832 76.9715 90.7183 76.9715 92.9821 cv
0 .32549 .407843 rgb
f
75.5543 92.9821 mo
75.5543 94.4632 74.3537 95.6639 72.8725 95.6639 cv
71.3914 95.6639 70.1908 94.4632 70.1908 92.9821 cv
70.1908 91.501 71.3914 90.3003 72.8725 90.3003 cv
74.3537 90.3003 75.5543 91.501 75.5543 92.9821 cv
.2 .54902 .631373 rgb
f
69.5432 90.5906 mo
70.032 89.3479 71.3381 88.4587 72.8725 88.4587 cv
74.4069 88.4587 75.713 89.3479 76.2018 90.5906 cv
75.4577 89.5566 74.2437 88.8832 72.8725 88.8832 cv
71.5013 88.8832 70.2873 89.5566 69.5432 90.5906 cv
0 .658823 .737255 rgb
f
70.3678 93.9424 mo
69.7311 93.3609 69.3376 92.5591 69.3376 91.6737 cv
69.3376 91.2936 69.41 90.929 69.5432 90.5906 cv
70.2873 89.5566 71.5013 88.8832 72.8725 88.8832 cv
74.2437 88.8832 75.4577 89.5566 76.2018 90.5906 cv
76.335 90.929 76.4075 91.2936 76.4075 91.6737 cv
76.4075 92.5591 76.0139 93.3609 75.3773 93.9423 cv
75.4916 93.6442 75.5543 93.3205 75.5543 92.9821 cv
75.5543 91.501 74.3537 90.3003 72.8725 90.3003 cv
71.3914 90.3003 70.1908 91.501 70.1908 92.9821 cv
70.1908 93.3205 70.2534 93.6442 70.3678 93.9424 cv
0 .568627 .639216 rgb
f
72.8725 94.8887 mo
71.8937 94.8887 71.0079 94.5269 70.3678 93.9424 cv
70.2534 93.6442 70.1908 93.3205 70.1908 92.9821 cv
70.1908 91.501 71.3914 90.3003 72.8725 90.3003 cv
74.3537 90.3003 75.5543 91.501 75.5543 92.9821 cv
75.5543 93.3205 75.4916 93.6442 75.3773 93.9423 cv
74.7372 94.5269 73.8513 94.8887 72.8725 94.8887 cv
.447059 .741176 .796078 rgb
f
72.332 68.2141 mo
62.4448 68.2141 li
61.7917 68.2141 61.2573 67.6797 61.2573 67.0266 cv
61.2573 66.3734 61.7917 65.8391 62.4448 65.8391 cv
72.332 65.8391 li
72.9851 65.8391 73.5195 66.3734 73.5195 67.0266 cv
73.5195 67.6797 72.9851 68.2141 72.332 68.2141 cv
cp
.6 .772549 .815686 rgb
f
78.7461 67.0266 mo
78.7461 67.6824 78.2145 68.2141 77.5586 68.2141 cv
76.9028 68.2141 76.3711 67.6824 76.3711 67.0266 cv
76.3711 66.3707 76.9028 65.8391 77.5586 65.8391 cv
78.2145 65.8391 78.7461 66.3707 78.7461 67.0266 cv
cp
1 .247059 .25098 rgb
f
82.3936 67.0266 mo
82.3936 67.6824 81.8619 68.2141 81.2061 68.2141 cv
80.5502 68.2141 80.0186 67.6824 80.0186 67.0266 cv
80.0186 66.3707 80.5502 65.8391 81.2061 65.8391 cv
81.8619 65.8391 82.3936 66.3707 82.3936 67.0266 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.0.0
%%For: (GTal) ()
%%Title: (1610.i123.009.P.m004.c23.360 degree virtual realiy icons-01.eps)
%%CreationDate: 10/15/2016 8:10 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B7&Amdl.,QhW)\,:c?QI<nN>$@]IdpM]LP$S*%d)D(Cnu74#RV5<Q^ZSJcrHEhdg>8E;XJ-rD5qbR=\'"p59Ymp;tLCc@gM
%j&5'4V8At-'G_-V.Hm'q:i?5On(t,-DU?-F9r1c1Sd"Mt:9RS,qYbH4e`lan$KYX&G%%Fp%!QH?^OfLeo66nXWmso()/mb^n=-Pq
%n+=n?K7[*&kb<Mk&&7ML;ih$OdrkOqm0kW7"bQi;!I7VS];qc=O`6Tb(-[/T2>+:m>+]Y!K5Uk+c-Ni#MJj.="jaqG`,*(D9,+uS
%FDJSDT\4$H5t_@rrYFF(Tb8?qL96$"V\#bXe%rp'B(<C8h8LmmHHH:5<;KPSTD56Dd=q(.;8rQTZL_^RXqgS\+j/KkWF-U48,tMT
%QuH8n&#eXu^afd\,Y>Jsl(6FOVu7"'&b#/nBAHU*&5Yfr\lgitMjfB-aWFr#W'?sfWhgH4_P1V/7E7"t\lLY<,1eBWY"Te88FWr'
%r4Q'S("=-f:MPL5)sfH^%r**KJO<c#*O^RVgNIW<jB?ZM'c".,B`p"10RheqeOV8);P6gR@_^JU%L/TJS^nA<BrU#=iP!j\Zd%4-
%!&[fBKktscp3u0F&\=pAHGM)07E[*XL2@`C_[(&+Fpb5fQ:CO!o>D(,nM"Gl.rPYLGe;QiDRPlI*N40T;l+N<p6ptC[r&8*L_%Y>
%kTgWs4=$c=pL"Q>6df!%TY-P',t`/m:R8881-@X7f:"*Hc(W$@W_*:'<2g=AE8<4AfN5mRL!m.jd"f4?r6ofdZn2,s?2Q7?_lLA/
%hn"hlFWKr9]"%)'oXK.iZ7q\Xi@iBkA<qqk/Bde*9O/I`\1XXu>uDY)_.9^,am]^'0j2&Gai\1BZs:U4jYE_'ID"nCQ:6l34socI
%nW4ksO=VdmAW"+pBR!n9iGne4AB5R9@P[!pjAt&'VXP8J+B/&,]SGJX%jPHVM8,-$r5>[iYXI'`'Rg\`G_29E0.^,E<)A+eO>ZsS
%1qo%&_HJ/CKqsDRKrFK>4=[iW$jcD-FeX7-5-1b<M>2kJO@T5eX@,JacG_qLEHm)WON4T&KkSEBa<Q/n04[oC!IdZ#nIg:[1?9$3
%7:cgK&],7s@%!]@&FlG@KiKKk'XGbi6?o2?"S[KK,$p?X8eu]-eL$H4s"Fm;)!WM)8<4/(`GOZJ5;ASQFlZE@76HO$Qj+F]a$VEh
%>ETPi-pqZoW6V*bKR-/,$^D;r&N5fVDM@]dI7!Y%A0F&Z5-1-55=%I[$d0@>M[[OPnP9cN)QM/#;>3CB+q(%B$!!!i^N]r(%pNu-
%c9bsYm6G?2fEPeZUrQt^$<qsagS(_/g-D)nERNmP84%>aP/EGO`o9iq<TkNR9;khO5>;g#ic"A50Z<GT>Ps,o9iG;S^VrFl(;JmJ
%n]u3nDo[],GN;!7'=Zt>nZPn)^Z08&%j%oR`2365r2Wl;n+^,b;keaSkHPNe;q/#G*W?]/aJ3@3%F_NU.+Rf#AEl0o\:2DO.iqqo
%9^uu[4oBBcED#ALgu,eRMoWbS5PhO]'tirO*i2aDqur/9<QNj4%)8O'A=8H*%e3ZOpDlW#^gC5'jb"a%lmOSQbQ&<ERT@t=V?VlN
%r!c_4]+Q1q'r1OICSY6rTiDh+Yr'NkK6sJR-/emXk^j_bC0/C7=K:iE+:AX<#KTooCrI)[Tp2Qh,6`=_m_Nhj2;L["%Mi^B$?_'"
%>mW/O(+$erWoG8.e1KLP5PeD1%PWW2qA"At\CPK;U8"[+^IQ^@Gu,64/+BS`C'"pb_JF<N(6pWf##A]g^/B^',W\1)R]i4>J[1&7
%JeIRU.$SrmjT7Xh4;<i^'dCM5dtR-ZW(L'S9GptU=u`a.9?8mL>hm+jj:5lpnr5C*<Wn+?<?1.Yj?[5YZV`8NbJ9G+lE9=88/]tb
%>Ver$6BOk&4il$8A^WO%=paNGe3Yof01_X5U/1%X&l5Dr&.+'iR@XtWW,&JE+Y6G4#?_LiLS[B2LXcI]=n$(P6*q1r/u]2V<^`cT
%AVOqE1^`MM.#:@h:+b3/.FQI=fsWRrX95C5WA[bML6N"k5g5#s`0j&?@>X,=CmZAo<4X1TRXemG1DJLR'idCH4dM%ERMsb8.%N1Y
%Ac^#J/BX(b,jV9X>J,Sl+=0f`<rnl`+D25M)f$@KX9b1Y<>IDWgX?:E.AgTG[38F>Y='S^SqJRl;_?2H2NtL]<IC<mM$-:Z.3sD=
%"Z!sG/LjYU;D^-tFMr>kZNW?\iE3g2+eP,-g:o)D+([i\O_o^hXH^Ct(^X#&2%S[fRn4f(G_!_ckQF[J4QTH1`:Q;&cq--,PR'-f
%d1H`qOp"cOTG")b#^$I(jmaR11?T-?e1m83Z#m3I$+6IiZ(28c":UKM4JHLGCF]I*5NKLOidlmGG<,2QO,)Un/>'/gN/7fpS4&$\
%@2[G7`'")@'1D9)iJ-7>8Q!f"?%D#U--MWC>=)o[.7kDC4=Wfd]VtEuADt!D+]ICc7:JsS4Oe_CAF0tNg=SE2Na3*V*]kk#,Jkao
%gJoHSL'FY,n:38<CX]^K7gNp)(Fu1%6cf]=$(HWoZ)l:;+osQDH\Ng#O_q6PH827*.71P).Ei(anV#[$<%:d7d%#dpJ7NJh(!p`#
%inSgU'hqmT/W.dh>aD@K?*1K.HR'HEa$l%1p*O4ePtb%F=-,$[NW_^-%N_S,pc&kf<D-;2T_FbQMoI8YNC("8MN#MV$?kJ3/eU4;
%D"eQl7CT+e('qbhVM.pCjP?b-(8P$Y80F/g[Am%?4@9]*fjl,86I\kj;^CUiobL0SM?("-Z'JAEGK/UYMPOMi/RF6(<i[*A5Y*_S
%V%H[1+UBK&r/`lD`a%l97<Op3A.[:KM?]+Tb$P9Q-LmMB)Tc6#j,lo,`7[_=L/tF9[T;&0RLrY[DaeC]oW2RdKW7[W!XMTn_tGa"
%>c=E"\RN`soMY6&CWd_U)l7:J%>b!Hm-[U722-HIahj"@FBdC)VCS_YnI:P??P;7(InBO'16fea1sMfad&J@,*rC.T4>JHZHl@YC
%W.Us?CfSGf;%<iR:nfR4/ug:f$^0u:72h,Lh6IkRHLP4fD)iRI[OYsARP%<`U</]Qbgc,ZpsXmM!<]@=4J:()fJC7?*\:4i(]bm_
%,[i5JDmJ%EctT.o$,f9l;3<ia(:#:S2R#"^g^^@nX\/L,<hJ;U$^FP%[]8ZAIK:&ViNO^e<Y,@p3P.V@(O[3a955Zp`3PDn$?A9E
%c?5jL/!GgAS;13J'p8^1_maLAW%n2cEWM=cd>S7clCjAD+]uhjLpE';:cB:>prG2_Y96.O5(o:g8k[+5_IBCb!Eqn1a@9@!n5L\Q
%?`+;5)PlT$:;^s)1sR*d@Gt2&@>O-W81/A,Al?TV^F@CSnS_)p4^3Vpi)&U6k,Er-U`";]p7Z.gBiSRkK\VE-#PI##.Ls,7cqThR
%Mr]47N\SX('pb:BatA5s.id4c:"Zg@?]T(f-1(?1Z!rIsJs$7`Wp#\Gdj-.TXpD7.OA[e5-Y/,?!]Ycu/[3D>.^CEi>P:e!m"SOn
%(*`.W0gdMYa"#SEW5A0s",04/jm\?kO6Qs`mK`n/91K/^G"#]G`)QhC-3=Mk1B85_5atTrOgG],CIl0VQ$"P2Y]#XJ71,3K'RC!7
%3pDtR=X^E=67];FU5IXG-KEceP1UAOdBEk%<a436_IJ0b1"dn)8l?VT?IF*"7mqGY&@7U7e/[b'pfj8PkTi\Z&n`afC+>A$AVXtg
%P_BmNkU&tdP,?0?_>p;8Lb.#Q7C9$>83,6HW/Tho6SU-Yg6FJtZj<`9AO]60DF>F$=ASYQMAY7i69WG;5h^`OMFTiL!mmsG%9+Nd
%Y`XR5RN-hbB1"X(:iS1)OLE+QX"rpeK^Va/"lNgR^k.)S>I6+M<6J6p@mj?H>+RWML;YHu&Od"q%Im$t,s[CH_^0W)]+a]V72K]>
%XGg2Ul`mT)5iO15KrSWXRZMnR<^WFeV*`P5?R'C=?-cI-:sk4FlH$R\%5S\,G3bl(-T$BlP/sCn;;+0NEe#QSDFKotn`TtnFP*4B
%DEt_j"SNCLfU97X^dSK*%pdk_qk7mUoZnu7CGc$-=5n+$EMTcn2T"QQOa8rugZW7t%[%#VG"cRkL3XC@BP[At?*^ffbFt&kMkLMm
%>r5lGO\Y`aU'e4QPfj)k(_!@[G<mG#_gKM=]qj<#mZZjFh_!&LF>O9P,I1oKoJ*1s3-+L4%J$f@IMS4-`MH1UKfN[uH4ZtsY`bnf
%k]5'&4Z%O"\;0I4%$_Yl-/-/U5aLe-Htd\96II#g-uGsl:UGEl?4T&Sgj1doXFuVB"N&,/b$p%TM5K5=dO9#m/-X:.3ulk,""#ac
%(F,o4m;,8f8!QFC'H+HUqhhFKPV*A/6WTX)*?\?B&/UXl2Nk1tO!;8*]Zf&q.OnYJ=C'E9'rc,)7VXq7MSMiC&#j/Nh$PGMP3jQ1
%K5(U_+JfP%[5`i9NWPt3LJU\b?<J7s81tSt?`$1#4CiY\ISc[t_CU[?@[`EEA#(U0$HO#hF%O9Rb9dQj3F`ZThdflDDZ'8PU=F3>
%8(C'%/t$6l/rJ/\Y]O6:N=L%]7h3+9-1Y8=k7t!,eH:+3;!36]nAD,T)41#Z=n^bRl'KO=l@71&KQAu]*foT_lbgZo4B%L.3E#H:
%M2k's'T2Nbijg]o+jgZ0:^^>WQ&=[gj&/6s&Xt8/8UUXK+\iIi<dN!:D?>RJa?sl8;`iC#7,DWd@jA$VmiIdKgraZZCD"/-#U0sC
%j^X5&L)rq(dKNH/,],uk*%`T_M+A-)^(JAC8)Ij$KBXd8C(^^D@Z_Yk>aD=,1&W6U+>$r-'S`?gdJ0B'VthJkq'CCh:g!4SXpCZ0
%V3iEcJh#/>#sl*g8AY?8"XSU@D4Vh1`Pdj(nh0'/d&&)+8*IT0C`I0X6%>mp_LjLf>_L_Uob!)$&+)D-c%CTl'ffW\6IgeUA,KBg
%Efq,FCTJY[KP$H6#$2VT$e#]@$'An0P8.?7TGK4UF,e;ZPE$IZI/0Omo\!83=AtAbB?L2n7g`cm9=)Pb)'s=pq#YoIc@*PPcZMN8
%4gfsVN2tuM+USi!q//`.#sGoq3te*+pc(7.,Fr)ickm9&2mdHhdo@W:UG0cC*Cc7$_T@]]$=Ba180erF#'/+TLA-AA6g21POJXOD
%eP5rG.mEqQVGI!Q/o[jmcIk7qGGWE1J_WU<Gqu_*k/0d==Fl1EBd-R@,"N`=TEL4@1ld2(k*b;WULAtJ<)R'u>bh/J'a\:Tm?EW3
%l2O5R2Z+mT/].,S<U"ISQ=B.-U8AM`c1H_MGgY98Oe?0u[$VeO&^!7]*&3I+j)%SPUsQ5CPmmFr2rW4ZFCMi;Pr]ug!L78P]ONkj
%glH$L<>![LcZ;HtTBuQpk)$ARjXiRu+?4ZM`\h(I9hoPab?GC(Kk!\8\8^Zl`u6T]<?eQ)8cV"i1l_umj2+#5*XJZj1`qu!,t<qG
%U&3=Jh5mF@,B=Qm;)75j:\^0oFe85/9\7I]8154s,A[mrD/'Q+$\]-,+@^$p-i8)-%-JnqV$ms#=[N+^hBD'D!V0T^cc[BO7Hn<K
%K!H3\)JV%fZ55mcORuBCi^s93US1N4dAn[mF?@lX03jbS5=W.r#t;nTeZpS!0*0R9e]Sht8<n1.Lf9df7M_(jkTO0#aPG>j@a1]=
%1c-)F7SG:a;nW5bW[K'3?q--ooL=\'En?"ZJg/2K;Wkr#<rW4d%XU5i_Vt8$[LL>U&1<o?32Mh_ba5KbY^=CU;1g/BV\#LIohG('
%HIPBI@7GbA9g)fr(-8_>54UilV*K)-dciBK4OHS)4Mg8<DZo/*AO;Z0-i=`]l1*DITi@cXaL4Ja_l1AHI;=Z\<XTq;ZreW[1.%'D
%[4UGbLKrCt4tA[:6VD$5I1Nl9r,BIP3OZ3?\EF8BHTq(Q9"W)=FO?G6-cDoq$f5/f3j@]G$fl)jiGc`!fj+G,4JcM3Ta@2_.8)?G
%dF^`$(2l/_j,lX).tUqb%i_^U8U_m,K`+Q"1RaBMs);fh=k*'k0;(`CQF.MIB=@:C8e7BS^r0nV/mSIX99I,??TJ1/q-.;i8d>7c
%@SYKPbfE(;5V9*N<(WS!Lr-Up,Scnm7#H[-A.mT2EA#L&+O#[9?57Dt7^52l*j0/)\5=1.ck@p;Wk^bk'9/ZAcjP2gnBbj/=<MGD
%D%Ma1pNG4hdB/3"M@m38%`fMK9u:Bk6>XTg4G[oI],aBU0"Np&`:/juB0$^XW-$XVcD6-#Z)K'^^"q%:/@uEga<0ep0lGTZ9=AN'
%E/*^pA0ma/&?B20ck3(,joLJSFI<,;=9X?0ZZ4sHPm<>Bc#D["#`i/t:gJZabhNrJ_^Q[j^3"Yrcul94_M$MNiQrsETP-OAdi_"$
%N6:6CUR-YE8`!o"I:**+ki)^3H$N#N5:ZWq0XYRX=M[k+@n*L_W:M2e!pq^^\jW"'1p)XrJ2KhI#sC/O]0+J@h%E?sn3H?'(b30#
%Ia#`A21_UIduX`J-H\kRKRKHU9IrW^^+%GV2"F?)=N$=(5QYU?\TDflM/@!:@30$6_sb[s)&bcYN?WD>7'=nOYa$MLUD2.6P4umj
%:Q_d7`JMOSH^1[lGX*H9bLF^s5G"02?j@Z(`t@6c1K'eo*YUD_as8I!GSdh3OWE3E#S<jPp1bu\JkTo+@c<9E($V>d<Xa/9kl3$g
%J3T+q\H;#>k`U'VSKp8[KQgP$KErM%IYY"t*@B3=9!giY34?6!^"HsW+H-ad@<7:5YG(>P1F'bS93)GOK^3*4dG1rt9K6Sm]sYA3
%?.OoaS;l\MM-MZ7Q>Um:=A$3VM`V5qDb]jZ2YNQM)7Ocg*9h_?_Iatl40FXLM%rI<ei^L_DkoQ^q@sW+THC0N0L?g=lD3ns[J$j8
%6St*JN_V3pTS8PcTb-J?M#SFk<I!"/oA\3O9/_5)eY-tN?DGS7C5Q#%(Gu_!_/r5\VhgeH/\0S*ZU8*pq6!&o51,N;dok:94YsN:
%/4e%fb:ZSWg$"R%(tI+HB;q'@/I(JCe.U^k+a]_Q4th8Vs!W7o.jQ3ddo<4:Jm[/5#kqP4;B^WaM6p.'f$R9LTB)(+UnQe%Y2+c=
%l&(lKC@>#<9q>[:0"Rg?3Y3<d-hJMXAHFBWKI;o`kFrlVhRUQU)6GphV+#eBTZH)KDV(]Q5d'R!6D'i$k20li\e_G-_?rlO;,[Cu
%_.9%05,a+"3j2,")X/MdEF:c'E=B-un\->$>L?0`SV/-A9NZCIjeFhLH:]N-b]"C9Nn?#K$D\HSVesRF-"W7Q]H0ft-+X/25dATI
%a0BX41B"'RnWB21BuuWjJ)u?Zj$md>$#ZgmBrhYcZrn.P@KlK48_\Eq0SJ/k7!2Ep1fZ"_-Xg$?V,F9:j=<dm/*+Pl`UlNa^Ms(:
%KlYpJfjMd6"6!AP`U\K#^LSLMO>2#PKVsL%n1hUO%_l6,W_SeYcnmI"+J&,A8sRjSd_./I/^3]b)"^,nIm*EoM3]Jl?8rUM.<'/)
%m<p^",4@gB)NLQ;&%PqL2NN48Fp$bIj_;8HL&n=l"Y!n+GC#f\k?-T#J'bmB?ngs('!\'NiS\h`*b_u:&G+HpYJiZf@&Gl8S#a6J
%Ye/IMlJ25G_/"-&K>P6n53VX-rtdL!gP=\Fa2>d2B3itMl^%*E2rLo>EL;WnAm0-om[G-O08LR%/T7TXK*M<5iOUJdfJ_e2Puk%E
%]+;(gc>V6Z5sa:[BBa((S`]`?E7F-C`>O'S'i!&-FP08[S#ISVL1CA"/KN-qY`47UX4mOjZoVJD?Y#X\J=T`C?0`6h`d]Q>:O!_0
%C[88q&iF4S"]5Bs"!=6UM5oc8-lE<t"s6aj*;')5W28Y&;"P@uf-X&D\u)G*?oSGcr11<tnCV'V<eoCH[T`0qghF0bNM*a^mkkVS
%<V&t&E)J*lJp*phhhA/ci^"20I[ablPiF*0-;$ltf\Wg<_bR8c59mI58P6;bL]Sf=-^H(uSJ%&9Z@Z"i@YI5I;?^Y(N/9LC6JPNh
%=&#JU*Y!D><3Vs/]g9!]$MJrA#=1CF`b=gIHb1k_h&H&`$N$Ahlb<g4dpr.qO[qnN77#XeRVXIYlti[2Y;[!q&Nr\1rtm96;c@6p
%PsB5&;DC$p.:pS:>foOH#0:rBX*%4,p$$Lk-*TPNG<O>B)j6$h]@7DhYN.H1mmN-&eYrk7o;IDDT)^kID$tftmh5PQ\7C8s-3YSf
%$Tl9\9um=H#Z5-XaJ</3rJp(Fh_uM$!qli+ZYoPRU-9,SX\`jk_7mLVj1[:nhVY_,rFE6[GYQeEc/P\TL*!q12f&s*@5+^V1,VB+
%7*8I#:I[ZnV>Anl,eH%r]pJlm!,UMf9tRo[[C*%N9'p/HeR#B*"ESmgYjf*WY+:-;HRpfb1^+5sn1nj/;ek+aj3t+pT&'7\1HiY)
%4j??t)N:EKYNf0HYO%Q[&,ohcJNqns?sm`bTC-Hsl7+CpO.<4KEQV%unK<\KfT,&q\,IN=M!er:$@ab:6U.PU[S+&A]=)5(0K_1.
%J1b&[5K32qW`?=H<lsn`(G`3Hb;(Ze!b#:_Y->J0LKQJbAf2t$@;+]:kgD4\e"CibWi6h8ULKI-PRQWhaN1RodkD3/,XXF'h:J^:
%rcg`AlDgueiqNLV5-DQF.WeX'W*.P2q$.=C%NRGI(4>+MC'G[)&S`4(Wi"]L1[qBB4s"GRr[N"he?W6r3D-<L\obG1'O]^J_h:g*
%!26EQ#?3IM62%hKJNOWH;1*Xg(&qNl5`(Maio(L?$J[ub!M9^0keec?!ro:i=-9*i?&n%=&f_s?]("t"VaGr19sfM34D^\G#4:HF
%_4dSGi%pZIY%9nEQ6U[@cs;ltW#\IX6<Sp46CA`iVA_3BA1AlDato8kM<*m9Vl`!'YHdCfrYZr1qRJh-jA-frK,i3CUVD<W%s%T/
%s$C%c*E8[ppm(u`6\DBnTX@nKC)gnM*jhXs[&0kbgBt;?%4]_Tp1E:G(=;n?BSC#V(r@^I:diP/N?aLE"g-C-<pW+f/jl\B3^0oj
%e\tpD'AC/0(uPH6PQ2LLJ.NQGUI*MrJ0(S#Gr@Zc4g3q3!E1ISeal'Q<DWb1A<:09/ib5ejH4AU;Q?%1F=WPrdO:SrX)++CnuS*q
%gCh=Qjc9.H$).hZ`>(IQOE7WmAYBc,P_UPoRA*Y3(J>NT]=7cinib^!")1"MJ.>/-.UAlAO.Zbm6E1/oSsXVRJ!G$hrd=?!h>.6*
%THf+tA#]M?<QkeL5R$>!5`>uE5U$sJO,<6g.Xo@?6:3*mej<]bV)h4'd2Z"g+rAQReY@5APS<Gnr^]lSb5((bK*2_'J`%]n`Ap,4
%=6*q_Ro+W6o"lT`!%_2;;6-@K<HN;68eJ6riSHl"8)95(,cF`O8l9`)<SDDdRC3H.W_udr?5*iDTJNtr"&:E2H>jt9U90fCK,_1c
%\4[ZLL\l'39II;I+6eB[_o1&\*o_G]OOT9!%W_Wkn2`B=7kqs"2EYV&H@hgiPRUMgWl1c$f\QQhirM(o;oHqoGH62!28GdBSjqms
%-2@.AC\)\H&^Yg"=iXh(C;"!+gfc<]r,^G(_p(WS_SE/R_ls*En,sAM]j>P<:&Um@C@m*9V9fQFf>&qoDW8^p(V6@!joPPN]n_<>
%H]Vt=GVmgo>&,NbrJft#--=O3Ti=:-9_W)#R5kSBa!ZKRgk5uH`D21nWejG$YNP;/'TMf-9YoXXl</,kXW>1W<scpL_U(6+"8-tX
%RuJ+U@\R#qQ:;mEV;U=aI'[d[@O>7Q-T\euc?Y&`_6A,CC^'3PE4mO8;qD@$b'YNEC"Mt(*hI6##IU0i)Al$mSeY%'8_:<!$i7bA
%)X%\FcE,P2(%Z`p%Vu$Ymfbq1TU]_(A1[\\Qtpp>#0fI414pde@%Ym+L:q<nE$TQuYdo\podUHSmtQJnlTc[\pso$ka3CU:^'mV'
%3abW=.p^oq%"%YT<Of$WE0Q6Rg$s,4JI*Yah4RggFF#B<M3H5p]p(Tkh+jR^_C:qs%8fFRnFZoHXTV.JAKKOL*A]g`bJ_KIi/o%@
%m,e<mO*WZ#\$TIcRf0mXm8C;C*o"qcCmW#H`Bu^.g@<OMLN[0$nBd2NG(2'18c]afVIOp2'u20Ent>4/#=W,1[>f-F[rrl1$S$29
%W@CuAL?gb828PSP1\H%!/DBX-i2lN+K`uro0`l(]Ubt4;klomD/^7O!XjLfkX@*DUihWpHg`""+Z[I*P0Oi.JKA)tR9[h02da!`X
%lX2VRARW]aM1t9]D)D3m3)l.W]JWU;=(@OReaBfn[&\M$GW*Ll8Z&J\7,jV7:I/:;P_*YeVc&%T):%2f).2cU4hl*-VZ.&<cAKqs
%\(+/NJb<3INj%/1_,?eFB&8%P:$XJm:,R?[l"7n,Xn?o*<sj+s6%;_sV0(7DPVX>seCr0R<+mt@UO>4`-`0`IIQ$H@^o:QnalKcK
%r-PR68M(07s23EaSS&^$SE\[op8I&Lr"lEA@DC^$[7cj-2;]6)Z(l.'?%4:<Cu1Z[9mZ_L_GEC;okb3m_l<ZlBA%98c5R+dE#>0Q
%k"A<I"t#el81+QOBu'%VL=hcg*\Nr$*T=i%ms<@0n=XF6Jt2^%EAHmOqnB>dCCX+bJjC<5-*r#1MK\VVgIZ!s,%AF#SYQkCZ;.l\
%hJn(_SE10^TRu?gGn-8*OJb6sS0B/9kE$p2iAkG?6fpDi#s%',jND=P%d&kp*5G]f9j(5*)J!I:(h\hD.K%.IDp7gm4DucakBZ)=
%36?F%GR>Z-Si=C-A4p@8233cPrLhq["5pW:kh*EnAnLS/5e(7k#_l3'd+bHQ$:^6*MQ^AQX4@%CHKJBJ!Y#GOl^_'+fD51D1E/o]
%7D-##2NiC3Z#AKG,h]hOe1%6VLco:207uDullhkp+?i5<Plit5a_nCEG*<6mCAG@U"RTdaZ@c_%Em<Xio$:pG'b$CT6"@ISX0jUO
%W+>oGqp3oEQ>Qu!AcJ0`_LWc8i)`P>=X*7W\gAd.:UU4<SdeWc-l/YLZ(%W=,Y,db\uilAga"%"d+FS;:+"Ltc)XnL3qaQ*<-$uG
%^paQ#J_7T>k^sbtS>U%!P4Ju"Z0*3sh3]QQK@PI_0X@(%_>"Uc]WgFM*A8)3`f:jY]Zf7&,2FfenKPY#jF:UY$Th\In\U;&G.d_l
%a33g#MYsRIR2ZCZSfI61g4PX!YhY(_&p*MMak_sl2srGi,r0%Y_hp:?%*\U''koRQi!h4!K84a0YTj$4[/'/*o<rjiDKi-p2$Z4N
%k,&'#mMtC,d,r#_jP??gUN=YsDGCiTZf\uS9TQg@2pT!pGSd9*mG]rg^%)Y.]S"\Wr$,gF?LXD@)1KD;aP_I56Y0GAHRVU(3JI?,
%R24R7%'`)5mQY8riZ%We1?E+Jp18F/^RPOtM&7#Y*4u_=*>A6t+)Hh$Ve12&Mu7hSGh\-l?uVF/B'-S98:^i%1cX._B6GbiL5.T+
%;IbGE;GMfV3_)^=@">AQ(Go$mCWHp+$0Ld\?JAQO1Z,EZeEV,o@ZgB4@B3En>qUq+SSkRd*;iu<MQ,s3?g4;j7(QOc?-9S=R;#/?
%q8l5bnknp4fo#b<>%_5(+g$4<HY8eZok1hD%f.Q\7d'5\^9B3DlNVT0^FVjHs*^%[Z7rWTkIdYK*;@"VV;Kf!Uj;88X;hF;kp\ZE
%X9D8Ai;G2cANn@5ZrA*TgL5FVS+]TP/;'J\\!*O`AU:tZ$2,&/?efOSNM:5+7;NW3SIgf(^T<X\#]fXscc?B$BD2j=EcW<J`t@D(
%&L>C/jR^nPk&!h.m\AjQF.BGZOX%rXF6!UINZdN!0ai-r5MJ,/d=_Ac(6PJ4KX7c4aWejiX_)GT'XL^[2bHLc2<(Q9Wt/sIf:?NB
%J['If>.o`tc[l7Hc9)%_e!9=Zff%@>cW%Nf-POg`WVp8oE7bNOBjQITR>LO0P%'aIYgs?_?LVG1bbp:_*(rLHhV+O66$#l;Cj'nG
%JdTuo2d<8GE?t49]96rpEk[\6X9R@SfOuKC(p4Vgq014hFQIgd1\7o18K`$@40;M-\pq\^]1e:P>+OO$<GcTe@3XTuI,r93]D78m
%=gk$JmualBLJ9N>;jaV,^IuSkH'r9]cLu16LRi#BcgW7ps/()t0NU#\\Mj16.!H'cE%1lG%L3:8"+tDC,#F236BJKd:/@a0F,pZ"
%G#C^AAuueZhOr.m%tqOfi@*pcc/&m-+7iONKA'b&g<G:p;CeQ1PTbe=V0,"_Un0<0pqq9'2j5qY-RC:s"f7<)2-XWLS$e]aq$47S
%9G`K2&-kRSpNs;ks!Z,2)!4ZX-Or,'H`tJ#G1t`@S[iii#d'Su--`TRMe\$5]QpUpO)Y*#^@Do[Ros3G6PSVHj[oJ>0Bc8Mq-kC4
%^4-ApcBH-+c26XI3F)AaTCOMuGerjuC?C8@m^!4&9Jc"P$[o3`kW?7WR!73O"_XBu.0(GNnB5YFZ$sDEk:Q5&f/ZLA#pl&]-[(AB
%\<Ectm`^]L?I3Q>d]?iZ2&a_*o27^kfki<53]kY[,<0GH;sh[5&dW6)8t'JHAD11kQDU!@<a/]&CLZ?#\f4@..k])iHDomsa&H'i
%Qt9j:47+k!X'Qm>%9p4sI\i1FZXTucC^7?^qn^j!Xnl'GN>j((FB2)c>(>.QV,07XAI#VL8ul$h9PJb,N#SSDDP!\&XdaCMA3Ea>
%D]:O1ZE!)9e:!Oe-eXnu@+XZ9RR0b<%:AC[LFjL([f0F=2">$n_o1/YlQUnVM`6+F@42@0i^WK&!<!?-BX;Mo'/.>c2L!&U0#bUe
%mqj\2#e8-!S%H>X@8jHHdFKj;9Ve(geFkNLh!TZjM5:bLYL[@sdl>OgKX3Fgo<u2GUNqPT,i]+.<i=P4l*NLl.41H"q501"(*d/n
%&MWc1nhK^[5Ote.Epn<cq7G<Noq!FsDH=?@NgZ(Rh.qe?KX5,XoLdILR@77)Ag_pM;tO,!I38a5i=4O$8@'^ZJhCdrH^/8Yl8$UF
%Ri/B28]O5fD.EReXKfRq:M%@Y8G@_]X9Dj>5"\!L]2#3]@GWr6b/sNrj*fYQf@DajajfNYR[6pd%(\[uQ0o+5,2K>B0!DJFc3YcS
%>@@5KegZiD?Y>pl!='%Ei8=2_qS*_2q7df-*S#7Jbkht(9Z=tma1sWFA*e<+r75Uh'`$WId^_:CEjr6jNS6@u`1q-e.)@Rt9^ohN
%jLk#/\89",#S24c?n)8l@G[m3q2LpE]:EFI#JlUKHLn[!dCe!8^PVOdWSmG7]M6no.r0$Ed7b<;N>,fl]MrD'VC4+JR*5K"QYQ"f
%N>jV1q7U0]*hM33X6d,J/=<o8\O"89Ft/3dC0;CSjXYLAcW0>Os6_jmauaLdB^LeI65es7j\73Onf<+@,#X[h)D`K$YX`1U9joCS
%*fW!=YX`2@a1PPjoBak4O2ei_%!sh`UQH:PL6<pF7Oi$&UG8A^%GF\mpY/N`\Z*VU%a,Ks6.tt=pVE?DqVUZ:3d@-R_0&tX-f6C?
%:L,K0.._^)\Rk3*=BJ-TMR6B@$GRDC^V1M"Q8US7=5dCK4NjCSFRV!YNZNYU!g!)#]Z9'G4HB/6fK24PRh$;*4l4B@bFDM453<I7
%X@IXe.Z"CX4Q,6#*tS-k^rHPknM-2qVZC/=[[[;()Xs/(6[]s8iO<7:jidE\(VAk.;U%3Dj=Ts!A[Rn73ISp([?HqWb;]BsS_<@N
%PbZ'0)C:mDNXe!ZM,*j.,DNI+lP5'(//HCk#e\U\"W4n$O"HoX(m5kHemXGu=a&Nn%/-1%W<SsQ=0L\()D.4dc$NYj1!cH%\\Q*>
%7W;Dt91`XAo1\)-1P'VJKj!Yb1-V7s,']oUp75;AIMl0)V4.G[fN`NhLFL_&1Yk_CB'+P#AiI[c7erk2D?m;WTG>u*q-2-/1+W@:
%'N7_io6:1r)>?%SB#!*#eUt3$4kQcW1YLl[eKDI<1V9%lkpV8TYAio/*BCg)@6.+m`.\N\)A2/HO%SA0b>'.EJsi]Be7F"0mFG8[
%1#Mblk2i4<h!chZNm3!Q:Z9jG:91"--qG,?V]>A]i;Z^M9okaF<k8HDXk?]f$KsJ7FjAG)6-3`X7gcpLFOJfbS_<P[$cpc1Ss*?Q
%d2XumVQj.]UpK&17F.0./M-fW0l]@+UZlEgI[:r"am%514!KP]ZXT]cBr=hCH@:#r]OE>/8-L:Pc\ei*ZQ7Onlm>i<[H^te1n/8,
%P0Rk`QpTmEKB#r)O\@\a<bebOCVNcO"4kekek9^)M3Ke:=k)0MZW+'fa\>WoK+1s"F0V3K%L+]]4KV"C_b=+d(VCAlT)>po1i(t&
%\sgK]S@PIEomA>[iGHZA\J?KN)J5i3anT&('W,G2etSs<Wqg"[P)IVlSu8tEBpdke.(g>WGP!f+(1ke23nGoJalcil</<O.I8lfh
%U823E.i("G76,!`cc'(P<&ur3XZfNr;:7.^Pu^,o=dgnEWC^*V'==oFen)9sS<[iC(Y;(KG21/67GK:+Z_S^F],K+hEk3\X&?#Kf
%m$i;e<#0hf1d8^Vm/;!X02nAI5=+aY.*D>QXV5S6_a*tRJ1egAf(0An.7Cs:a$@[1#=*LZ>>pf>C:b&Y*aLSld_Y6EHO"R/5XpZi
%np1TYjsKQPqVu_m?U*S.HX:Wp2u(o1qG9s,mEXU+qLt3Bi3gZQLPtCc2:aL,+M.T;2?t>4)_kMLPYZ&=G!RDDV**,hs&>k@Eq*Xd
%K3J4qo#K1C<iYh^ooYtpS^ZN^LG\kTg@!)$:W?QeaJ:WE%I0Kj,A>G0O\gp)c?J4(LL7Oi:^ZN-p)U=7>u6g'<oMLDV9l^U2g=d=
%HoEa/</LaUfg6md87S<3<11VPSQ]rN+^_'Hcu*)5MlV,r*(F)Xd]efU4jN&-b-,EPghA^%c,!sBN'9?MQ,(!109Us`V,!pg=ErR2
%W]u.0G!jPmA&bc=[io>1E])+K$;/]"9Z,G7RM9np[L=*M9Z'h7#>SN&Et,PHTn_5rTM=^]2FTI`?C16#'0K4l-`@Q<(i_@=NA!Q\
%JuU8;&uPDlBAHSsdo,]UgJL815hB7.;,P:`6dmSc3^Yc@UO[+c%9Lq2$0iS'BWe)@f"]eQ*GC@`1^q_<e#O@BArlKNjpBJuN?Fd=
%@d])`-_<q+r*OPtqpQMF.935"FFS%.Y+m`*1>4M;:2ep_lDEj8BOl_"BA15V1i/A15E7ER@FV(,RYe"KZ:'!11Y6;'(S`'?CUT3?
%XVn7=Lt8`+kQ^kh9N?:ZQb3O2XfCFpYi$V>[]Z#&hD5l#0m#m#7dF#eD(o-L=u0><>%^="o#&r;BPfM.1KlS<:N6Tk0FaJ,;dE\V
%ckE.A[V?**LouUA3"&"jkNI"h;pdC1/#M@27ta`$*GSf;g5OaEg5OaRe#`K:1c]=*N7s6EN7q2tD4FcdFB:uf[VS=YD'A/<AcOTu
%"QHrHP4=t13=S/6N6dI/N6f-@O4!Y[TWQCNb@o(442j(%VQH=;Gq9@kV2,Wi:A"Z+b2fV=V0?sOco"eQrqEZ>N7M.oBk"Gm'h2t.
%CI[V=HCS!YZ?5^ugSSEeYD&h:kZ1_`9/4iS9[76CZcN_p'6#a61L?uqCR+FYnXB!:I2S!P^B&13Srh?cd?`0<[qL]VV0N,I%LH[]
%A\ak64$pD^$K0K0`DOR1U![m>eML8ed;]sQoMh2eh-77Y'g!]Y\5NGf7gCeg1N7DW@!4@V5<MZ#ef5^OB[(58ILSd$hgr3Ue]2@H
%BZk(YCU?f9.DGt%3?!t+QI2!]&_YR1r9uO'>'"L$UG\h>1st#4FbM$;("9%(dMT,u=9?5H!,b,=9m&#kYA#20K]/BY3Xo>8E$)tT
%_t>kFg9rPri^$hVSkV^6BSQuM<cDm[cLWQhUX4;r*WIin1K7]le[D2Ws),!sCb)</Bbo.B;(gYKE&YZUF7(K+7o-ru/r[5t[Z%YR
%[_Do]ob;TFD]9Bc@$C0hDsep]Qf)2%H\pY-9CN:*7U&>d7U&@:hgr5K6CZAgd?[k-A4WQf_pd[cbtG\eXr4Bf'hUsF.6fph%b85+
%S"Z:ERP!h6WDn=kRN/JUI5f&$_t=`&g9EJo67$bU2<j5.\uJp*-<`ZM>r)ei%GfN=K/VTH\$n%rVhJoOhql4hc#Cq6KT*@S")U%J
%L!c46G'_05<""ujf]6TT:'8?QXMQ+(+?W('Kjg>U]nfKb1e4AUgX^22r_jNM,$-Qp"j.:G+H>KeMh:I[*FA=V>o9a_YGXA]aP65>
%>2L#tF-%K=25<%(F`oSk5<MZ#ef5sVB[(58X#2Z.;Yf9cEk(6[6\]B2CCXRjLcXXQVobX$,7GHi)6.tJ0hXQm+.ah"CCW.2]Ongj
%7WRbsG\rqYY+_'5EXc"rDma"M7%n(j.YSgVj8j68r3g]I\(SE+\5!:\*+m92c#Cq!OGp,:IX%:uW\k8@A>j+=Akts`F=KL;9odgF
%Ur[f*Gg.c6ZD1:miG!>>k%I4RCIW)_KOdKAo#&r;:sFQM%+Pd:;hSo1dT$M]CWk.31o#th@_+0D[WWYlgQnhc*iD'q5\M(!m:upn
%oUsJ!N""DKg=*F4H2D<1lPkIl%VTC_B"2H_cB(Z[LSr8QRKFHGXr4BfXt`!VPolSE7r+-!A@,sUk1r?ZUf.$IBl^`GO@Ft?L?g;*
%[:P_[U!i;%Xq43@VQJ9ECdlfQMIY-f[&GLIdFANNaWmN7C,9V&6>_a!ACP5@T&qL76T#ID'gp@P<kFfo\7Ad<Vo/TdgrAZ_=P(SY
%bs7g$W-+,9A>!P-B&@`S1b(^P9oddEe];FKB[(NP),[=0n2*.)F%@NC2+.$oP2i\>k"2E?_pd[cc!cS?f*p9Dj>oXXPolSELMIB5
%A@Q6]Ak,B]e1!UE9b,\nbfEW*:sDX!18.D;iG!>*jtK7/C'JEZ$BcEhaq%:3UG[f]10QJ;Eu8DA<%:*p9b,bp`lN,DE6W?m+dL1\
%:Qr[Ra"K2Q1L)_@B1Sli_pcPCD/^16__o@)']GJs>;KOA**dP%,JuCVoe`dd7A8s7bCr/A;,)[ZCWA;LLL.,&:,<fEeVN%o3b6Mj
%S,1e56#DWqACP5@Sg%q@/(!mBfQ1V8F%@P92<4@OnG9o`"J]i-Ga]Uh3?jU5QI2"(cl#`\r9uO'>]Wjg__o=h4#=1<;u,BdEkLPm
%7)j#^CW>Zkku<+VRN/Lk4H]0&nToM+/_*1a56bO#iA;\$6&,lc%)UKKd=XA8A[oH/\E9GOL22P0Bu2`GC<BA$'2WOd^`c'&6hN:l
%)b%fo?(GeIgJBRjV*H!]):7)BH:^+^2<4:Uj)_4mq&T7S&Vc7jN6gj>T"1TVLSr6[QidO1KGfH@kg/1Xru%bR!iS+WOF`jORXmL5
%b*4!>-3n8q11[%iTUt9S+hs`t=(ja(>:,aXA]T,@Gg4]jo;k=TiG!=[k,:VdB?"T(kBYXPr9uO'5'%D]j"o^Oj7>D!:k!YX*1o7,
%OR\b/H&DT7ISCTqp!(<1#8f4$1L*]fY'C[,`p9,3CQ"qr)6Xp])6^BB;u,BdEkLP56cNo]CN`e*ZOZ)PVoeIs!tlKD)5"*pSBCWN
%pcKLCju>cKB?'-!f['K86:T_1d?]Ck)/U7.Vs%Ep<6MRhE[mQ9.I:G8dF"_jW0Ta^iNsQ'V:jp`(2d`mNZ#%Li&(`Q10ubC:G_d8
%GOoIW^+m.[fKt=.L22P0%&m3TGa]VT3Rj/LRc0^o3^YB^+.ag7CQ:Mf\7W7B,$a`*V$tj4!Rr*1a?\!8c$"5a<%:*p9aoW3LE&'S
%1L*]hY'Ge:7dHO1CCW=7Zt?\:-<g![_\oIm"KFKUOJ/,:R\;belBEB^-AQ=G6Y*--W1G24o<+r!f/Erd*66->c#CpHSKX9@%o8D,
%22<nA>VfXVJrgD?<.9(\*3M;\Ol;bfRf1eT;5a?]1c\NV#U;\o6T)p&A3u^T_pd[3c,#;He-sjU")?\JRdkZlprkINN6dI/m%Vde
%9'(i+M;d1IQplaFL?iV#2o098f^HXAI3V#%iJJ&n%+Nb2X82]HN4)f_/Opd9g+qA;g+qC]%^b>j5t5'JgF;uXD:@(`$)(M)U$B!j
%P$sH!=KtkkI)d-oT=>5W>Ipih]N1'O3ZVIHclg4`_t=`&g+l@>^aVIteJ3rVe4a']hIB8]$);VN\$mTdFu9UXUkq9p;4CEE'l%gV
%+JUii2@$!f7%Nnde)X?MEJ"\M%+S9^6`4Y*@*Z/2"8sBtX]R&i)JrZ<,PI8N%!7,pWQg/TUNLmik0QC`CI[W(U,?ldcY.`*B[-("
%N7Ns=litRf3ou-pae>.j#oT`\WYqfmU/(OCBk"#a3K0&nR\?1F^,)Q_q;H%.\E70cL22NZG$/HJU[l=OjClfSLlBoDf$d!%W>6u^
%0aQ)S#TN@=_Ao>l+NttP+?X^6q-O>7N]^h`Ae8Q5F,!XD5<MXMf,ShPE6W>b*Ot6;PSe8@7U(lkA@,pTA`Ga;.[;*I-AQ@H)e?Hj
%\7XcgdIqdW/Vj9Zg+qAWd5]].?$4N\[4L.Qokd,f0jWD.?0iOC=(9RH"-oTu>)l&+ORg7I#4;&UblN>'g'l^%dE%DAjbKa*iEB5@
%#a"#6iHgB#D&B-:]0NESk,<B2gR=,![A#&b!BGjPbIA0U",8_o2</g/]]LV-`bWT[BeF*P3em(fKZgfti+A\e$3<!!OEP>BIrpK#
%4u5C#_.Sf*@shm9Su2C;pHN,c^(I=+kWjl;L2&WCk?3T2_pd]A4;'W`f0&B-@XS/<)Rfh9D30c[%\)G&KKBk89]fK5o#&r;SI#PT
%0Kq9V1Hs-k%crJDamkcDCD`Z]T,F9a=blRce)^;JYrI]gN6dI/o;k=TiG!=[k-,fEB?"T(kBYXPr9uNt5-#Z9_t_INbkO<H3g:_X
%-HBbZX'pBfHtIbtB-#,*:Qsfpa42k-1Hokb9h*V]5<MXMeJqZ.:sDg"7As6m;cPY2R5NIDE(^d32`-flV<DU$@A71I4-$2u9aCFY
%j7dW>/R6WPqmf[khp98\c#>g?bF7<=Sg1V61ZOqa$lQ/bXf%!+[V>&<>?e8(dXKfN@F.cL$8a]qAef4d=Ha&/l)JVW>VfW_K51rY
%A@Q6]B&bp6)YKSFJr6'G]]Ln9`bWS02Qnp4;Yf9cEk(817##K3CL.a=&Tu5,:Qn.'#:M?,1K7-TWrIuP0\U-"Vhrf%j)@@T>=R?r
%)TM\Y0?3;s`+oiIA@uNeAk,<[e1!UE9b,\nM9&N<:sDh-&Tu5,:Qn.'7j9]f1K6/0B1/<]_pd[Cbu'9*eI9t:eJV5^r9uO'<-&<h
%6T%4g6ZklJ.6fph%b2PJaAC,X4[l=#%+W9U'ua!k=q7::R\@4odMU0e30n1:F]T\D"#U1')PH6&6O%90C5rtRN^i,cVod>T_[[Qd
%)6MSnc@dt7LSr7FRY)(fW#;Nok`F3c2k[:u6&1E-N4.2W@T]M1:hZP3g+F;\L2.ZmE,-;nD3KOPWNJZO.VZ>#3rDT%L?ir#bqXt^
%f*p8I*&H=J%^b?%5t5'J>@'1R&Tu5,:Qn.'LCH"<1K:\hb\6l8d$>pV(i:.-feC^-3ou-pae>.JrtqaRWd0kMFu1[54ACje*;mij
%c"P@VF[jk05<MXMeK"S/:sDh]:n82@aq%:36T)p`0iTr.ZO\<C)O2D9-:_h]!+`HKZt@3:,O1L8SgK2,K;/YhWYqfsH8%]9PolSE
%LMMnkA@Q6]B$34[lBEB^-AQ=G4_1L'W+N!RLcXXQVobX$6Ot'7)6+RS1SRY?iG!>2k.!j7C5-JXlAVZ?IX%;$W]=sZTph[DTfOF`
%PTQJDLM@<&A>j+=AuO"23ou-pae>/U()a+iWYqfmU/(OCBl^07TLFTML2)J.N2T[(Ga]VP3F\,ER\?1f?o"NUq;H$s\2H?^Ol;bf
%R^WC@N^i,cVod>TK,,?,)6KfmerHS@K[%(9XinQp<O4M$r>p\$-r"AlkbdL:0>o\He[?<t)6QoS2$Y`h>VfWkELe,0aq%:3UG^(E
%10QJ;:D'^Ge(-C0B$3&2SM8bOa@WK6As3I(,GWsmnCuAkh.F0/\5!:\*5BR6c#CpHSKX9@%o8D,29.C+>VfWk0-iUtPolSE7r&TE
%A@,sUk#HdH;Q9T`1c\f^-mQVe__q<X18IhDiG!>Bk&<eECPHVZlO9alIX%;$XuW;?iL8_oSKSkKWVl6B0jIp&d`?CPE'6Y"2@NM=
%9\L.JF&Y3*D9^(777C')!cm!V7*[YV)U%(f)91uaGg/O6N7X$?;oEIr:ec%Q.#+H0DC_l%-nZCfBMU^MV:g+L'mi%t:btqG!GW*W
%A>!P-k32CFWDn=kRN/IjSrr!#iL4Bs1SdqEiG!>Bk'0@MCPM.(_R49m%\^52=K8J0a0]\,E#Xh6lW2HBeoXt<$X@6fRo)71C3*K%
%UGel*UNZ>f.mH-jNnPK0aJd@^4j>EG933-%D9L@5$p?7)MWq_5a`\]pDAgVsBW[neX$asV_D19`g?CnmK,bc9)76:Ig5>27)M,>s
%)%N+h[c+4j/KKBm)U;#;\<@38\7$='m4EpWXYOQGBVtoK%Wu=/B$b/:cCAA*LSr6[Rfa]LZl-5rj[b,*.R-$i%+dBB4>L.t>][\j
%Q?4T@4ACjf*:V$oc$7M1M.B/Ro#&r;E6VgP%+bp>*;5aCQ-'V5PJ]854Yg7u>dJRD+dL1\:Qr[RLHRCt1L*]\Y5aDT0\U-"Vod>P
%_\F&+)/XY17tstm5<MXMf,U^0E6W@H`\F7Umm((e0P%P%[%1f.3,_405^``"bs@$le-sh8e<s.1r9uO':ida&"#U0<8#BfgVt.aS
%`-CZg,U)2*j#%e,R8BdYn2*.%EsNok2$5^3$o6Q9%^b='5XnsI>7N+(O@nViVodnd,6/Ua)6TkDf:&EQ!h=C7G:@Re[OHl6F)eB\
%JnnZgS.4?+T@#\_>&sZdUG\f(UNL`:.R-$iNn,18aCrh34[la?c&`dFD[rp1J<8`YiL8^d6Rn?CSgK5.N^.-bB"4EV>jJ7qd/9W<
%._9*q2(;`"[9/HV@,r,60g8s$c_!DUWr:U/Xhn`*dc&-[+)o$+"ZHhnc:p:VgU=gA6%#k]enrAK0%<eaR7_rqpNC7,)+3$>"`BXb
%aO_kVY+k0VWk,/HUr^-LR3O(=3Na)\GSB>G)X?f%[,Ab+qtI`\pRp5XGeF+ihPX!n?93>eC%(]PJS+e(ED^$q"inm]:9>6>#(b]M
%kE$[GWb0mSZgHB\O_UkuUSFsPg4j03;Gk)q.O8bB6Fm@ldoOG3-s=IcnrT[@iVu<:Uj_IX+$4U)8hh7sYqc2Kc>NUN\gt`bpHh/^
%2Z&,VTap63.PeSAW#$)C.cTUIYHu,A$a]^0_X!<:psmP[OK;GCp#0'#*`QkVd)128:W!R=XnX^"<p@JVXj,Ig7W?K:jhel!B<=';
%=KDr9^#n9m&G2q66=R.MX8UUcVGp/3?2^SPC@m+d9Ega*)MflSN?<d[h*Bh'\DQ]rr2fSfb5_iVB7TVEe,HGVL/DEmdD$r8)t67m
%PLT4pIqE"dLWsuEfN-Hl$:MHA$so,k;MZikr5i1t$hjR2UlR4`lI8U^7Ofb&Usi;#s"4TMC-eYrlXoOg'r5R^BkhkSPs78W/H&6Q
%$^c*$PT9M#&,V")fc7fbNN22?^P5c1p7VICkr&-XZl:-$hWW'_;skb+4U:hS!@7-CRe?To\7ujUdF$4Ue(p\J\q9=aRuP6UWd:!\
%k5r=+;n84#PG!2KOpYKhUiXB,@N+BXV;ggm]Wbq@1+L;OD#KP-J`_V;20ALsb0OL/!!^GTE&?582.8V:MS8Tlc&F;@+M$)Ap?FpM
%IBE*L9L'[Y(Nc/NK3AAYX=4_@rb#^.1o./tQ-L[Re"m>$9!'4LTJ!rOA01QV]f!:GX`]8&U#.sO[VFIo`nCnL)>%\2I^]OJeUJ<o
%Hd)a?s1\ps;q43*8)^fa6cRDj!9lS_maZ$@r=5&4'FrNs$Cm.,.$@Em%1YJ-?DC?cZoU@<^sie;\MR/LK+&urcbYOB..YbT[onrp
%F=S&1\(55O;gh^4T8m9Z[@7&64R%&O@7;$=%%sO8=-pBsn:lQj@COf0"MIp'f.qI'$R-Ut9G7kgb7^k>-144>qeMBBUj=W/EOMmD
%4*m,JF9InFm@Ufc?7Z/#6q)9F5sOT3$jumJ5D);1d2^XGS#ti2f=?W(aWpO(N!"gjJe)$B#hks.Pg?"anBs]V"NfL-qBo-O:b*s\
%#,%3u7"Z>%@!alsJo4reL`2364E6jup@5A1*#*QWh5Glm#2a0rF'*5F#2N^gIfU#.XEW(W)/Ii\g\[OZnn(e(G%#=Am=J%.L%crh
%BR/>sK3f@"\02kfPh/[WlZWH"/RF..It1p)rFZ\;8P9bX,W6:X,-(sLn'/(k[9D2kIKln^^d9Ii7<Jp0dV?4C6D(,U_oB0Y)F^L$
%,gc,3>P!WP<[dZc5T<6,m\\3X!%N11G`6dtHU6stD#bj_DaA<Dd\kh9GOA>^btbt'6B)sVSP6;L6Wu&;_YPjHST+t=X&ahI>'nUI
%J:MDAU^Hcm44jYB.V!PUJo9Zgg!j6N0!oKf8,NI+q\WklNun]"9Kpk!-F3C[ZiU4.FLp&+?_ik,B=_NPmt>En%p5GNVt7oCk1k&#
%2(526'?KYg33?3+Ma8poGP:$.d(cO=0??=fqIsco4oO4t/->`XO*2#0`m]&2!2+Br%`TnXQO\kP[9D0-l^p)ILEPR)LKB\kK4`^#
%#KTI)=rKb%T7kMZR=q>$i]0a=Y'1B-g..^NW+m\Z([Jq*V=dZ!@uDIt8h3.[\h2\%Ib[so3tSDlR:pLA0\#X*b,F'+WS>$0]"RTI
%.qgbpB*jCono1]!_31tdE3@N>W48_N8dG`_L^Ra8Nj"Ao\'5$[?o$,r4ae[rC2(>SNhehi:6\D*SuA&fOWr11AWC>I70TY^MmhGu
%JYUS.'4,hXc,#+2huo&9YW4\D+Z>>QneWS?*hSu=%hYX"7n:O,56*MfcjgABm*'NHS^i%aI=+YG,KHMXnkqs*07<VtX7g0HVic*p
%LD'c>^]EU6gb9F%2rT:*Z)Z`Vp5_0KOK]@4GS.jl6*&WDNbZJ_JE2.gY$c:</hrHu,&Of/#/*s9SXt^Vj4[bWr'?kDU5B138Z',"
%\fm1e2`-CsZ`%/3B94t7MK936kW5',*:[iNX94QaGm<(qYm#kb\s.hB2aO<].@hZ*00oY;lWgO';>O-Q">rTL"-'WPdgXS__[t_(
%M=`A1)mrWsL]iqZ<E+Zj9dIYmUr(+tg57_o0/2od1jZe9/l-W'n3ps9q"hi"kt]7ISPpb*7YC)DqX6o#D]ZA@)QmH"+Wj<`c]rcR
%b0Ekj'r4E'lO,P^ep818O7Op3HH!3&]CWlbohHG;I=MFcX8'K+&bL]!<56QeWqRFN:9OskKA,NCn%t;Zd.s2RHN+cle1OEa*R+`i
%[dsYE(U)CTR4+SE<L$4@ojJgP7(HTmnE2[!p?UO8rRVct-PFtar@<".&e/6IT![<+i=[WA<U6LnLJ2q-"4SV$D&bN@M<^J0+0FM6
%9S"X\5lX6i\0<M<r1H'+;X,(M7CQXjT@C[M%^&]A8C^VcG,\anB1N2c@mE[NY"j(."9,>Y*>5f5iu/EcY>05m7.Vj<o+L=Y#P7,A
%*46$jrp]DL28V20<k!;&M2fc<FAeo-+@unB/(q2(807Mo.2$"B)3:/&]k_ujOlS5C.2%\>EcF_pDr"j(GGR?066*0e@H_lOL:njh
%=.%$:U7u7+apM6O30Y9GZnKiek[)YpciuYJY&nbloV&H/2<<(^!9;pb0m$,Xfe2o@=%e7TC=uKjb?EDQl=C1l)>'9;?M1%QqO]CI
%"6#=<)r5Lrln6_.80%>X1n_I4;+TF*eiQGW\gU;AglUZmKL-6fG5\G4iU#:D*9A?V4.X2Zd(>>7`pi7-;A9FEh'EBT#?Dca.GGY]
%ifJ938Th!`7XLP]X.L#24+'R)V1/.(.[u-&dZ9,Jjs=`%;[lW%HskK0V>X\nqao%fJYf6(>4ZF@e%&V;/U&FJo%QdRe>Mo]#+Rs-
%[0&`.C9?<P-<Vs9;]o!Y?H+Vb;&>H5VS(+ZA]F`GS`W.&CFA<d"]7lLT&U?0,-/C\"-(DhXkf'P$KID50F,Im2UP%Sou'cca`2bF
%@AGI5$CSCXnQ;7.-D%P788YR(1Y@:FE3n:+]J15\K%(`6VuVkWCnooG3erf&`CJCVdiA^dcDXf\]lR<.(:TI`0\^R[[#QJ+9ITiY
%Dbm]fg?K1K>__FkB<?Sc_"I.f]h(suN_-<VCBk0LXUs"W1s'&c)G!"C2+(!L^%0mG@oe-6#).EZ1L=tVs7H*>qr\KUCEK.Llh@k)
%9.R^+Z]h6Gp?d#&p6118j^tXI^MCN2<OM6GXh7qfZ":RQgALkVCS`tkgO</WEpfo]ECWn&Q1(!u-d(81jfcWn/'jf/q^_USm3raU
%ZFkIp(T(@XP`B+afj&f7"FK7mo,%'lZ2!8P>ZmPU^S!j(inmtG5HYJGhnPD7O,HfHZd*/)oO;e1pk<j'kZ<_Tmn;PB&)KZ.Pp9l=
%nA<uKg?t+%m`hZUhL<$1mda8>l'B&b4?N5NX=X%&B9+Q=mLB,Ke]&186h9f_*Gc6:7pk--V:J9)_pVEHA5GIp5H5q@q0'MN=#YW1
%4F?n^]uUJ8m[([0J*k&)r?%<4`nKh.U@\>d\$pU[/Vs0uCCHmRp\VhfHF7Y)=X]mZ#KtH+Hi!]]V:SMW4^KR%GjC]KiM.4Xf'f+[
%fB]hC4DR-`*c7L)U/g;hc0dIXITpQ9?#Ps2pKg$clok>1oJZI3s$-c0Xt6cKkYR5Gr9hacf<.=tHi/8,q5Jf9q0CGtTD"=fY?,(0
%+.k0b;3pmtHN,!Vc@->WmrbJ3e1<hd5p`R9cPI@h"JqEtF!c/,C\-CTH0s:UpXLXoM#fW%[85AE(O!@\p$oA4NDE4$iLMWdmu-m&
%@-NC<kRLY:-gSJ=VN%<r;*',=/P61pf@X'P06aiS:M\;EqmRYslsVUahY9^R:_G0G3W*sCTHB5%ps8$SZhMuZOhUahqG$%JrM?WI
%#(KGj^N`V(U/bM@5F38$J,X8pnbr,^Wm-?/aD\\$L;cEXdX"<uQ^@nuiV>+'$4OLXhC_e<8DKK's3e,8>2SZ&Ic^Ieb0e[t+4XQ^
%_;18sq"B]ZF77"NDnB9.W>t:_J#rSCZ?-MoP`3BN%tm24>)eTn"822rP4?BCp+,%X+-`8PXf'?4BD7Gbo$JZsAGG/RD=9ADEIlEl
%O0]:6Hh5X>?[:;V&CLkr/Xc[>^n=nZoD%FZg(2$J$d5NO/FO,Ko_-lA_t2*3#ra#aYVJE7DMMB^5muC!A,&mnA)lFNp?gPVMW0+l
%d7Fk?I=(*X5XukYH!KXE?cVJJ<4L&m%4afEcc_OOOQ;)M,Xo,T\`t3:X/%]#*d<scq$T\378J3;s&",fpZjV$af%V/iN=-p$hq7D
%b9tm/C%_".d?!r8g;.,:!h6l<!u5q^>1_GU@.)=Xo'o;ZD_K`"mX"RsmJV8mm(@)H)p/$(e`u.X6hd<iEDM4H1)/d9D`&R<fXu/R
%V9QbM0;=er-IT$qAKO4uWG7=!C2BGBT>?QfE2U,1=3Q`ZitncR0Yf/M%JZqFq:1@:Q`S0nGD&+Jp!pZ%<,1OZ\*g$>pHdi@e7uba
%Gl&j1mQqs6O/!,peL-p>RX]h7roEGfSNMGC^>(AEO#Ki[F?ZcG4a:N=]q#f;M:Hel?A41F-#@t^fDUupk8t9(^Jtc'PP<qgHhIAO
%])1@Prhl(R]s[Wocn4Z%Ya@C9B3fd`3aLr-rF`1r63?F:mQRWs`<(H\!kMCnE*-Cjro8F^o8MKoKjGVKa$=%:G:nI<mIBaNrs8,+
%I`F"=_q$2Rn(W.khK?MM/'hOeMid#S42?Knq^(pqnA*ctmMk\%8rT,A=3aimoqhP[b*!5,h:_@c[bA%SNS5EGnDr-&>$jC=WRgN$
%ns/m_T"FKu])k4Sm&B[;K8R<gp\4nsHOYi#h(I.o'LNBWT.JhNLIi:`iT&GurM7'JqIu_!Cclf`jG3TF$m,oh5)r;*;-QmU(-]Bm
%59H3bkSeId1;A1EOt;=n'U3OKOej](4X)R2E:XrX=n?0A$_LbB8#%?u%^quqP.*+'j-(8q6S&NUm-i,,Llp[9jShF[c>K!,j8H\C
%O:i?o^'uk`.1(%aL.FXQ^=a/d,M?&*PEH<s$9?$;Lp'5BMuH71+ItcNZMsC1C[p'9EPFi:MIN_6T84>H(M)AUNKer8`Rf$k8Of)B
%@Rg,Sa5"_iS)KR02aXZ<:<YcK.i!,#qsJnLC+5$s[?*/,P_[\:ZTI_;O\^71k+N-:FQ-d:?BJ@2037;(S+(E#?sLp$9g>PP,l^85
%>p1RF7Qa98]9/3D^MG,>@\sq:C+&'hU_d7@BJLhn@WSpM'D`ne8nr>C6nAI3,.Kqi@cb:("R#ObND(gS-lUQgjU5rYd],h['4m:3
%@NNg$`_V7#I^pu_52h'Sn3RpK%DKT4$0#D,)MB;jp#b,eb(pHZ;t:Mc&IL\$kA^Sp!C1/+RD=F\Kg7p;RW]1#8&1YUL&!'k+'6*C
%!Q:DPUF,7NDu\W_)iF/e*X)?o1-*dG4dt]ETg(cuoY58A[H-4o<'4$0_^-Ze8/CZGGuZk1H%5#EEOko<5YI(3<#<P?)^XeN(jZ_M
%O?j#g#b,LWIJETCUi4(72D6,u-*=-/+"QZj8)M;jC<4h5[*s!$Jj\-;0Kf:.CrD3-m]='JYY_>V>+8ltD]L@J?N.J!HfiK"\!:#&
%m5s1E?[M1&]=#scn'*@^JX'l+p7IWCa*5ai&Lr`oEB&B#Ti!j5XosfcRj5T6qYn=KgF'oAN1BTkGWT[O59i*'=rX;*0joM/im.+A
%5oYj_b^OoJ,YZo`/:=bPrfrU1ObF=br(A9,R$0lVp!r4tXhFQPL-Y(&IT;)1l^m3QMV>VEfI(lpF^Yb`O.sJg$ZBCQ4WG,83)HnQ
%rj1nQ@PecM?9K!]"XA_Eq+qWDZgG5/JrRq#S,V9nk0>?)am+qmi*+b3r,hVqQ3;8;h2IA3hga7S>.hOm.a?Spiufcu<+ltGj`p=S
%9;*bPoH,)lj8FbFd#9%G3%)8?V(JbM7o;2T)h,>;p(o1WGtN\UMXOOHC?0%q6Ta1j2*t2hs*QP=$KFLCj:E_:V5pGYFo3[0e\lon
%V0-Wp5n6!iq1@S]3@Zub9ri<Aph<6FG\?CY-@%(6oor8&L/\*Zh+I("p20WQ%c13O)J:Wj=^P1\$,jj;(D`3N@f,lAo#>$dY'0h-
%\K.Zb&rp#$]tMt9GL3_[4`0<JD-&QY-[223HG2)_K$p^uqa]X8V"7?^fR'GY=X^oFL:I4TYBTQg=PA*$Otp3A?7p`FiE9;DEm&7H
%h_G&pT"!N-]dao;P+k-cgQ*9AQQgtDVlu](]Wi=0fLPDgO(-S%DMA$ZJ[5:?cXi2`naZ2/dYU,XU7ms49#%08fn.7M6e]T046;[P
%\!LJNH>kRT=)k!W](PhNTtns90j5)p9;gM8g[U9%0@VJfm5M4AXe;JUS$tUF!-Bg+W@2sd]P@E;a*js"pNt6ZrNA`A#JTqE%D[Gc
%bsF7Meh$:(`9Im!,oYl0h:hho@HMn&V`^$`Sf4I6S+0$MU)@H2E*Z+c[2ARof/.!Hj`c_;C;sopN4%^l1!l(b:[\J6'](r>-`F2N
%Q8`"-=ea@ig"`0bRcT`/ASCM_f!f=KS'6*+5Om?l8$_=p5L'69Nc2-!GZbQoML7,MSAXd"n5+WjlpKMeri:'=]PS"<5%!dOQ*jDg
%cNj\bT2f0#Y8nBG^WUBrb1_@ClM5';Bsq]Y5!SQ1bM.B/ibi7GAa/l%1[`+hm1\pGqlb0-GkRKD-c379f$JK1[N<Du8KT:i't2lo
%_REBX+23HQlNopOVCQf9_5)R]Ci"3ZbMQ&f"rJ3.G%IfTp^LK_7hq+4JgB;Hq=qm8o_+"IIl_r"h2g+(Vog`AHu(FK5$i,-&,5Pm
%(c?61KDFTphnQed+5FEAlQ>J<"*D!o`jCL./]g&fG7)mare^'I=-."D/@Fh'NtWk$ka\_e$S/nZGNc_c<&lE[/d:(9;O:AGp1s]e
%?TS?DWmjMd(>+$4I,f@EdPu<?`'jc`$Ob=$gj]jZq3`sXj2&jdPMkc90S:Kf([>u42Dib"f9IF((&*ReE742S(N1+ln[]T0qI8^1
%gXs"kadVn_l*>Ib8Sdc9e]fO"b+2>oT<%XOpW^k#g?h%IkMCE4V8'b?SWZUL3Nl*;k+?iLfcHK[5X_UKA6_E>Z3=+`prV!KQ$5`:
%93B[!Uua"GHbB3oIe_DK?[Z&r2.'q^43^[*qUO3SH>f,,hb.(lZ6ESm[*!]EV[`%K.^%W4rI!P2=5VRurFn#GTm4PrML4pICI)1-
%CjEYi.mK2/\KpMjfX7304T"_jH"H7=O!YQN^Xr.og\3blg5T^9r[=0FXcHfceY=5c1V_dBkf\nIQ7hdJ`1cEe5<k4-b0.2GVN!'_
%FluPn,<0#73d3fQhV@F!MsVnhOcB$=LZ-Y(e!4Q!]!&fV:H+kF%j.1*-@(@rnFc!R+8\P]![e]GX#kd`qf3)eM[+]BB1k=Y8,p\'
%B6!qd1nNeBC*&`4MU36I)pN7G1\t)H%#0N4)T;U6,d&U^k`,Q3M)j2p?+O[nAEN?Q)pi$[p8a5r=Z#B.0](buZ$T=D](5:W?ng#H
%^CB"iooEGm$mR%`pZcBl/8J\=96%UF]Y2.ZB'&7UWtl0Pc//#<RTir*^@%LrTJmY[BPW,]O7)o,P5>Lo\CY-XH+dt[gS]a9Q.B#k
%Q/arus+7Mt6G6R3*^91[([G^IEfB;NEq!,1=4Xk;IK424[0Wf2Bm$d#/OB:1FB@+#oae6eJF_4k=IgPJ<S!f.>4q4TiKq^7I_-G0
%$H5,S<B5:q"&S2"QIb/.*fMDj"6MPog[<S'mVDE%*NGsL$V"fPhm;.pj3^?l?'n*#G!^@R4<h#tS9k%i;8q:,DcNfm7gIAd(B[6f
%"a:p^(?J8urdMg(DeViDa[bo]K6d(H6el)q&c.^aVn[?rl_.Qd^O;n_=H*&q\36-J,(g\MNN-X*4PKED2HJXYBI12,Dma9tqhXr1
%"S:cF;Q\P7#3G"=QO_BL;2hF1B`;W6p1]cj&QfhI`QHmQ)FdLqX\/*Ll_!%ZRuabh==S/6q`rap"*<H">rg>pe#OS(]u09#?YQJc
%7=-)?P(UVI8U#mar1ipoC"ka/e3DiO6fq1)^&@nVmir3e;tQ[@`nTrA14:u)DVk"OAQHN`q?MX78$N(0;]bZl<"*I+kATkbX"NW6
%O4$#rA:O%^6tP-W'`*4BJ*jngJOfBPd5u9rKN<ZsU>,GCI')58da6WnF_CH&"%H\Yr^H&_"i@)4fH+&b/[SUJ<J'5,7D%=Coae"J
%IUo+4Q253rp#4\0;Iro7fOS0kK;l#e:1,BInbllTTFm-g%`;6_"Y.bbP-Y=i;ed&JXjZt44"HT(`g]8*I:9sY.'U/NDL\eNH`\28
%c_Kd`rn?bDkk/@t@=CF8GT"SkrR5\OjeR<`]tHLeQ"Mb0-Vu`,Fh_0G;o]<Fp#1F;?MRFYW?LA;2!Xs2YJ2+grGQ&N1GJQ1l;t$k
%GRPTdZn)63EDJUnKYrTL!:K7qCToO<mN8fn:D;uHN`Q";m%pnHpW-)L=#0__>6c!"C7atR6-!!_D`m]_<SD4d/;i*9YI1")[b;l!
%dmiB7-dBCe291/KIYA.%-V1T?kK:+iqH)%6B7EAak^k._M&.kQlTW.a[WaS%[$?OM<]X0N>Lj>8odQI)il@he9"eIkXZU>^XY4NS
%eiuIl]H<.$6_K;jMVr1Oe&(2V4!3kgDg-LeN.V?-<V^8*;#8H-pQ_J:*.mP4J,J*&2D"(\]_@\$j3&mMnR*[%r"DZ1+/$rW\nKdD
%Pq%jo'SE=HlQ=`tE$nNG?\Tr<m,S0Wffhd<o[fY^C$!2*lGrb[a0@0M^Q.Lj^"qF+=s\dUN91MC]8_7=dDOLWZKfL!##"]W'B2+O
%&F;_&H1>Wls5;9ojQ7^BIt0/aqq0Y?FYL8WILCH83`8OUn't<O;;GUXkj6(WFuu2N0[&ak9fOX$A9T4JW%ZhOZ[eM,0<E]q=`8L&
%:SAN;I5:)9[:%YKha&XYbKA4bQhM(B:S@HhC+J]BS#si"n&<^W@V:&\],-%Ca,9>updfktM__b":.fH;]2m&;[k6@kmkue;@mfW6
%cQ6'O_`tuW-k1omA?h=tJN'4i5X/Fm&C\'H*kfUj6VUCP#D98_UPo\KN_6ti?H5-28?,m]Ogk:3UZtnjaWl6e"4T0Kj)ART@s\4@
%p>j-$)=YLh"8:oDs'YMks(^*;?E9M<s%36:N"KNXqP<^[NA2(3Au'N^L*^,lSo4+Ki\g;BXDFmG^Zt1"MZ#?WSd[-)rke[%"oE^h
%s"A+!cl4P8Q)"m.ZLeVZ>ORJ'<DW'@"?2J=GZWr1d")C+h'cDVojX(c40\(XYBS<Gc*6`P>[$i:pNk-Ya4h,iUP$OfVd#dCTN</Y
%icV#7F?]K]09;\)7;irmqenhuqr>`k<)`f"+7?u*lIKG]%.DVgBV+&=b)_l"hu1;+nX@;AQ&-70?tNs2iV7FYYr2PVX4C%XL6385
%@UQ*=?l9,l=sA:<Ud^W([8q'6CYh.dJr%PG?/_KeFE4;=+,'N:,UgK'4Wrd*XXgjRBLY9B(GAl$ZeF]O48"eDk:EQRrbdWW'$m[l
%]l8i&A31K1oXKVYLcn"Ba+s@r8$)5N.I;.[bp[u).L'S4Ki/n4EL#>!pZK%3?_V>N=6k%iD-&>bBjf(;./BlNP)t9/,G>gAmJ!&^
%>8R[16Ag,B>.[YtV5L#O$no:dAn;kMjRi`I&nG"F8r(t?RL:UYAL7IRc-`BQ,,#T=UJfb0GZup[R>S:K7!lcuW&:%&1?XE\7E$p9
%]W$9?DKrT5Qd+R$,p(&_[U"uJ.<-;fU1)TNI8A@iMi^QEL'X!cH73>pbPM_nOcbUVV&S%8pS8qlGbl+2@Y?+5:K3(B9&YGC"D0&N
%.1@FpS,bN9#pTtt!+R=N)TrU,SVK$>>$O-5^QAj5.l<2gVFU93NYo'Rc(l7?.E!akL"8crUXFu,6!#3QF<bBMR?Rt%IWS_lWJIkP
%_J%#4P]'M-@9#a!.1%IH`EKkd#Vn-YR&Z/@$%!Hc[R,BZYL'(/-0pdFq'rLB<_T<dp;O-ed8$Ho`]OZH9U;KJ`CmeG&;)Gu^YWaL
%YD_-UJYCoIOM+:aBK%nG6K(p9IHZLD#D_c:_;D66fY92e0'[Uqa2(q![W`I$$Cl$(>KCKNH'bF8mF?[Q6cZYpZ6.jjafjQ^kfTKG
%Dg9nF#(EI5fYqgC'MKWPYuS$UCgRnbI/Wb7(WEj1HPrJkA66(;AOcXtR*`!Fjs!/?_9sVa`Y7]:G$u*<#dm`9=;Suo7V3%qGi/\k
%cjBa.l(+^>]Wh[aEQGH@+7/7tYMUVl.RQUmE,4i%+?C2s@`Mc6+.$)]s%5UtK@[D&N7X!QAIZ-*n.%NE-aCP%HEVBl)f4)S"d'O7
%Usd1LeKe,aC5PM#j[94bZ^7[ZR``HJ;:3AlCCR5<k#!oA4e8[#P-BFY_\m%[I&jkcLTf?Hm94nJ\:STXGVeX+U5f,i*`gD!Tm8(j
%V;-ao$E^3(KWqrA+5:Q,8r]EI-aeVp1&Ued>YM"nM,DgRWk9ikepjM9Cl^kM64^6Y$]H5GO-BJhJAB*%YHNlA]qf4GZPC:Ni:;:M
%\pZs"Y2jm`Lo7H`ecrtiameZ$?#-mOZ/CG5\,CiaE.;]aPKQZad8KZO)skT7VN='MT5s"))9^H4/#\3T(Ce9/#G#N1f("jN94DtU
%<bjA(]FurB3U^9H]X;PANDB6;SPU0eH7SMl.I'^I42=hkatWb#h1DXe"jOupR$r8Bo+9gD<i_kP*l1r/Rr._>!I5JuaT$Fc;HPE-
%4<Qb&aoOWp2VQ^oaZ[F@L!`!*55]ipO(%fj^:;Ls9O4>nTdcj5Dt#PfbHUKS<"7HVQ\Q;5nH(p7Z10,RM>-eAH=bm+i>*G$Esmo;
%C)9V#Fp_l,eLnGEA)^LjW#<$D=>ZPB@G,lsEJqE/\:pQBcmcOk-sj=>EC2</RX.h.D)fpJVeEY,'4*F'M_;i6VJ(ZE4DPj(`A[7d
%"*khnI4$Z#G0r3VPaf<r'm88Ra.B\5?sNp?9Y5!%n?#hiL2#\C:=1t]ABf4SM?-G;*ee[kV5k)rR?Z"8=!PQs$cGf$JhV"M!\Tn.
%#sEV&C(%4K7Dj4aEE/\gdk%Mb/h^@r@hTrmAQa6a=EC-,e:mZ`EgRD-J<g\Ff+M."a$kSrUBpcgn[kYC/m4Pbe<**YLKEc8i^PS!
%G/2Z.cec;,G]G$QU@/<a*U6)/S,p4Fqdn(%\G]e;"eT)fRBntN6D'F\(:ICMa<N;7m5KJ+_'Ch#<Ro3oP"%5R>GLWD5C!X"_-erL
%\bNFG\oi^`7>NZ80q]d$pfe]DbYa2*fjYk5&_mTR]Mo`I)BK9O1;skp6D1m/*ut5m$t_YI=unMM&D).n\OLpM@nOAmk-btB[1ST)
%6b1\j]lB<L!]>;*5otrZ=\^_$!-n_M/OYdA5V<s.,=M=jGFlfbD,hi"RH66I(",M(@MMVb;=R1oQlqJF]Sdt3rAeTCdH6Z3mB*M'
%&?4Qq:qsP1,QW!n`_:H3=ejeDCKqut/Kel(j90KHa?0iF#8B&,I-Z1mOK(U!Zo3n/oI%j=OMkq%qN?8i=eV!]8E6X6Ffd^Y5=u2"
%-kH=.<3%Ou'U-$nB<ZX^fg:UN.m0M1A%Y5em^B?f,.E99R^>r*b7$fn?thO?,[4H:T#j7AKXd])8)+F(W.@"`R[/E3QIqsP!]``+
%@4'[aoXWRrGXbP=-#RL-P%IAl_<S-34LZqP,Zk,53p6u>1ekO'S5@B8arhTa-Wigd`(*I$Ic`=D98en`ZHG(YTll*52`!0i%#m(&
%:K0jGRB&0=KEY&W(&Ut7U8'CR9A?9KCCR51I]&KF.ktD-[?5^ogsQHPYGQ:)D3W:>)pHYg1$sZCSbrpk5-5k$bX@X$LrDHXX%"Q%
%BN`sp&f9h1jNWXgn7F8j],W^FYo7DQoY6^1/LJgj<U"?0KOSDi)EpH#?Wl^s9?`[5NC1\<Uu]KdKaI:(p9kDQ%J9k!_N@5[%#ki8
%NQKA[jlo$n`CML/nqTW9jE\]&QLj,0F72>kV]dXL5Q1Q<rSd5FY29*=s18"JL^EV%r6PTGM8pr,>sC<2lX]tXgm,U"GbX]unVP,h
%!u1P,&Lu7L5"#Q]4%<d2:Br?,jeJ'(mS"*h_,l[rPb&no^t4WH.Qojm'j`t&;0[8g!ae/q;0mDq!ae/uWV#h5"ho<$9%hZ:X75+'
%Mpeqa(AR/l94b#V/b%l^(56B+0&`FBjJ(5e6PkGXO'RuU5Bs1"lI#LJ=3H@P[JCc]01NU%!+S$<iXn:9?$W,kLYMZDIfJ6uhqcZA
%b#V9t+8Mp1a$N1_m6iMKJ8TIt+R=2/P4AP&RT^t^\Apg]9d[.`n$"8KD-6-"'XtGY$8Zo.X/0=pSYc.=74E*oFqF$Oiji4;?^(-A
%OD]-Ib],.?bVPQ<c_2i-l*PP!EDr6`oMnakbi4`'2AUQ\nrDEfXC.,p0fU%LQaiVeWQKSIN1hZE*@@0!O$HB-+Bq*K*.8"f%hP9e
%jlX6]i!\$CK[T,-]k@3=Jc(!3&aD&QGE3#1VZd&`_0M^o=4?2Mhg'pu3\K/JhA3c[Mjr4pXipl]@h;r4NP-o(aBW36B[4r)i;H()
%S$&#0^A<f=_V9'U]uYA%>qn;Zf@PsPYFi+8ADa$2bp3-o[W:m%o%K5$CiT-@jjj$FjAmmNgkq/V;TAkC)RnD1F$?.T#FVM,-3rE'
%<1MiKq5!,I@lS1B*gcCZ4s/VLKk8BS@Tf'GR7<<u5aCK&Aq;nU-0\`Z#p#93E]E2\5-,<X\^,DN!b;YorFnVDM(a6e)2NQ<jri1c
%QpD`icO>[i%rVn$X3F==\dLNq%5j\!KhnT,IWk+Jc5`.lqV4ZEMmLI@e+3DC$i-S9`#.+h&.O'I/;fg>Sk%VXM_fY4NM5f1LHD6^
%gC').USuc_'nZ,q6N%ANQp^"=,[Tf#hB\'iQ1r37]k_AdG+#]]=AuV&DiN$slX<(CmKNO;9n7_ch&!@JK6FYI002(]5ec"B4X<[5
%cM*V&SHa^0h1"3R?W)\`P5&j/QjH2O!^f2OifIOVe$KX$><gg7UZk&?l)pN$OPJ3Kk"+o0k?2PDVPSR$CY\2KaYiKK=,JZUQLsC)
%k"G09M_fP1?,#d1@#*m#C/nT,2I7$4D87J)17<>F2(!?>0Q[gT9a0HT:A.EI_(<cb5!`@#!g2j-cFO))Z6#8<j^tN=Qp1qJ[2`+F
%aBiSt')"W/_OGMAM4*RC:9'lZmB*1_@UgY?J^-JSop2rK&:AUe+A/e4#thBsMWghdV?N`d9T6cf;q&*kT.i:'?/tdaTd-0%X!ANM
%h(j)`(D2g?PtSp)BN<^J_qRN(8MYOP$O)YUVbl*:?uepPgej`F_8%fV,,#"V0eI.aX?'=L6[<edZnrJC.#-G*n,Y`\PSuq6r-KmY
%CKB##%IP.a',/%DUn2hL4=b+nRbX+TpV"r<TH_)`K'ma&:mXs7c6q`GH[4GT>%:GgGaP,f<]eX$.,J$<;,ku%o-fL^eX;ZMCNCqK
%`PpLEMOip/aLaL.o%`a4S=Xo&C7N;#B'iM`>opSR9T08n)oO`FNJdM-9orN&/M!_3NAj0U7Da?k/2`AiC+t^mTW)7`,O^%iLBmHh
%LZ/f&bP9nrL,h<En0^5NPbj:M@QU1mkhR<!Z6So\:u_*OS=ZBQg/T<$$9jQQP?].OjUfqD&\Sj$Pq.b:]f:jpcDkoL0']`MS>_7%
%L[IPU?95fXk9Yq"=!e7A:1!U.PdQSLM&-4[!"rjdJPJ(>-jt^&QaKssH>rFUi*1t_ci#Ph5"\%uLTW.V?b01,Q?P/o#:XZM:T$_G
%bsU#$ggT(70\i@GHPDA&&<A7-:*K*]))FJk&B+JM-[Xt<!?tAIc8GEMDQbU8dS'mO@f\W[i!#sH>3&g>+q`:?GkuQ9BIZ,tFsUB\
%n\1<u"nsjR24W#3Th#^(Maq%\JHZ'*ef[W/aHXFU;C'Wp;9pcK*/$T82f]FOOL+o189GYs7nAL6IQBW/hWQ1km;_"B&\ZqoSlSF*
%8(=p_jD\<45J[n!s!EJV!E9q70ifXH':E]<MStZgI<n!t1no43P6(5C[K`j!QZ`oP32PnEN=Ftg^)XW=5(dSZHPESDGs&!Q&f%Et
%<I[h97\(`qXP?</2H3^\`5[p%'W7WVg6@:2SWp:_3]%hUqgLRjD;ok#a,+k-oPT^&hi06.d@a9IW)T$M,eP&5g<3^dC*"M2aSY8B
%%ooZljo&gB:663Q(0_Ud>u7n/H!UT8MUNK#\TuaR2)W^NB^(/qWr+;'eu%NK$K=,2lC&Y/j9R>^9]V2MpJK`Sg7R6ld"aCc1A'N:
%>+Dj-nU]sNA1(Rl&/4g:FF%KSI`)Qlqu;@KRb1DD.nXT:QWKk"eunP"?,V]M:@'@]<5XU%!,!d`a,bS3%[H6HY)0`N8:Z=m"Z9MB
%*?_d7ZqsT2h1s?-f.^5`5h`6(mAREpgqC9m#?:mSn*N#(D%/oBCS0tu-C(.B3n;>G8[?C?&HtMS3a&9N.UhD[EK)eF+gL)\(h-VO
%?bM_IApb@=@orpQI\3F:CDE%=*;*;`E`hE&3+<15=)O0UHQA5Y_]Tr2eW*H^Z8C,#54h79G(%a&3](.Z4,W25#j"Er!S/lCf<.I7
%EX]DeDBH;QCm?#13aZ9-EfB3^JuG*],"\U&.T&S_YX4Z9i\GM`F^3j;@'.7YjT3pb+*Sh^Be)u'`&kqKKEWtgMb@J'RKhTk=dFcV
%pCGr7+ml;qO>a/#eI@4WO3KX`LSJJ=X<;7HgUc!#gP2q4FWBXfFj9-TK<J/UL"C#_c`q7b&HesX]"AmK_V:19i,DI:q;L?D,i0F^
%qic,1e3(`9koihnV$&_BpEH,<_rL)*#!As,?$.19B%>D;TlcQdrOGq;mJPi/a>J;LqhNoS[b?aoSNg:O8@!lO&d=!@aW_8`X+ZTo
%pbgKiGZYRs]r9WfHDP.2V2)^^dj;(@is/Q^!doZ;Z(Z\9NWp2'/dI2ChTaH@Tb2K\<Na-#K!._+TN]7N&_3cJLfD9p6`9Iq)LKEg
%kZORhL4B!lGJF%GS,5F"q!R#\^A6URroLb1O`'g+rqPI<+$OL<>CQ/shu33+iS1O@pW5e50B(JM5JVj?GJE`>0<W4EmiT9Ys.B>g
%gFXN2eb\)VbeUL_msk-#RifBBnFa7Tr^ZuL_"P)s;WPS'8U>mXYM]BLn\`9)]oi/f0BS\:r#YlP0(2VML.=H*kKtsPH&@Q/BI!H"
%n,In248n;?$#,]oo:*d1WO0]1AIcq!&+0%um%r7k=!laHB1I>lp[(c6r3q1UJ7&<!LEA^-gerpqW]3s@'`-u'hgPImbn#F/lET>L
%+n7ktB;k,<s7,jXpHO-)o(tY43MFuiOMsQG5Kl,^?mQ*WTt3M`@6W*/D]s92]S]/=jM"9mJueh5eem+2dF#L<m=7CAAKb,>ILBq7
%f)?9=U(`=TSK$R-`SWf$(kh9\8RZZk'<kFaBAH:#@'cEi4kU][DS=oR#;tRuIf,L,-^'!J/(kj*;!X(/?3n.8qdGPonSO8-,+NAW
%M$]fi`@()Uci&<Pa+*p0_["+uHSm."[=Q?JLsWAL\AIP$U]Jm=(Zb6bG@AhaYOoZ5P1-M>k-**^=m_lqhUY#U?PgJ,GEq,/Y-_i=
%%Fr@TD2U_jNH'lkdYW+-n7C`Fp4$W1C?;kE^r<D>bej,L<@6!-R\*(_J)esq>l'FQs4Y$UBL5T42/JkoAr]md=LKB[pAm\\(siN8
%_0]\`J:d%>&6Ta"B+d>s%M3G'WbC6IPg-+YaNt#[V;^C[gAo!j)4JOH1E1F#G'lY!7$Gf+W^H;N6+ODN&a@I:TX3K9rNHCYi3rJD
%$-j64'?ECleVh>g2-+X6EsRi_hgZ\Js'uppD63`R*.0ZF^X1OuOhYp;^D"\$/6gsbcV.R"#Zo]fM"rF<]n`esmVrLWo9KWZ-2'Ja
%Z&K0>#@D'$DrUO2O+--:D`i>7*&m\0d=&7e?Il*B"G]Ss*muZ1f#PT'18d6bG68-&c<)+Af58L)i)on17u$uCGW>=:08K'r(uqH:
%Zn%Y$(-HoXk1ei`;L[cWiAIc_Z#A6#!#ON#09,jqie;"gFNT8MIEgEk!096TW8nP8?cgV@NP0>$2fA6,D16JB1YNA.S_0`]pFg.@
%<Q]/5b]$7c%>a(3bcE-Zi:-no2h:7/;Bu'mCrP(+-]:(2\PA9c/092k*cl/Add>Q7I/(@L)Sj5sg1k$!S5eJh4Z)ro,NC:jemA(-
%D]l]$/?Fg(j-tRSk&qiQ(ED-9nEV"/]+N83J#dbMeeB*]s61e+T1;:D_[8GnYj^`Z_L0oA!W14kfPuuW<nFm3MhVkbB\Sdo0LY;%
%lo[$;Sq:0\C'^laMXQ+FMj?+\Em)1K%]0MM!hL[3+nZb,9C0%'bI,q^IX,[A9&drR`E%i)R=-<(>GZmIdj-$X@7<u>dq1>Z$,:m@
%4#;dFnPI7+dVYu)_AUPCd9Zi2="CDo&;RI:>.u9pjA88MnPC3YL5;r]SjF;1Zh!'UjnRf6SLLfUU8OBkV`!7n3?HF9WXXWBB>daB
%h,&J+*[i$Z6=n^+A$cDPB(9$i2%3lc*@bi>-p@f]EO8_`9.IigdZh[1)U!%9S/eP:YR"hE+g(.+fA*LBiO`S=B*t7k"88$J`7Y5/
%h*B1cE"^YHHh_ldiO^r[9rKk6n]MdX;OSOZ`Z=2cPG#tlh;i47NQ':g.upH+eQMTNV_SlG*DU+@?,sdSG%5CIfMj@a[WJNh4)X!U
%SBHHo_mMG!_\V,pE>t1,F"9EX&'Z7uJ9]DIO3n`[]#Aom@0==qP8I6mi_seEIbpZPk)oUnV@^@"h!s%C%0ZVh:@I"8HjUpLkpp5i
%g#6GJ'u@oV^4l[4,S8%QL>l.9(Iq[T[0pd!Dp]7C'8:D(TS)M1!&3:7e,89JP_5c53IH'fB$LJlQK*P;;^U)K*A_i0[&rs/4-2G<
%_)8.i/K1qa2Mh8$*<YmKTC/EB'\l<U+_oTi3dcjO*6a/[Tn3`<_a?Dn7kfh+5A#54j-QZuVBhHJIh5-a!_4>nR15C?iG*!Bkn3F+
%L,]<?*^9SE1Ql$b<,"43&<'ZM/bJ%$E$u2WdjaV4p!S[=BnC>*m*OPo_:_qg\0,GsK5@I)LN]k=q!cYKRD*V][E%ru0J"OmR.LT'
%be"ua5r:1IDLpuABLoQmG@-p[3d53)8b=7n>%Uig0><l]IKk&0rX>'N(SFpe%(!Rfr#,]c-45e.GSM._))"A+qKq6uNI35H&+FfK
%g5UIe:E#j3O9hF`O[aT*%uli:!q.VtG$1)[Rf;!*l&2aB'$C7cQ^!Uh;fkK\an:L*T3S%4BYTr$Wd"XflJP.0="/`6Q`1Q</kH2l
%/lZ?:qlaY!Wi)_(I_DKEAf%NL*q(hq^%)Fmh2ntD(2s$?ASVPF/'P_na7->PDL-Wr,'\;$)WBXE7I]C/2-.EjG]j+7C1=&AYqNh[
%?H*1o]_Do#49A;jAU5pQG]kgr_>VrkX5jk;XQ30W\NO6G\Gjr'D++9oMpTR7D6.sUmGtSHaD=O'D$81fD$)n,`sA8Bh+%+Hs*Ds!
%\+r$iiPoMlrOSA%j+^1Gld`*)JXK68F+hgkF9B0oG'9jSe9j56VjBJsB@j`r*j8I/-',j*`hsV9JnJ/u&K^@_@jR2O]1O,W#Lf`G
%]XaObIfhf>["_0oJL<jQ?3:M*>m,@j^LHR[Gm#0=O`i*R6:,=O_B%EMHN_YIL1AcGO!g:3-i*B#ReS:HSQutc3p,X:3bDG_678,>
%*SN/V].+kQLH;6Yg%CKcf`cDLLPm=lZV0@]p\sL37ImGBQsM4e<9Hp9!07r+Toqq()-`V:06n&R(X*I4DNeQVO2/A"A5:EO9`iY-
%bn9<O84$r*cEZ*Za6-+Y,BGTQHkM4&>sAR=]N.oVZRb69pYkGk27.RGI+,F^Ri_P.D`OWE5HSR(6$u$0I,Lq>`;W31m-.3+E1REF
%b;)/%23:9FK>^RY\#.MW$qMKq4*"H7%>8F^6o'e7*=16ZDmnr?bS4872WXh`h_BZcp1$N"eIBHnNcRn%l3BR9nQt(n,SO2DmbJB&
%;/Oj%,<o+$ZBQ2""nDa1NfAdlL/A6q,\2j!G9,[jDGc"g[?<=^-qXsIp('r5.=Nc`,BSYl6d@J]Mf(Gn\e\@ZR2>gISp0\#R3$[g
%:KFb^gN(h/c1_^^2WJOZA,6B=Z-@hslCSjpe,His3]Kl`00_sN'g1?>hsS$G(^!hSU_&/!J?Lk7fE$6_&2r'h6[9K9FT`dl"m^tq
%_loWk'He$nMb;a^Cf$*>ESNC$GH>7JY)ZmV'P#5rJG<>:g];tk'0D9c(uu'nVP,=tQ4f%46\C9/hfVZ03sN%4Y73nHk/u9NXo8@S
%H8/g]f:aN3c^>QT,Xt^in]?6W)9W[d<9'-WFPCrC;i]f_g@7mONI$Aq7E5)c=:%iXKqGkZ>9++H,TW\t;.:K3&:d<]#r6k=0Hs$r
%-P>tU&E35e],@W+?ki<HBMjn=<iK`t8!'OLkl"=V#C:_;dp<LV[%<lo3"'aa,m0&sCP6*+CQ0#ZpoP*[-.O;^SCU2EJZV*pEI0Kd
%iXkHBZQNjjNYD\!2:n1HG7==/@L:a"h$Opc:.Cmt[qu58!*X<K+H[Dp%>VA+H,&[1Jp.V=;%>IFp69bQoK$&<+J$!$(jC)#8]Piu
%_jS"4\-qt5ksQ"JDI7hRUF'V;F,1,GC+UdJZ^hsRO"q?7SIZQ*=l\R94+jUE+sa:gFd<V8578*dEelSS+V'=p<pSkP7_o5pFf7Z-
%"/7@SIqTsB3e:@GX3/oQ_V)1_7IJj]W-(eMU%;I<H&T)#5,H1-^.&L@V_(buRD^",pq:'p,,\ZG6`@rBHVgl`8ua@K&qWK"gju!6
%RDtP1;cNG$8+$rL3O);4^kaNoT1p4hYYn'mg1hN;D,:`b"YJ.1fpc:__VD_eLDChLcUN!(YO/CIoiBOUKX8'DV8EeW6j[1'CUB2p
%B8IQ)!k(LXj"XHSjMELWZuYQJ&i\`jT&_$)X<J?O8]?u>q1TcDF(#FXc=qMb;E0rGCWD3^<Pj$"olEqEjRDphnOnXmTJCmQ+BmMq
%j(GJkU15t#%imb+s1[BAqi?I&X=(EH1.`[c.nIR[,+990:a\=K\@G2Lb5k#Te\omh<eXB"G2F</A6T2+m._I(.b%a(*U,-cTQ[D<
%eN/1$j8IN?q/d(MbdOqe=P3Y<F[2kDVlbXB_i&<hHm:N1E''XD',CZ$((-7CD5f58=Bd?S`4`TaStaWkeo#Z4BMeW/pd5N:5e7CL
%[Z)P\AQK(Ta+56PH$698gRf]\092>fY6rU-3RhL4%2##L=:Q^dI>28Hm/4RteWF9iG#19OX(n1iO7A2qI0P>hl\#fA[?\$Ze?>th
%Q5A.RMcc5qXdAV`Fm4mB4ibK%N=JX`rUAJ1S,%D\mKL=1+>"Xc3#)lRP438q-R-3',59AE=qCuH-11bF\i8P-(.el[I0ok*r"UVs
%ODC]LTKZ+=KjUQu2jSoL&R%#?!&^i&[O!,![3YAk#0h9*,T2>.</A"Pp!=IG4Lm.9W0ToPI6*j3#,(TZF@3?Yb2]SX8-9d*[$j/K
%>Tm/fo[rVFA%e?;qbr@PT$RW0R4:JRkX$RCPQ<h=%ALh4W<77)5-qLQ-2Jb`%qi&?:)6T1%dniQiZA1F>C.*J(jTq>a>mCtoY?2h
%Dh-1l-S^H_U!F^V^;:m.]n#2GouSABD+*@sjJo<P%-Wf6Q%M".NH"RL(-J>&TJSFXMHq(q-P+K/iSLOjO;aZHP*),nF4;Q)/r9a&
%%u+Zu&Y*4]3SfSIC>4em[XP)1!IUaOcpbNBd2?KqT4rq$-Ie0l0$snm-PW#/rok0i6Mdp0Irq9aB-jmE<=?Sup`O?#F!@oGFJqCZ
%3(LS/HcbLcC*[72O0QMOH\?=9jhoETE,-],1(?)[(Sis=lO0j4!RGp8g]/e-LYuEi32RZN?R9A=O[mC3jl?h6aJ'1bPVh=7M)[Kk
%js3kUOf0&[D2$RkVfS[I>T8if8YFSWMUDaG$Jt527A6Q@*\"I8PDX1I7cQTCkiWB:rtcW\aO(3b/)V.Tq+,kA53AdBq&tZ6BkKUF
%*:sfOW'D'pl\Jbe@3/_tN9DXu[8>r9't6`"S$AS*[Ku+=*E)\AbkDN0!">UVhO#tW*gTebk%b@+W]:#tB>.?]/a$skGd!s%:C<To
%>Bqk5qD*6NCLPN(WFZ:jHNkQ[%#o(Ed!.4T<]oR-<8MCNeK9sG%_UC;1T0?1`>e7LB%_!#GqT0+MJ]Hh9V,SnlSX05XOeU#o,Hk@
%j1ISakJ_2Z[CRl&<LP&Do[:3M$947>,E*Tl'VoQ=7JBq1Jf[1tH!@D,\/A?[#g<It9]46=+Y@_gK5/&VCn)^*2Y`:F=G1j:M)ZUf
%-4]crc!uj;\EUHe/D[$`VZ_f45e86N>u_$/\AFbfj)HQif4r?W3OPlI$n^m4mMM$"MsHqS\J/l9%2$XD:FUHZ=EkWbp=s?23Y?N.
%e2Sa;_5kMpKlE1PHC%m)!9/X3;kPV%Kh4PO`G%<GSbk7XSZc?oHW)p&Trs#1[.UAK6a%/VS+=W59<^Sld>*p?T?6iJh$Sm%jmDhG
%_I]?HYW<U]HT"`CS$;*aKJjB6!URmEqV+Np$>K/A91bW-m:>Fa!Z.Zu.jqL8<)jRYr[=;R(`@P5@=DP2s.<Q3Flb-eqX/#R4d5m0
%br/6,f'_6+@0(i*,jj1X;q!RPG\Nnf1"N4:h"=H<Q>i/QV[MB6:=s8bWf?H9c:?\Hr4ZeQ8^[HkS>"?iR&c'$jF$ggp7uWb(HBe^
%SbUjXQT7S\Hl[rEHZI&Qf!`nJZU$I^lquH-reB:n>#8O:iTAlKliU1/I=#(q%#?MF]ql$+4OsZhI$e^?o&$,o!q=huQ%G!2qZsd<
%Cklad1:/rig8SCWlhGaMo2i\.1"*B^hM!',]?7TJTl!,<ES1%EOP`u!;?2!nSjp@A4U=U'3mk=oHCKN!=hTGV:Sho?@0RVF]g37S
%6H7h"$K;7RaFf@=-,&Zr4$7=)@XA1Y-NGlR4:bn"Ia@J_QZE7hD_Nu)iH\m!1Va[($+rS`1d@\(4LZlhDDn0USa[iA)n9F#T5FAd
%!\>_WF?RtmNZaoNrkfQmda]R5r^_Bd[Qn>sP]rh\!NL=c\H%>lhbtS7,gP<gI%WPcJ$@g40ACg)W'2>plK:Gq[ph)*Q:`g3fI=cF
%T$[u9KPCRlcqRi5:6^t*V'Xj?#5$,s]h5rbpLZ/C:u>9,`[OYff_$CQTr+3_eH@\]G8W0NfRj\rFU%Qfk83,LZbgU?%1@JsHE?*<
%Gc]qeS[o<WY6O7Xm+;oOU!,59H544>5?SGtotjYsM=Jo\Q,S)d=O:!q@hk'?c]<Qb'qrZkNnM>DMe(UN4Wi5uYSi+f_jbKg*.)O&
%KE%,,%HB][:f&GW6Jkd:RgO^p;W(n%`>W4_1;dF"T;DL'bQk51W#+kD[V"r>D,8d?XG=EAe!h5imQH.aIdZBZp1"id^<ZR0RB#Js
%n%?he/*I9/.iP->LcuD>6>bOli+&#<`M_Wjr%2-h9?.Q%YU'#jj+kNj$9@D/ieP:f%tDjrk2RUF@ojo4*&u6=lu^CWAp$<iS%[o@
%GiMG8I-GR:09(1XqD-b*Q4ujV^l0YcKs%CGI&cf&S&bMo4m.T]ER.,Xh,t8K&oG]CnLu4(.u6tZMR##QdGoE]/q1Gsm-8ujqJ^9H
%;>&F;[u+\mZasdN!_pK#ii+k3=.PD9$e^.\\jO<_6RfJS-J8on_@N@Ys.&8+o.p4<8F+`BSk?IEI0R[9Xacl.dDq]JG5b8j*&?Wg
%\/lmLH$)<pMEa56%<f5EBf!)4n1_',@C"a,$b>b903,I3gKNN@c5lEN;WXRsUGZ$AX`[r'_X5N54]H>$B+a?\oeZd7ltm2VU)T!a
%03^efZe!HMVVh-OHNJ+D.+[6ENk6:5=Ea3q@,o&V_$9uM#BF[S1Pj3ZXXf@q&7'TITHB?+[NkKb^c]IfpY#_D>Inq*440/eZ+CH5
%D:[+iZJ@ht9*jO)o]c[Sp$2T@N)1J><qA63'><i6P#N<KYt!TW5U#Gu9MCoeo_4\G9Ih_dIiVRE(T-,sXUHki[8>r9AS(Wsg5Qto
%`W8-ZcN::hBTtXNkQ?-b991)8pb^nD:+bQ;]Qs^aEU1(riG\)XN?,d=j6K;XCS#ebjk%jYon$5WZRUanl>4Bb/NI(\B%N#oQi.1+
%GfsOG]t!aR>A*HZ%Hb[^+?9$>O#s*m'gA]f/56_6*tG9qUg(F0ef+uMI"M^G0FKC-PQ8!cVS'f8`oDZo2FiJ2,f6XuYd1'\Z5^_j
%'BsZq6CnsJ]&O2IFV#thE>?#HhUtG)hQe4[?+i79SrF<opS*oFaS>i_I71m3&GSW,XUt]F"0qgH8HJ:-BNA$!1FHuehc/WQ75c)O
%@CI#OE5)!]l%/<eioM",el?FK`i9MEBG^D(\82tmdYhHEFXt;2"/\[&?:R\;Ng@uA9BZK?Ljcop6nK)Hi.Dj_duCHs$L9XrHi3!V
%ct#^$k[H3oK:(p>Al:P6+G'pEJLUgM9].&N7D,fdiY>X(&X"?DMjCm%DpZ2Qh@D$ll+u=eO#n&"FKpKr4#[3oXm.aT!]oA(0nLp/
%aVWs#_mS<hWZGYhEfNG?@q\cm4u4.Q,L!MD#YIM4dNCqriu1_WK31a#`(LJO%']Lp$imeB"/6e]OCu<_%L5h\:<@_t"$,U+c&^X#
%$&o+n3&&2NVgW1ZJcmSEWeW#fm4$4]D=A9.%'K(*Wq%K?BuM4j&s]:6iXJZta\(,EL&qu>F&t-V);M90W:NX"#k)f9d(hr;`tu#j
%Ch9#m/67[?'"Gr_lSQ+"AmRudCI9E`#XktmM*X-pAE0YADgXtI#`5N<)6FYM3LY5'GV'V_8_?/26d/;%KB!hmaGI5(fKa3dOc*X0
%RYoY$3nttR+<K4(UVd.c`?8uf*H0kd-juu2=Hj9=?(gkp[<[[#a/]2K@4PREncn'H'";fg^cmJOT#A$AX^S>q/P_6J)f!e*jAWjW
%W3#[`>VpLE.c)G]W/J5Q;B8FU@]ImACc1Plpbd:dE3q%O#G.%ji#S=!4mdQ8+\,Xc_PfmI"ZVIi#\3an%\(71Fkd_k42`*tK0*ZX
%?md!*oH(O[i0jtT&8IA/X_0O^K?1W"d663\g>co[p40"tHe;q>/(":&Csu)Fkug>761lN92EY!b*J9o91FYl!0S?kS+93[)p2S-6
%1iBRf`es>Id6oK#ICAK;lA"nJIL<)A(0\s^&b?\8Z8n/L8#t>YE<$Oeg5-$"qW^]'9k0Vm3)RGYRY]d^@b[C^.ZUu&9g]B4U`E-u
%hTNo!TQdu<Eb"(E@.b)LekZ@D;BOS^LHY!B*nfc_QLJ3=2R*cWY`Ck3UG0!5c('(,O_)4-^/O*?_)^$![ChIWls$I`5:J*\hB1ic
%"[Y<(T8:gOB<;L-77Ds5;\?^5.s30!VGVJrcQ`-tYbV:GCLGG<Lb$uU)_BS\S2,Odd`6Ot"J99!4E`2LL`AdG8)P(D57UHOL:s"H
%0(ZtpEf*T:]$mAJ?H.=O5jnh=*jh-[piL>eDoXbs(lm'*gRAMGJ)VmW5:N0o#W[Y5P6C=3F;E)F+Dt5K7//A;iF=.Sck[k)`F!)P
%*&&l(-opm-8^^,32DYl>%TX/s.o%II]`m@/C@.h[0l[7qeZ6V<40M3ID>_NF64A02J?^pWYQ6])b$mKFGLMB_3IVZ.&MbI>cuO)D
%E%/a)Gcr1YJTI/[#\X]Gdu!2a;)m-X4l&9<`srO(o2_9!`WQ7r(p,qTg'L9@nEi5gViuX+%kB".7jZ$BgR,HqK.ZY>)8)=/EB`PL
%aofWD5Wg'VNuYA#6[3WJ5B<Jo%XsQMi[>`c,`)288js?K+C]s6nbWY`>=DmZD@=c%_FnOBa"l&-O0e&\DqI=SGb29IR-tUFOVCF$
%LQ&\Z'R%1KTJL\s<$-h^[/.*gg)X"tL?+O&`=Z^5-A*+$#[Zt2JVQ<%3W:9_Xt7%/XEpBCHr2_&;b90NKd6=)=^?Pcs72A0rnd1p
%=.EAYO!gaWj68E)gE2oeg:"M]**G["kHbrsGQg0mk<ENfdfH"Me-/A9_mJ//3Z_OPi6?ua=U>`7(MF<&@d1nr+D#OhLQlmq$^?[;
%hq!#bEL6<D]qL"tOEJqoPFCU3Ej<cd&E,[+btr3*@k+pFV4bAm2Ra36PD2_-.($;4\*?"XEmfTsH]DKrnGG7P"!>'*nuX\8^73n@
%:RBT*6E.kVp.iu`c'PWS]_1"Opis:1q@_O_BLtbmP:?@mOhg99iu*n0=Y/J!C"Z>S[B5:Q=L(28Y2mPq"#8;MH4isY@FRt#A"E1g
%i&(/`WS4?E`jBkN:s[i#53W*JRIsulrRldTUl55n>>8Uha<'Y@C,Xa?VDB@d?kXe:`#@a,7/Yb8(7D]`'cniKds<)lAiVe'ppgLB
%B3c)HgkfbD:Xd3!#^]bVpa!:<CLR-?]-b%>r"([AGL75OaTW86ZDT8J4A,UU8[VLWW+kSo.!'2Hn>ll1B76.JrsUb-J2gRV:]\:u
%HrTp<1h,bh_hF?m2=G$9XI\F6KMd>0N^R8@@^is`X]&\&)[AQ@*i<DQ%KN,C@9WOa4%7Dbeu`I*m5aKmV^iiq4IkC"@^bK&k&2Ym
%Cm5#62fZ?QN=[(]UO%oC'R":Q2%?FWd&["^1UM]t6+&gsVEssgN]6Sr6l!;HPlV&jK;orgN<*aA\X-mT;!n"p*n:9$D)="AW;'sO
%nL<pIFBcX-k`p?P%TQ+f_(YU:a'$q6Zgn%&4j73!K?o"6]?o+qO^H_Xgq1lfPaJ^m&^AU[>=?#%erA*6k.S[9ZL?T\"pQ[l7M].:
%*3<d"^;mF_nMg?%2a72[Vr.:AM?QEddXQ^`oG:QPqP"DI)R7X)Zmr[u]fng2,__m(gI%KMi4YEkZuBhH\I!C45c55TY#=@`D]H+u
%C$VDuZQYY9H8"i:[b2/SSY/OqH5ap;8$l_2Xs&1[Lm!UgOBRVmYu1T7<#m/-iE/XF:Ya7$PHsS(]->2`0YD1&"BOi*I/e.HjE,H*
%8=U6-GO0Q&4778?kB5_B#]nsn%Q<3<-L^p*IQ<nXL9Jk-Q9NUc*kj\aEql9i>4C(qf$]KJh.2E'N&R/6D9hmm6_F#lIW=5*mMmOs
%i^A3TQOo_l;UC2@LR"Va,G.=Ecj+\gW+$75-m3dcKYk:P&TG4eQHdle!&_jq#jOKiY939JICpFZU<rkQdu$>fH9L=$"]UFSF),:k
%EG+pgD+';!2)\Eh2mgt'E2MRJQ2X]M7CEtVb\6Y];qj\[_`\dkph(0RnU*n:lE<QQ]J'M]/Lb">CSAgV\YQ_sq.C[OeEgh>Xj.8(
%>[*)Wq"=a&`jtj"n%;jK%'O\i.=L@9Hi,&mJ%Nt?Z04+^rPkQJ0([@>`Y5F-LLV9Lk$gmk!BUW0k/D?ob+2'@Q?Y0<4U[IP\,4Ja
%4>$-,Xq#0@c-1Q&]f#LqW(e0%ctI(^6f5>u`aNReVif7+ABtRfa01UnU2)Cp"bg%"K!NRQ3F2fi*Gcj;Gia<X1EG;+'Q8tR@5mZU
%PFL%$Tb;/K3.0q.`RqNK[NX\*)*f3;YA5)!Dff5A]m&4dj2eU=dpV@^Ak%tII[)B2]h0(i]1<gaA["^pa&^L%5j<?sNCYm-`8ufg
%66t`bfJg*G;l66Y]qT/,=nB+AW3WEonjO^g`BV0c2V!bjU.`$[j2Y?RDC^!l]g-6C4)dN':l@X5FbMPOoiA.c9.angAYXu?E![+d
%]ej5,WVR`N&eda%f-*j/Rph&O:pFh[$9#\g-L.rsijQgW^l.u$<QRi-+<D@WGsuN<@dE8=X",AdgVbaH-RuiE&O+HJ\&.A-MMTDJ
%k10BP,Ec"iQ5"!H;^:XV*p^hL9h`5S%56YHqoN\,'`$:9WPKb@`F=YE1ZucSH,dH"?f^(<EBj&5_&#,AjIe[-E5>Vd3(hNl\E4B+
%jQ(75KJus1`i@ouobCLjJ+nRsMU1XG&`HICF*k0MSu$piJq<t!K8(^/r,<%n(t&<%b#&crHlp%V^'T0CKuJ0HB+^e:r0@E>Bkr(&
%,<j>D_UZt5$$;B\pX'r*/;.sur%nce*c1+a>s.^IpbR57S):X"S!P?>eC^NQCV(b,W<roXL]OMU?NK+qlK("B)lS'TUV\K_c/QfJ
%Xn[6.,@(I6;".31r`(^m3rNL7pVt#+)#2FQ&hYo,Z6F'[\[K0)Sb]^K/6h2jnj7Q[h$U?*D]-BZIfj'?i)9?o_mRo-0)d21^Tm#^
%2Z:XmYH[9%SBV'<C2h=K&09f+7$k49.O25)D"8\icEXqi/Q"X#6e(*%8^o"I.u/sOU,=$-o;jh_]HZ;$4Dkb9%"]u`C;D+)&b0KD
%nF(!KC'5T_)e;inL8d'Z7uk+bSI3b_BT(,Dg+e0-7Za?8%'`57WNka)@n\:T&?D$1NKRj/La/g\b_DSn(#NQh?R6@Un<Q"EaVton
%fn*)LC(##Ie=JI6KGU#\DFp;1b.OSCR=-U"aM;p,-Pd2>Q&//e1E0DCOcdD8gM`VYNDmT3l3j-Y&S\jrJ/f&9B-G$*?lR#eiXg"L
%iM!Nb`%*-Q7).fFkZrf!H3r.o+0m%"P,9MeXG$@^I#G(A!h7h16q4L$YJT8?:=5._!g(1)OVr++e<2)^H;b4!Oc..=7GqRoU#>IB
%=FJ[+lP>46hWC=?<XFL;liJ1@>^m_\5pG.t'V3kQ!(+#Ip<)SU#s0\f*1n5Xju4H'fVcN&aU.)kj^pis2d-"k3B.(D?/a_K!YC=[
%eMt'g4J)FW1C*s0Bm9pori'`d'`#.VE3(si=(L\IgD98%1ZOd#<f=$uKkJUKpbM_9i>D_6I$KD</i+h,p_k*$PI06BoGaEOj3nh>
%oL.,V<"_=!p2^5W/M`#=[$jAA0Z/]`lIg"#,@:G&q_:^uYhjV7M7(4r%KU*#/uYgmoo0%R4-#bIK+3"u)4^cTe=eXQE7g!1dp#82
%Kp%6bn+q(68"ipSl%m2f"6Or0WQc'N=G%Lc*\)+^,N_7i*VJ"A%FboRNKCS@4WMl+_[-e@-B8LU;?L8Pp(q(a%_8S2Pi-o$PC/Eu
%,J&h_Q0_Ir9)'i0n+:iF@OGc/MOdjJ,U1-cb="HX)^H+'8UMjOc'^^?S?9m5F4nJUIU//?I,(Jf$rccB39#UIb[hoV!k`#("l!Yl
%S[GcF<8I"e!HN'%>kCi5C_..aHtu`5__+c-*.h3L)=,L8B24UQIZ5aXg$<2%YLI?@frro+UcF/(E9BbWCMC)TLRg56X$AEA.s\E^
%MX@%;KQnM6jF'<FoSU`U!X2!Xc91k?SKAt\(F7HFM(u342Z`HS_bf.pBtN;`*Gp5;S+_6L*TmO[iPQ6$pshZ>Nn9&Cd^+L"a"ZOC
%h;;#>\#hJ7Z(5PF)55<#Yt:gMb4[qtf,sq`7gRdop%7WZ5l;[^_'&0Kdp)m(:R=bQMeQ"h;.^>iH`^2LA<Up)qq%-s+'J;mrIMR!
%n"O'0BUj)+1tZLnU_ubbTN`ZK$EoWsZb9,$4V,1pRa\ifO%FDb*t[):6N#9?(fF3T*"OHE1GU='c7@,d'Tt)1'`];\r/A$LHo*!`
%&5UsP@7nI"j%rrM>,s'^JagN)nA<iC_AejQIV?&2]F%m#)E8.ueMS6/oLPGaA;=M=$'(i^U/9NCZ="+o'BXD0]jPM8#ekBrCB"[`
%?Qr'%U`-6'K'Q[]=UTGKUhUW_D&jeF&ti,s8!+emM5e/(6S@P95iNaHT,d%-i&B'gl%2X<,ncFQ1\S!#PTXd*kn9_SZ?cjT_*[')
%_'(C,jNN+lC,e"LZ&""o[[E0=71o9PG!f&@/3YgLj")D);ZUOR8;`V]Lt"ah3Kna.GiuDa`Nq`M.(qehZ<pYq"?U4@<lR:DI9q)5
%ipt;U(+/Hh^7QY<:<:R\iBN*G(BWJu8D(.oWH$/NX)U:hQu#'aSgjuR^OaJbJGu7;FN`*c42E7*ZC2!^A]FNa`Xe3KYt,cSX_rYY
%^-A9V3gmn1:`\].UiF+,k[%AJG-I[Xd'U7Q@&KNE7Zn@t9GG%]XHEb!@%B!WYLc<d>_kD#Mf56?[9%nF7`^=j>=d/jPokTVmnA\'
%Ec(#aKD#[eqll9X<B!7um!^)],XnbVUt:eC7.4GD.(:A,Wm2hPYG1uQqJj9!"p42MX!HCNX33ob/ZXe?g+B=?K_j]/5N.+kY[:LH
%>Z_IRHmDDt4Eb/oKj,.0@n>*h3cc9i#?2+Y(8M3O9aH?*<m>(f>/X%G?[7)bap:e&"C2mo&Y.u>6b91iM3tU/&0;*5RZaIgUb1Un
%d)_fDYEUKD=!'P5EJDPfe2VhLdJ"N=(YgRiJ4P``L6skY&d1;ASJ6'#U$-d+ZCL'Gh;?Qc*)l]U[IH&RE_^E.bLDhM([6oHH_'/0
%HC<p,11,_":G;2Z5>M<j:Enoi^+-EO&kZ=^OE;IUf;k,M+^%'r$An@h+k7JNl<St5I1^b%qK<9K8.$nh(#6/JZN\70OFm]\<-H@!
%-r<1;W8(!K:)JgUJ$C2n!.sN%A7UZjAFH3#k9dj(U,pZ/m84fJN>q<&crq[%-"fJ2pJO8B^[kj*0oGdd_mP0??%*<6B'8COR1WeL
%^`rTjQWGP"b-"KjFF/-C3b*Z5M>6)2;(M9.kYC>3D$Lhi4Qr,HB[kln02pn^GsQr!2UJ!A+5:X=&pc%t]HlL="+d-U9+q/4Qj[gW
%0n&);3V,e9AUPD-Q>TqZMtoUKn*!H$XpftNfdN9/)gSDT,[JUjRIJ8tadT^t@sg9o11NAKPMn^GF?HX!.`-8?!n3R$^KodL-33er
%odR\)GC:+Np@:%&bBC$``K'>uOa9O_`u33G.ZXub4i2I7OmsRC/>m=AAB'\I!9g$7\nh\!OOWM!!>Ki.^?P&r<R6L4>j='rZnrE;
%^WF/1iJNTK$]ElP>IiId9^*QQnqJc@H=Z^Ym'e]?W6bq&_M2i#PQ_b!bD=(<mpqs7E?%$t8B;7l^"GW,j%S\i96$*b=G_sC8%WQd
%(VSTRrL[XY=6Eu;C>NY%%$.qohTJ%DW7->QX!fuiYgX;KF#j[(dBg5UYXQ7I8i<WR#qcYu/%%o79W@AB7$?f_.iSJ*P7)89U,udT
%2a^RGO-8(RD)Op,oX/`L*CldQ9nrM$>-/[!p@q'#6*7Oc-59`4PSaS*P%q#Ko(I=q5@!%7Cs?u#D(1*]%_fN$A0lGO7S!u=MPRIO
%#k\cB?Pd_uZYJ8`U>4Ruc^!;Er+KSCbn:B@ES+GV-%7JG7T/j*:qWjre^_!*J]9ZH4LJ08W,5"7&h.N]G-^.6cpe]*7sK)&cC5jM
%OiC$0qa=<j?(WHRII9Y<WcYdrF.^i$pcA)Eej]GY"7OqPaA^^M*'ASL>uuLB0(*Y"cHhBof1A)F))FG0XS6A(j-&dI%f._?%#p>j
%72WL6P("n"]aN3^gL4D27T@RVa28>FDGqf1BU`b&2la(!JmctR2ntPG8&ui;EhH4)2u4?(pgNB^5i<c2f)>No2mBHaI@c#baNV:K
%L<4+Y@GuQ&I1[;tl&X9Y1P!osF+D-NZgcZmp`$%kV-c_(-N_Q'<Sf%>q^_hdKBFFZY0pm66oBCNhU(8\*']))kn5;YEInptgHFIF
%UlWnYs4_`g-s0^kC)`hs/AI$`e3UY[*OF7M7kDSo)kZO5@`a&a?:2c,Bl0']cE/!s7+pOcaW_8BMhHWgI@2qUpH!;c1=BJl+q5/^
%q=Ba_Ye]hY'IIZFbo-qd^cTsoF>$,4cIP+,=@g;#4q?*Pcu-sJe00qXbb2H1Lg&?rD$h2WCJHtDcs^TkgNg#aXgf$97ee`9`5$\a
%/FmDZ8f1]NCSWtn2fR&Z]mYX[/o8akXiEl>T`r7IUNdGPgQKRm+EO?^+M-]UD)pe?1P6o"%<W-,\E!jY#TAUt<bnJjYbn^A[6^gc
%d,$X%*19hd)=2auc"OE#02b4Sh'--$Gb$UaO]\I)M9D`XbH9OcifQ$^j.b;T@\AkuI1Q:cjX#T;mRU]=<%6rU4Al-?+"?bWh#Qin
%>t71[rc"nJQD+Y81pl![?$G#=L5po8l6bP^YIbZTG5,XcLa$Z#1nk@^-&sOi<Ur87kkOb.<CnrhhAt3S7q#;+4?Ic>R.QIH-1C3Q
%)K[Y31,56rLRe:a&(QZd\Fqt@PYOO":UE09/-u,r)oQN1lX3*#@;'eIn]obCN%B>R.Ug8.AsG3i1KTEcT!+@@$):Lq\p_d%-S#NF
%'QRM-p]IKA6UrZ.FV?k#GVR/[C*Y'n^j',+AUp6*C34XsOMm/1WiiJ8!Rc-kE,-k-c78]\DUh&7'tGi!]+)=f:GV<F6cWVKFd)>Z
%Vq\_M3AKl"h#*E-p##dT)OKcKk'R"Ue^Y@WOmXD2Y#8S2elHMbe3/.ABr.g.0qSJfoDcJ1q-g8^k^Y)=`G]Z3am)Gp@9ijjC!9/&
%El7^&q<"!.+s-22m3+fR7Zt44+c9h/BQYd+U)lWc9*ZST4Har6l:XON7[5AF?lDm/&d;/,HkA5WEfjobKKGA"%i/;.2YX4NfM",Y
%P6XAj,Ym7gBV4$DmmrBmElYg6B7<HX<Ltk,=7tHd"BM.`2%ki#gFA>Xg*i;%r3DZ=F>uf@.<O4S[KWb?.ep?J&KV::4?OlWjQ%3L
%C-WfU-/>p0@aqa5`@)C!Ct/i4`QAPlrM=di=Lg2[`[E91',2]HnanfgPgK=Bg`Fj%C.7;57(%/-CW3NQLqPZ:`smhCit(D(V&?m*
%&,*DT^koG(!S3(-bC>YeZMmo3//quZ`36TJ?Uu'N06O6C;K@SV3&JO-NC3/$,tCJ,4Oa])WGlB7QblcK2!j;RAHS-\ZTdPTS3;D(
%D9D4h$/;-?Y.78iWOD2F:ol.f*J4&qFeg;/H+6`p=?o>8#_)-<WNaWs%@g(cO$VT.A)t2%0rY*.=BGm%#Q)*%?q+@G"^Rk*DLt=R
%asL5eY\`/r)SauTn06!e*jK]ZIpIJ;S&"*`gk@AqNi1"]WmbDg9oN^7<>@f`dH^p08rQ1VSHX(rf5$p(\pFggnrZYbE)r=RG(CG[
%/=N=RPXi=/72$<Q^_DNi:j]i-o'1m:<$PYj+\5r%$)4hiAV+0G1-p]3^@im5doJBC.Wo;EXO1*m_'4SE33+lb[8$-GC)RYW'VeG[
%#%#Xu"a-]@504S3'SP@`H>Q"14AD:f8p@9e+@M&U5;XqZ@buuD*NGeV$aY_q8Z^M.2TW??%\CV^bdJPu&]rWYRPd-2Zcnk[KV4!a
%e<\7BUsUbEP&^(u`b%t;&r"E_LV^^m/st$en3uWb-<R+J3:*bE=>oUtNF-H;4K1$ohDl@r5XK"ke[8\@17+H_IYc;.d.C\q0Gc1Z
%)R&^Fnn)+\fc.Vaq'b2d9]fkoi"9*'@O4kuQQ"[b;`-$Sr<_r_gdJ.l8nOuS2kfNQ>&.t*4!6gAcQjOg?MlTXeC-<EL/(,7KU(pq
%9$!VE55\Ppd@B(!hA7Unl[=cTZJ*p//q[<'q_P;O)VKTP71jXT\N-ON-s9^R1D?ja((mmkZVG!&>+CQBTZ`ZJ2ZGW]f;:/X`N!^"
%L;j>X"-ja/?pgJ7.V;a#AG\/A]C,aD7D*i=8@h@i@F^kj=fK-^Jl5B%_eGu*T/F`M:@'8X>:j5naf/`r5M0WC%`]F3$U/&s5gF$n
%>52+_MGePY^@M''7U\"`=JbPOqrB5`?W^$U%VmP9-Rrle!H\rE7H&=6I]8W=i/sRaPo5*/O!EJ8Wp>rlV5SN_@O'S60pYULbX^/3
%b/rjP'IU@L:t0i[F[ABAd+ntG6`M#B`59?dX>(n3SATF^R*tP.d^^EDJlMc%@Gj^r1>Z*i"=Nc?c,_)[eRi?S`3KbOM(JO3Q-?G>
%%phk6`%DlY-W>#.Me;34(Qj6#)<MT$=]:8KD(i1npPZ&s$^D_T>Efc<&TU"hRWM/:p1dT<C4ek+,$l$8=]5q'8H\UQm.--^I8h_Y
%"N5iB#@72&/>8?tB*#G0:7h3<=GS3RCMe5@]>;5X4ue^+@oFul=,g;taX`Y[Wrs3]SOF1+g0*o#as'$aWpXaGi^^8.#q"jmdG^JF
%^*AN`(rp/E$>$9VMFATsJ@=NM(--`phBTK<A"j9<8elJtC8nu#g;Ea7VR)*EP7?eLAW8`<fpGsD-EI(\&j4+`4Tn/@AMLRIAD+E/
%H8jL.(Pn*Y'n_rTlA@mP,(8"5ArXZ:7^P_H=5*j2Ub&68=3JU&3-Ps4lD*"nUnGWMC`!S5UW+<(*Xiq7@lP(B>MLpbd9"SDS[4YB
%Z,pV>5D;IIJ5fg9c#"cURRj-_$77F7WQ)@Qc;9o7<-?pI$L5?.+UO@M2"22F'@YrVAX5*sUODNHE$ha?p8jBXXW\JeXHl#-,]4Al
%CIEWRIIOVTLpJqH(heI].]XNV+&4VdB8=9<,\@gYe\SWr/%-p!hCiR[_2$9)-sEB%AR)C^XqL+l+^jj\:DeI.\$YV.JA7Ga-=Ip^
%>;==b;K%d=(n_RYPm4nKpUH*Ic&Kq._q?s,e/G:RcD1>keK&+Uk*%%@4KgK.P$I%h0+qPX"YGmCp>I4S;0\N$c`HqXPlE%o7dutS
%[]'/2cS8"Ei!MNL*\G6';dpq1\S0r1h)NGM<]!TeCuQ&W&:E2cFppm82_8S!!+g#p=KMliWSgSfSSbt+*&VsGZ9L433\dDRr`#oG
%K.8SinYbrWfpEYXDYW_]ZL$A83W-!=N0+gT^0'&2rPa&pcgDn\rJQ65kN2;D:0rU5==5e;>ploPXK<+<h;oEor8_b+9'$k406/bO
%127G5ToWRl>TBWT9bUKNJ5QgP!9mlc_W*:<6[kihg,:)=CBS9[UP/58)&'"(>c8:DUUp0gBle"CT\-:,NX!L2lrN>U\luEb$mnN?
%Qq+Dnd9R<N%q=+iOkphBeWe<M+S*uh?[EHVBa]<V]!;QAkpq*gOi"C-(2<\M45cqTSfE^*L&B;]<=St=Ri<M[gotA"A(O(Z<lH5I
%LI9"_XHlp/f/R&s<4uo5.u;]q;/JG=R*!fKC,/SKYGJM()KXX;0j0LH'2+rC[3d<$Lpq9D8So&%E[T_%msK)Zc)+o.g`W%#IY)Sd
%KU^).?[!a=a=A3?Q,'[F=%Or)@?npn\@kMs=$$jt`XU*WrKak;FM(1Y,+=g&X1k,0`094pEG@f!TYt=I\7F*@&T9/1&L;E\9jVF%
%EOL/?3NA[K%0i(`A*t7KgN4D0gs!cSA9W.Jh\\LrNIeF,bKZ.Y[`d6?gOLQgW)F":!50m@27%YUdHs\=II1lj-EREh=sL1dJi3,A
%(0DleCk5S!^Y0HJ+a5UVAaJ2dS$NGj!EgSYE"X*lI\alk)RV;D//,l:8Z^3#o\?,la!bm*YYr;oadg>HbqN!nVZ]kUn3!Zd/#FSJ
%aGab1q6%jTO,Xm+*8+<n5Jlod[R1>kDcJV3QF:4i+4^4<NluAt)=?bXJf/Q.\6gJa/B1Zkb=5SZYr'-djO`)jUZr*c7P(`^7gBf_
%TNaGq=AZTFK*E:1)GYGAnRK\2H!0hASi*Xi:#bnm'oS7"C7U`N7MO*5QkOLR0aC(]"cfA]n[7Yg(<reCk8@e8K(BVLof9&XIL=G%
%4(OP:?k'?GN-[K4&EAqT%m&J,VIs:,a[FC-Rn^hQReTI(ZeHX&K;*In(C?!DdO_IOEDr>8pCfGO-=P]+QZHW*dTg=Z<N=7)>,8c`
%?!O5=Skt?PIqF18,Q4i2m*DP@ZC!N#=B+A?&MHsRJno7\\QYe&,B#3bdrE]k%F]DAE"3:F2Z\^!EDg//=MW#RK7LOpnMl"DZAo_1
%cqC+:#,F\LM6**K,<Shb7O(4>a74GST#@&^paI$<H'?RDAWi%)@X2[V(NE-J*$#J[LlN^.G4-R(+`:sDLWGFW'*!3=ZEhC!BIg'`
%(9&h8(i/blEdq=?mgCY3W5#0DhCYb3[[$;<Jpt5Kdlud7P)u]+X::b7*1e!YTQH-mWZ..s::!olA$q*2X$%:0VC,?0A:"$YM('</
%C.gd4lkE-RYO"]9AJ&Kk%!3MW)kqE)aOG<"[\]UEBbaf!$&tZhD*%=S*nlq/=C6FBT.$bF^R&Ua97N5<ZM57#X'qaR./[8Ls.trP
%6l*0MWC;2#F:2W97)^%PNF]Ot[oCS/7hS\_alTsdh<qCO"_\Q!@;u388XNR>&0%JqHY=EN%T'&cWi4#Hh/8$i3R&^U>V/'0(%JCC
%.NHEYVCbFV45s)6)>"ZR!&,M5%1rA.qN+uY\5e/hn)r*4mO";5=*DD0GssO$8mo$>9O^TF[7K@[3sAq[TgVk"L=LLTS#qZu)l0Do
%RWsn;;\1=>$6Kl4A'mCNRAtY"g+rc'2=_tbKkWUc)p6aQgkm29MTh5Z<G)Wi1#3$T-8J9obZQ/NR=_K!I2/;2?StQ/:L<-*.'t9,
%Z\PE^8D-gkbYaY\o;D,mmRES+=#[u?J`WG?Q,M+K<?b(:jAdtMg/`GA`=d=)n-occYV6dB]b$qEUgR1WF"i"q;/WVc+eqYqc_@>3
%pJkcDqUl*:VQInpN'9oY316^=G;#A_bR(4faQAe`,%0m)"Ba__AN;Y1'iAK18WR3'DGS`DUR]"_M-K8pf*#*GL$IN@C"I]t5Yg?f
%mCdHcYO$sC!c+O`71r8%f2X#QXLCgaf@gTcV-LlCXVT0s913s/(GbA%h[XEaF>Ao?W-/orWm**8g/o)i\]&J6^>qUp(H@e4iN=Og
%/h/])J_?Fb69]M8BR8ip?j\B;L5]am9Ulond^br0oaN:_e;Kc<VR5YX6r73]&@Omb&&m!)c!'>mcbk0S/&20;<Eig*\MU-Cn9(bS
%m9u.FP"9,Knm?e;3OF9VIp=;u0;2Wk`NonFkY=34gnBi8fJk1*JDQ;l:#meE9Vc^i>bXZ%WX*`]/kL.'U9[#s3j`>jTbHTI/j,YM
%cA/@K'j!4X"RE^CIVj]0-62"Y/*e_BMMrgP.nKm15]'YHLk_*=RlXN0qj$>LHg5!.+'JeFSIG8'*JEp6,`7&Vqr2;J3[Lri[Tt.3
%$Ek+F@_Ae*(o>i@r,aKpCG^KKf/Mu5n=&n'@/k^mle'mf5]@Vkg2G"fiZ2DR1SPE&0q;P(!f<,Z3nDFsklS/(,A;piXq3rT6`t#O
%[1P4<D$rn=/'O&iM'jPh)][h=7,Y%qhgqGJbW]n`5_>sX]OBn%%Cl>Xb_4-tLlWd/jjei)CKnPHKU'ETUhp^X<f!eLItbP=[-h;D
%eIC#l4P70>Kd:Q.LgTOA;]@!MO.^dn4<giB=Z8Y1D-@4C0tsT"iqHL)<e/0n^4;sCLsY>lG9RYXOjp;;J29\]6)2D>O<3&_=k0?N
%W;&>8Ei@-_C/j55.SJ7WAC`^q&'n#%mioft5*,A:QiE#M^mAacL"E7R.sR>n;L4JBYJp<E`mLp(B=6r+CnlfmaHg%9ded4e6Tq<b
%(TS1FLK>VEL6nFACj7(r0+-K.]Zu>Zbfu6[?8NJW2T+?I-7Pn;>&ogW&AUSLH6a'><.LC&Z'mj4F5/=8MkDQ4N:l,;Z7Hj^3R0A_
%AggVYc&b3XDC4Clj\9]k0(=#[9'K=_@jS>-=A(;Fq6`,t$TYh=BNeh3&<o"LAAMe%<S;Z/D+H-j2Ct'T(1ptrO"=U[%n</I=YAf$
%K:%m"&<=!QQ)JH;C)`>?O]]*ed*Oau-IsKR?t#c0pD:aXjVK7DU1B"A1J2:`+hA<oXG33R-<Y&Yf%>"H)^AWKN;$=r_Ml&M-*>Ts
%9!;,pf((;M;0neUYI"t7G'>Ih%..S`khJ\erukS]g+m;@a8Nttpd+V"nfla)Nbfhn[L2=K)fcPePuQg*A5t8fXWHY#0*miEk:VU`
%S"QsY8Z36AM&T"X'T[IBO][;j3H5n00"X(W'nacRRG,1Xle$*bEcAI31E#S$X.,Jb2"&i1;EaL92PmpR$EH#8dYh(k42<&r[I>*r
%T2)V7NUY7R]05lNY!#,,D@bEV%_-=!X-!bUF871rECm)`Q/qfS!QR>gK+b/[U33]Vk5ZaC)EbXTa^I.[8/fi:l?e4[(HTA4NWgjG
%B]2bojmXiaZs^E7#jPh,<f#g\@isjs=Mpd'XJEBZHo,G&g^D/2YqbjC"-)-7n^?KGFaUU&rV!VMV9.*"rTG.()eiXHM@SPH`_2i/
%5i&uE`(D22l\?3="I:YE0gUZV&LJh>^5FJCnpr94BOhSZ*+1T+$WV'LAe8W'd!`GkSjC*a_?)ngd*o3E_dT^Y/Bk?eg\`46r-nX<
%p()0,'AA"G'M#1iSO\K^ehm%CSdDdoUuA8BdrE;"PU-#[BSk.nC'($T'DOUWM1J?7MP8:n$@JDIa'99l'GF4&i.VADjD`F59\jFc
%ra6"O?k*A7-Kl"m5/Fc.nhSm9+!97+M#7o;%hA-,M,A.p*d430_H4snE?#Ga8_,%jl10?c=/"GG6]HSCN!5`;f=^E;lY5O5cap;1
%k>MR-e,Dp+R.frc17*9RbKjd1PEC?BSGP3Zd.IG@T#24?4Jh6t1.]V9f9M]Wq'\`1Yihl.H"+K0=W^G1ldl=s:9[?rr/+D]iX$L@
%(UA8e]oi%c:0u6iOeC6l*Qt?,p2NL@@F#J,`t$Wu]eZ]C6jArUIfI0eZlS!dQq\m8$)FD7@]c`aX@8BN.2mX8o1`V4?+Y/;TVj;N
%1<>4kMYdpC_"^$7d&>s*_#oV1i<Z'@JJ,dI4a&sSc\m/tE>\6U/FI#lj!suQkoP2=p@D^9:-PuAk6'Gs_iV[T5&!jciMR0$]'17W
%l1;fG]r>bml8!TmH'JIjE^9A=@m%cKk5;C40Ln?AA,O6NJA(c6J,/NY2o#1XmI,MujYup`rp\aY4ack5hu1`Bhu<H+%hJ^5`t)PW
%nDUuDlgFSn^O5e)LPKf_*k'aqgm?puptaQo_uKV+s,6m=[2_'pO5GHeE;KG0_tWp*o7)8e+5\X#n$JUqq1gW<q(SfJq]EQLk(bTS
%I/WGns3\T9kIU2E'`%4TIf8GZs5`T="4A(Y9P8g8s6)Ct7S:=*ro$(koBj<kqkoX*m"8LfUfhHW?R#NJ\$>Ck^!t34YPlnZ>9!UO
%I!,2N:Z))ZJ,b%+rl^'=5(*9h<p?cE6e+PtJ,\rnf+6d:n?3otIe-+Lqnm2/*/W5!,ed@*_a"<"1)kNuUAL^1IR'OjIH)oo6J`>m
%"5FmQR*-Fi\\MH&BA6p>_==Fk?,UJ:fjE)l5iLI3gb,nRGVHnRil:<;,RJ.7As5Y):A-SP@gBBKI^^s?mqf>F0GB*E]V"m<,1PRG
%j?0"u5'?%5[rCU,nO3oQ$mMUSRKbG;_+60__b]E<5TMsN5[YA9$V!$@#QgnaF#qGE&WrKl<sOWsIa[]P2McL$<o(8D<*q](:u)*\
%m>blG@'=Ge`d,5C^Gd_$p#jg.^.r#br>?;=gZp\NVJi$JYG?eq$.HJZ^E/eH9%sLub5G48#QI"JoFV3F6_rc`TQ(ca.!24<^E9Ic
%[;4LDWBn0)&G<u#+7f$9aaU1+J9JPtUTK0^\nr;Inbu4oTMnp8_('l<$e?bc[b#5P?*I)c=5!g2ASAR=F33EC!lA-n.s9@XNC,'(
%7URoG)5(ssCa`clK6IaS_+74rY0W:u\e>^X5roA$e"L!$l3?IV',oRcfW3b]E?=Sp[M'R%ALFS-(HZ&r_QjhUBe2>SQ--:Q*k[HJ
%h9b8&Ro0eDX?h5ER!NTtW,FZ9+t-:@;K@<])aVlo&O:5gg0h\@mk)F..E)+6p]l`e`XhSTB#i%40XfZNf!eu92M1NsJ#5BU#n)-O
%['BoPM2S5IaX^/!MZeL2jo7YZG!hn\[Nqn<lXR81?o+t,n2'u.ndZSiiJ'ZF?NX'cXg6+KXa?11+YJ\/%b9r16o`m7GL^QWY2,+U
%*SdZ1K/eh^B3P4mW^'YM.S%N/APmcE[W6Jk;"p5UrmPJ%e1hc'4r3sq\Wom@,>oOYn-o\AM*Z.PlOb&eeqV&m!V,c:lA1Q^:6X2^
%D31nn@te3*+#Z@#Tt1[onFVHQ*Sd[\_`3YMV:YD3L36F`"(.t;*#,GqQSlBIH"$HJ[""WHDlW]&HnZ-UR3X^4<EEebN%jGm*8+.N
%e5g*2m5fh2)FX4XDL.(Eh56b,m1,!^:/ma-h]_83Cat4o3]&`VTWN]JD;-2YUOC+&@8:%bldV19o2YX]m:?Xb%=X_bJ%9<gZ+jS,
%!Kr0e8"QFtI"^H^f+3heIKq:4ko>"lRq?,sTru<64_lpMC'.G=0Vokkld0&J1phD0=18Y!4Pl]E%ub7tc_7Q/JQ3'#*a#8DCk>Y:
%s(/6fp3gh9$kUutZZO^6YG*q#OS&]#2"$#+h/j.?\kOt8bYqSP+:<CMEe(V0'Ce)R\5lmjFuuCmXb4<uD&DI+rbOZiX,0#q^=WbX
%'LpjC1r`9mVt+3%RV;&.f4NZ?DPN#@$K=pfEm!<7;(t>s51i]^4S6dbEakQ6Y/^N.$\B1T+*,$o0NPV*A"s.[HIlre`c*!bca4!J
%4jdoh<fEa(W%0r;OhN6V:>rs(7FBcNVUD\X\CiSj)XDd^l'd29)HYpQ2XSCY=jp6,;q0>8*1T6[]_g('/T"j!6[#SLi7>NBXu:mL
%0RosrhmGl<7$WsGQ)lCI8m'b($`*_I<(+fG@c6:[;cb(DOS:pI.!UIUEk,%!^^,qcC."J&@Ap?n+,4qD<<XX:\i71ULBq?&o<,Y6
%3q2`qDB7N4lbb]ApLdP>c"RZ8Sa(5bXO:C-r`.)KVdH;!c`86fmfh)O]s%l36.B%jNZqWj2B[,Sq\ZnK_a+TZ3]NLH:`@%l!D;kK
%SiER[hq\/-AuT^<RpWQl"^$i<qhg+XZ\;4:V/SLSHG.B[,T2?c>30-mJ>fp\m7_gio?Nd8&FZ=Y6eqV-%YGJ1]CR][?QJ?P$tgY7
%RdnGjMp:Wt=a5DY1;X);VuT0H+nWao.Jc<.GIJFj.6ICOB=bcYrXbLWplrnA^qdcC.Y8Z14oSa&PFU%uEYc2WBV=gq]="W&,Dn/V
%+V-H'Fc.@DH.S9J*./Ih*BNqBju>CDp(V/;PKt+-Q(AJWnEKFncNjMuSHMI')./CtBMg#Kc:7RDg0kQ*JtVIr^sa0M5J3!4+^lZE
%I"LSoCV\gNc!TU(NJPh]fn5P.Y8g]>6!-DoDQVIW5(k?FMa3;T_L#$`$RA?WJG6?gA)WM&&r8Dc)ic_Q5=;mtJWJ9qWHX@Yp3p6&
%q7+(5"Il[*3F/mXB9WS6:0T:=Aa7G+=J[Z3^/!X(&*<C(RSimf$bCQK`_)G)GNVME1U(p;S7S+*d[=<mP7fUK/6FB.C>=B*nsPRc
%8GiU=OMtJk((r5U\WKa?o:s,ZRmR1"Lno&(Jn.;n'JBd&8jDZ>7!<*FUob6?!>l-FZLt(\pU`UI'K%o^bABHZk<Rjn2/?u<J@%86
%Z(nGa%m+kP@W,d%`0k)\aM^0$Q(*9ufC/b;jYuqks7#\??]-o;h!b6*K?KV=4HQZ=e'V:tjZHeN2UEF)Z@kufjQAk!`'!>$[W?Qd
%fC+4apu12nrEQT(Z/\$ecfIb@gaY>/8o+G&*157dg?WT-'_*\apr0mPhHb8NR0nQkj.>6@mAsQ(hC(Nshg>8N"5ico@,\oQR5b](
%)&qJlQPoT4([U<j&`5S@)lJ/Fe:1\mH;K8'%u*=:Y-.)/-gtLkBq?!<7QcTdp@DQ@FRA/ibmA\<-h8d]Q")Hj25Nn&S-8@`cnrR'
%S#XYo6Qi7X:ZUp^,>@b*U5rAX(SnX8YJHb&($RO374/C*35)@Y7,E.8,!`)lYDeeaflnUrVW'GiCiWZ?GT+fDl"^#S:0Ol]Y^97k
%W^ktM#QpncZ2qLu:n@lbR@0=>FD(6#KAR-&6IIC-8`W?-5nU#M=<eMdY5./4ki@k0bPD=3.^d,_kp)`oj#C!%Ys3a.eW8JbI*T<u
%6Zfp1JBuf<i(L*]7;(osq"b>N>&1PNVZUG!I;nup2[WoACK1((,`L$tr,,rFDG<0`-_$;FVV1YG]XU7QeXs<!NH]f7;W6juSW)h'
%L%Mi1r5/lI[PSp#@@nI8Ni1uW=i^22@'M.K7/"U+OuI2mjs"$*;P0JG$qid(q@<!G%0Ms/WbW\%Boqog>S!@;+U!j*%3p`^@1rml
%%M_R7l3PcSD$`t_b7.1Mcp2Kp?6-=2H]H7^[G)g)4^#E-Ni5BA71LNrC?rsfC'V6)ot%RdS-LRu.0J96^IEmuGAK6hX'O"+Oc$j\
%#lDk<gPIEab>1AD_Gr0V3TrCY&4\Qn/[/5F]SBV*m]+e[e\[#:G98$,UIRTA?<r?+FpGBsYZJ:Cj#gYA`c(nHe.MQ3+(YcYe)BRQ
%/0B-p=^=;0ITMjI0"@s?#dIm*Q]^]Q1RnrKdEJ,Z268K/+0;V"d!C,*M)o$eSV[Q#Feq5iYi#FgIs2/O@;NH'@t0iE!ke!M-o7TX
%#j:g/;pT`M"/=lHirh]VEWX%4LDF2(*==L7&^K"UAEilN.=mf)b$e:0]:VSI'Ji)R0MilDV"$eX-R%]aJu"b%,)opGB.)tWjEE*M
%.N1<r3"C(nf?N<m1:q\LNT.Bp@Q.obA1^?@.5m1IZP!)3_G/u_hY4@CZKWoJ9<?GAQK@s:T^B_/&:nkE2BM$dccq79Xecmq^8gS0
%g=iTJ+M*:acH8X[iPEEq!1h>??R^V$!!Mr(-V]6]jm>'dPeVW[O`W.nYr[dZcEUN$a7Vt[cHY>SnN1'3N,%boN`"bf[4sVLEQ`T=
%XKaq\m5XTqV/OmI-T5c]%$m3ZMo-sg7%WhMl!2:J?_%XOY?m_0XRbHjfc<&=k@Ae`?CmG<6$m`\N`JHBMtc-reM.5#7_5lL];;9Y
%j.4k6Bg@fj#3cWS\O&E21Y?7!(kHoEDMrN2C_1CDI1CUUPeEfO,PJa&n?1m8ff/'8>K6$Kj7G>%IeU;,Sg!NFBRb(`]Ze=c,=H?$
%hPMR5qiI1^QFrq3HET)78pf%V0]$@j+CU,>RWp)aoJZkH/%g#[%Veoth-8?rgZ*_MG50V@_j4N!^YQ6JjVci:D[gct__9?18AhM"
%LskTFGs([&Y:d(*);i^j*IC6KjFAF+>EkI1ce1s!%EK.SLZ(.iD'>Ogpu+Kg<o!ai]*G)CR)HS*Tf*$np2NUa#2P1XM"YcaE-O%c
%g<QIag>,J[ZH'/379AUq@J158(J,k?X,FnVnaeKaok-C#SDS>tl]1jFG6I&WL)kg[3ioseiBYReh0J$&efAad_Y^<2pDL<5:>>U!
%2-2_b]7+MV%:n.q]W6_=YIpp33Bd1F,0kZ%>p[fGN;?:L\14j-eUeBA;5/00i"Z$t8!2ZY$[\`Y:mMPXgg#$6$cNY']pu`A"O?ui
%D0YAi[;C`.asB!.N^erU@Amtoj/p^krUo#a+8.F*eXZmpX)Rj-"KEl:!u20+61GTBg*m;HC=Ch/#48D:5A\7'[;C`.\t]<Sbi2=+
%]e0PBc!?fjltN\Ped&G0FW.6BJC_*2XBX">[-]?6'%[HmMZ*c$S3Ss]&V1e[I;7eUW4fUIa?<dD.rat&ZB_fM#2P1hE8]M:_hYU]
%OHaXaY!YRg*Gtc@[;COUO7rQ!F'`8/>?Bj9RZ:K8#^&X3K[u,mD`b8"Ak1VFHYj^aHF"hR8^_^(7s,V*1?q\?LW3pbFR*86X:O8H
%eeb1E1QT1i%^sE]nh?1ef=2[?0(Ue3?KYkqkVhU9Hi,?XgJR#U7iNmtOf.U1EL!R^E_JK_gsQs`RuD$G]88-=.XshMAIbU`H'*M(
%_TeLlM6juAT2QP_78AWdbIgS.a;VO7=h=%Y7"X;$X+K'I=3dG%E\R!%i!`L9AAdu1A+r@\G!L(gIc_h4_&)O#HSclWYjd2hmm"bY
%U2Pd[aB$\3Q"tE?Fn]=X:%AeDX6YkUWtI]cTqfY6J#LZM->W"O?%l7fBcYtmm).JU4,p]WGkqLdAd%Q5K]!!a\W2?YQ'C]V@ttu0
%-UduR)dfeO6e^t"&B0Jfi`I4,/oocB5_Jc`kTBM,Ct5)rgVl9urPA-f&:Kc5E\o"u/s\%X&Fd>CJ%6$uGK5_al:!Ao93N?&WFVnr
%dXFS`b,\S2CYO%Q0<=GSgS!Af[A0jR]t/%pVpW5gPS`j"\Ygdd9">rsBm@Yb3]fSO0fO1nr`7cCUYb9,9]B##>.aYc_E)9f2'(C.
%gX3-Q>BP?.VpYM!Eo*4NmI@749Ve+WIO7t..Rt0"AsK8'U>D<AmI@6ID+Bi6]PU0'bM6r)PfruA&GT!_:?9)g/gmDtjDuO6X`?Ib
%pD/&1bKG6FIb1)WQT1SXH](!^`4]0R-bEoSn%GU:=*bjDGmd.:W#nNFHP-HujNP@a*/_F;FbgpWU*KXha^sC1e:Wsh'K?'PbJ4'=
%Dr[rOC_T/COPc6`'_1ZZJ+/2F,J[%u,$[hfKPk?%)YJgr\QhjN3<IfGTL5lT$lQZWeIcMVM_td['ejt#("%>gM$3b5?:1Z!n(.3c
%f(E(oEI;DYoP]NK+&%g!WFTpQcFj-^onZgL46R%<6h-TWl).M@J5B1@L`on+4blf>2n^^#Jg("P%'C`j*.5de7a(Ln,9$-=BiT:d
%BX*2lA%ennq=>Hb8X'YbL[NONa2it\8bAA'6!%IG#PWEaTdm8KZ6MU:@Eme*^?JWdRQjTW^gT)L_?>BlJfVS2"bspgf@5q&r#=;b
%[FNd<INIJFbuR`._i>.^7Z`g1!J\-e9o:racfB$h0FY++:37a(,,XBFYCl?@cQV3<Rd_kY+=Y";L@AU!XbgKa$tlKA6WG-E>3oY_
%=Kb?oIN%-l%Ij2VgZSa[Z#--a7]t$]R>!fT#)n1Q(lXuj/N:A76q\Kf(dh@=\JIGo=?![:7_HBQ6MOS]7s8B\@-^jsWqH9P_"XI/
%0&&NajCrlq"r1bH`E*^r3eA.cl5*eZZ;_NCA?+/827E@;2o+<-78>H^AoDp2[T0-HB6O!Al\hYO'jWtP0M.0M&/AJ6K6.^)62L4!
%!]_%B,*6=)1]f\gc6JQY4->aE^\u'[?k.kSB9TFdQ.(R^Y+AE+gu8Wo<O-^94h=,Z8L:`G3308MekR`(C.m_).'\#+m?YiPJmf2a
%L>T^9ZHQo[+Peb]i5;h+50gr*L^aNsPL;b`3?rP<W?pU3C-]SX:>ct5%>o<b;X7Grc.SdqX#dNYGFKQDTHWdEDDgnn@&ET(;sLKd
%KprlrK<>+Rd9aI%a]q*umG3T++nb-TW6`D-hu/hQJI+"$/%VQ(RtR:@Uui>V!,W5Ke%/)'La<RS2MCNfCn-_OkUM2Oq,Yi8f@C_d
%]4"Yc"eE2Y_/1fU\ufS*P'Ju77CWH%TDc*5G["/eU(+i/;;prC'@V&/cJUcm'.[isNhGFt*78QfF6qbf63/aB;)u=NX)p`_Y1&Sa
%O,`D^&2db1,CF2;UYs!E`[%&jnq^UVb36k)@\-HXmV,;]4f,S/L7i5GBaXRfT0?@Mj3rP<BCJ3SY(TGcTOYTB]].OhlflV1&N$YI
%qDJoLT+/Eq%[]Oi\TlT(%ibZ+%J.r.qlsoGHk7#YNG0q:6AUQ.pA,"^HGMP`L:-G5lp)RkYJ-"o9VD9lJ7tPdAd;`PXaMa.brj8]
%bT3o?I_e!*M/IA(Y9qQ?PtCc;5W`$c>:K10$FTIC1!ukWH3QSj$"Slqj5P,lf/rUC_]HELY\^j?Y:sgXS?VB$I#W-\"[IFpb\s$I
%NAIcW5dR5Td-!lJB+8p9'ae4hTG%,M3ebWk\;]Xk`79r@ZNS#A3'@3N8;'(7W[A\jefCjW-Q:(2nT3f-=Cm\/.nQ2CgfB'39ni@f
%(7HYiHQGBC_Is7M4rVug_V6)f8?K/dL5J]^j$MlH_enCtd*tU:ZLeI[r-if(\JsZ/XmC`8*tO5&UMR-sak[G:f?D#k2kOLW&Wi="
%q4#j?]Uq/?c/qc=g'b6BJs6!LiQF"_Z!_ti<StMIM_dBTDD),tSB:<2mrQ$,0?rW._h/sS-7nITHZr(IoQ)Z)\q-U#d5?n?5B+&*
%n/^Q0JKS*I&?d9Chp;Au&/R&jmMKd,WQngGJambP2s3@u=7<5g,<YTu[/CBGQ0#X+hp_LjQO"Y]V:qeJq`'20IAfD(`VWeSh(633
%Z@scbLZ1drO19g/(PpnL-6_3i\J)=FR<E_+LX#s-lRk*k>)/.KN%lBF*I9^Fp!(Fs%Pl'@bfF/fE<HkLXti5CaG!@KU-h($]co,.
%L8^54k("0UjH7=^^K%WAXgp?^N59<^Q^_;Wi-[7HCC7"o&pL='dmp._SB#f]:t"0@Uqd7CUOg(P02Os$a^mNS+h9jp;a?hu:L&j2
%3Fj[V["G#5+%ME1()9\nTY#=YrkGF'R^YJbL>9rc$14&;1E<JfG)98MOk/O*=Hk8uD^.q`HW:?7PY<&gWQ;ccO\!O$ch`I)Wq.(j
%X(jtX&\^dDdBYE&6Yma.kTO^7-&Oes3oY3;m1=.p]%q7T.@)*"\\defahk8A+am5X,>Ao`QcIRjmRdqA1mTY1HEF1l]CiR_,e_S;
%Ggi^NS560q/N2ZrhF48NgLo8c[&2:PkH!oBK`SkX#C3=RU4`fV9=0cs\-6W;pst?Kf_$!bUa_(ae\Hi79j(#%%'0b5]WGU4;#toi
%e6CpmG/J8h.#=&@WnDpYWbPYG/[28Ce_j0I75kiW&RAAaV<tTQ(9Qja](rY#csVM[;#tHBKar.">+pU#W?k_1(>Wi!b4%1i/oY.X
%#N[J%O$tXN2ioYUPppP-hBBm<)/XZ1+*oZ4;M=3SdCD6ZhY%fn!P&Q@pFaPoP@.>n$?4qXpTeJFo-,D)35qO?g2?-m)P<qe0O*N#
%`SG2+YVp)d#aj`3I)AJ2nKCGRr&rt4R/]p:MN!NCcH\!JnXA)KZ-aB4,BV[c)J0pt3a"Q>g2pbS/l%e8mA26N2r^Z*)g:5;BbT%8
%ona?oKVbY0hIUc!mbc>c-&D`G(5,sHKaLI6c43lgA?7K+BOU]B&`0aKT7[GW#FYXUkk;K:rA8@KFegn)'0m+WVs9\n2&13pjka;G
%oV@RTD-utp84D_34XPZKW%c*?kb&!u$7/.Bj:X%T5HRcBWBd+0E'0rN;P;bqop-B(BMUZ[(WaHEJkBGf,1KXNQ.\l>&&F"!XdBW\
%`;4*M7\I-U&.AV;o(_dC$P1qB;VL)+1@C\]kL`h">piRG<BAPbmFQC]-^1m/`3NaqIBJXs@CC'@b641Cori$C#%8g>q6i#L^`g"7
%'J\PJ(DG+^!\LUa7Uboh)0=+;0g?d-e$Xf]9pf$NX\>-6kESUX2rD#W)u&3sM:2Q9Aa8>1>FE,OoGtikYTB!gNS-WulK50K],TsO
%/L'gqi_tA_,geN]&;3@S1-n9PD0$PTfKgB6niO=\#"2\.Deg:7HnnQGX!m.88,)AD]nUKQX]tb1f(E(kEI?61@7GqkI#SUa\k%[d
%<%cW$D(\]GUp05V6iS3c3?Aq@m2B>A)2LUB0.*KgK+6KcNX#3>[]0O")VhG(,l2\'Xm%\TENL6oTcq%ud6HC^^/]:miR>uFP@95Q
%,K.)QY*!0u*#FGd/rsf/G[c)OQ!uJ16k:qr4nY$.Gm4'YA3gW<QA%8.PR\X7&^2TaRpK)@q4CBJUq-2#<LR+:db_aD6m27>om.O^
%CMj6`?F?eZcZc.2`j53A"8M:P513;gj!@<t&c6-CMTU'uRedG3R@[1k>[8]>,93cm_k"<arDl!VQCf'8M]pgO!U7Mg@&(_B;^9q6
%S*6)jlk9Hu]sc60+!CbeYA$AD#!:K6[8kcSIN7;s0%;=1jb7)rT_`-*5Z2km=sBuZ%kNk9p"/N+87.ID6OLBI^`RbCD+TP9XOUag
%<g#QP4*59oMZA&aLJm^4&_.b8*UDC?/r=d+ZW#mYY6]\8;ETacN9K4OSa)iTNc-cqLGqGf-UcV'=3)Lso*QX/&%"Y13LX$*EDdpE
%iFpM_%iM_p"'BL;a\#g0ESWs?GA-XF_8(QN6T/o5T)O^:es8/DZQ\?P]7Ke/)Ds:5WX:N\V)TG%<DtXE0(j.kDK#1f8,&AtoL+<P
%I";XiFhL*H'O@D#F)G?X`=jbsYG>$oh_8N!lp\?7aU6(m)YUHf,<N?]5ARm(=1'3@:cVpG=ITi=AqAE99fq<:OWE?CT5B#6W]H+.
%Btghgl5'a]16-.G(`C@_@Z6i;)EFBm+4c(hV450,GQW)bZTVe-V=0/p6/Au/KM%'<f&E"t:2I18eWIQ3US'73?<,_g]0j0sRbk=K
%g",t"eS0t`NU_Z7489^G>2Y2?C5C6B6k;.<?(o>LX5m4-na=gjZYh6m24l;R=d<`BFZ.*i+upK89`3%AeB*Gsc5(()=ldLg9Ar^L
%XHFg.-"MnpTWPTuC80%'U<iaS_+PSq0M2]?"pp8KTGYPU7_embQ.nXT`Ln.a.Q34"TqA'T%h7#hV"6fPK`*P+6H)LXbdNP(<IBN\
%!Q[Fb?n).4>0k;rCbuEX-eU*A)H@.m8q]71`#FWthS=tg8IC=*,Us062._VnQ_6(oZ3BL62+1fkqQY:IMc$/Li;kjEep7ec*3tr.
%!-MEG&h>t=SZs/qRCGaTE&;rr9F7#0R-5gCJ5%!j)J6gJcl1G\f,9O*=;eB=<0GO'Q!h3`ngm;o272Y)(cR/44,oFcSacsXM`9!H
%B*/TUF?,ScX%3topmM-']S[7kS!3c1lfR!Zh5jhYcI5rX%rjpk)6n4O>X#'bGCZ4G[Ycc3F:;<q`n/GT"$\AXD1s2_iq\[\p^M&G
%1T*:2(/gtB!aR=\B9oBdk]Up/1#9fA?^($J-DU=#UIW,Y>8@aDLi_'7$o::dW8QLYF$ZmkaD3pd:>TJ?_BTR@@tsKOl]A@:s0VN<
%4dOpFRb2rhr?(T!^nBZ?]m/^lT6fd]0l<_aBA,Q03A:k-P>\"t4%nu*M[n%IGC1"8"S^p$b/GiqUsbRUXirF7D\9fn0M"[kl-GLG
%s!5FUNfs-3,j6AF'1&3^r+p*f-d[j@7d=X@8sWA5]Rs<!4b)Xg,,clbRAlf@])s7:-a83h[i@CM+?lQ[,173;8Z\<lZ/&k!CdA].
%Tkt,28_&0#3RJ^IE[V`D%`"bBm=goJ5q)SlPdr:F5Y^=_eMq%sWJ'[r`"3+bQX3SCcplDNk,amPKKG3M/Hc-!I5_X?M.O\),oOgh
%3SQ<@Hbq7_ijVB%e6UK)-L6_9Z7[C(,6X7`Zf;mRPoA)N=Rg(m(iV+"Gs&,4V9LXW=!EXAq4`NfH8irg3Be7D,oS2[3X\p$j!0Jm
%rqb)[_.e\d+-7kH77=LB]Fl,KcIk\B6-1*-p<:+?\Q=lOb[%A>R+st;OPbg+oJHl1,F*m4[%+<<E_J@Lkfn2*)-i4jBHUaj8NXj2
%H4b`;p[,um6,$?PEo:Yoi!#5l?kDVn)$AO\Oot+2'a/4c@i[m)o"=Ja2sM]^+KK$DaBKll5S8TT(l3Ou3D4c4And*qT&='7Ln3cf
%4cWL2fiD&*IduNY\qD]`pPU\;'IIpe`mj;lPqeY;3hu1tdK6W"qJ_?m5@O(GC`FO]<g%:oLQiA'QQNq1?;5^6P\VO8d$<]2.sb_X
%ci&O88!;dIF44t\.hn.um>Bt6X=1-&QqBJPcFT%RN1KW21=TiD.MM"lAQ$GZ-dRHcK*Uqc3(5@4(L[bk3HK!^,.JX$X%3(9jt%;/
%=<nc&6eS7CS?FA-O\Q,P3#0oqQjKCF)Yim58^(flB6\Rc(r0t[dt'Y'742rmCEfggOD'ffc';6X%]<#TaN1MUOs(F"oQG=#Z[%5g
%*U,qs3,&.Y2I8)ELs6#dH/gbC,,CSg%5J2K-A`]2J8U^O?j<SVb#Ak\h,\,^A-35^qHTra0'i-6DS6e`msHUQ96UWQ_BQoNG8M.M
%O@-,5"J_3u>;dr9"i?Sf;9qpXdC%8ob-'9ajiWB=r1K,rQD5'(Z\0;GO[3^t>/,.28sn]g+nZ*cPJG7@i#Sl5>XWbUD7(UhhG34Q
%PbA4U=N]h?;k\8FCkW!F1KKg6<S#TWS2$?:ZG^'!3Fab\9.Zs'MbH=15"s"4LeF$Kntm]-.S+>O'b^;*8<>EeVh0sJ,\,FN7-(*q
%4p=sVT2,$LhgbD!=3ocQI5]$]p=^&g-gS81$)]J<m=:N[2rc@rTcN"ES^l@&2BgqOHW=m;;k:.NPh_R.F/S7%qDRJ5*F@@?\Zai;
%\:6E1*7WCpeQ-%)3Rq1L<m"!8EW[@4q.-13mV;!hQL8MPkG+?mG0K>g-bm;+KB6c+p.$fU6*_e;]ZCV0B$:B4V?J2%Q=S;LT.6uM
%%L>bL-[&?&ba0Q:B+6n,?jm7[.R(2bf"le%_F)98QX-j2H"%`=7Q,08prjteHu;e9AG"Vc<7Q2gp&Z;E#+"[@?XZ&FW]`bQ^5VqS
%YkQqWqQsksn,E2ks8;fh^\r,F`6L9f6AZk(cFHJTLA#Q_r[PV\6U_VT(D+aK#E'jNQCK$28IX"aC%lsH[@ciZ3T$,_0-[$4(bolS
%:=M)QQkKYJk_b7pJhn^TiKJ#Fc.\qek0Y`ZC,5<+b5)Hn]t42rp@V]5ht?MF+90RXnbfA&`.](0L+2]Li-4PO[rV1JYXa[MM9RC@
%&,3q>Ya>>49hY*$Eu!>Pfl8D-a7L)`KFcebh,eRi'mqJeEi,o4jQ`D?1oaN=Y2TYelhCJWlE6B>9'NLC5$OlUT!0G4a2n?X)E@7E
%Y#j:>Q/gr`poM6qX(Q9X+d(M+4'gXib2sU!1`muMGl\MF3UhH'>_>IA,O?guC+nc=7d`/2?/dX2S^&6Q/=m`<=Y?[V>R'[.fZ(pO
%0>[tjMCRAN>l6&WY+O`\%c7Dl+M*kPOC9Q\$%s-=U/@Zr@E6Yq/f$E"8K/2m1Ln_]9CK7BG,Qq[<W1qe#rT3('Ek(o_3TH<Os:q?
%Mi\6A87j-,2f^f#pg!kiq0$Z:#E44*[duq_aDmBQ/pGE/DG#0MBk(cVrCDR_!a8"!#e3&AfBqd?84e<lqs8@^<''fEmO00'4]B3_
%Q-<cli)M6%ile<k0YAY[e<cT)&A0DC<,s09N%R[1'C-bsN%R[2Q(5r*_5iaj_H"\g%o\GA4*"srq3n7YA%8_Q#JP5N2nA'FigK&;
%G*fodEiQG4S,NgAFb5jX3`6ka\VA5>/,R\/6K1n]*UF597*\Cs^FIn5?E6,GE&JSHAC0O36ElYoM%ip0Po/k3>U%3S_ELT)EkKlZ
%49%pY.YR:H1q@S).ggeu9ALh(i4N(*'<dGADGbtp:`=X;oiEG:"[N4@8/&=2&X!$PLu0,N!7(+<G:M6+>V!B,<"gSi+fKb`r&!bU
%lA6.Z,=*#gMBohWS0\LW=sD-+?`k"'>-*[?-i<Cg%uU`O5(Z$:%o*AO(C,.e998!e^QF@n(VPEIV%YFO.II!+/P93F$?:a<A4o'#
%nd);KlfCt(W4+WkOXJt_$9g852L\ZUas('?:qZq?$`L+8[AV=q-DP9t\+(N\nrl*`rlHLXg;J4qFY[sY2bSOeF,AN)r;#S)RlWk5
%&'d%TU90+n5H?#cUW78PBkK-S]M$tEMd>Z'!Bd,sFl/G/AU$Z0;Se4H*RQ[3pR]_"Y$1:oobXZ4[<\9+b-&om@a8lHG'/c;Ka8TI
%M_J1T)%Nk*Xkq)6jGBFm1!(+(!lB"ffEkHV;Fo\o2%8n(4Q,H]nbYT:F`4K.jX-hrX+J%R[Aq+MV]5I=)$]^Q+kSHW6jdqi/J1A<
%/$4onYk'oe[+DcnrVi'=aN5toLkc1=H:[Oco4qk$H?Lo'i9QpInmO4T13"J'5[^K35_Q`s`,;l`^I4S:%4?83ieJC_Za&o5g8PMQ
%Nj[2:k;0m!ZYGFan;nApCo#,X@6ns9O`3g$KSLdHB0nbX]S=b[T&a[PqKb>qUq`K4-TSs_?K2&$?0&k2/u]8ZGd\JD4Z6+$)@tB-
%h>1u$jbtXQF2W^T%K-:Wq2%.1n*IbJP"de(7,>@b$+C0)em*C9_*p3'.0hl[7*(]k_]Be5I@e+eT/I2WfXs=R4a')^],nR<Xo8&\
%_(DM86tK9am15!X?kYk_+<5qkq2u'I(kX8D2M3BW%=LXu6tH0]]G-DDni.7j1n\,uKc]Q.S431A2@k2d!Mi&PFTM9='@Ze"Ns$!l
%8HqLpd6*J"LCiE$EX3Lf%0A+OS/LQL3VGU#"!5g![52jI>F,Vra7^g,oq;U'!:SQqC%^qgL-mQn*,Bh`Yh&=`3fB1H4t(10j+o0'
%W>ao4YMlD>AG[p\V^.2$fg"p%3[@Qq\!"nkDl;B/VgS+eF*!U8/&>2!NVK/MVi#7nJ(:7eVn[H3FOs62h/phm[Dd!eXCtDJVAO>"
%]2UA_?#nn)oPm8>K'@u(6e*+;BWpB4=ab,RjcM_$a44K8[c2MuFk9rld'>^4/?tk.8o)AWJf<scL$O'QQIT8"h0%1P2k@FZ[NnXW
%8'@p,ULgjpM[Nb#ZCu0/]nX.1p"=%4g_0@jSm:0\f3Nb%OHu/0=b?mS<6g;D"Z=kP$eP(,/ZZL$]'H6*DHa9Gb-BrkAYm\%#;h4C
%?e\Ddcs"?CZMG!;QhUJ#D"FgCIMBu*X/s^#)X`MWe^ek+\+!_Mh6OWXVRp`Wl_`9;<d_LjYDsWD7j.'64+2meTuF=[a<LT&EJf[f
%fh`h:2ogFil[?EcmHiK<^-/BPQTGk9/sNs[LJCP/Y?FieWS'N*ii'HT8'3eNa]$eQb830:N45d2KAsptB2kB[YGn?[E1;_DWBT^h
%2&3HHRiY:_dIDY3YQ`-6*jJr^4\a_!_Ap"<LriV^)krjh]^`<#qOJBMh1n"?Di!JZhPj%@S(FAk'&f.4h%[tF2m0>N7^$aceu&No
%HF@?M2-@<N#@iUBTX3hRYFO\e\PPFR&MPQN8QJf'ONe!Ub?^'nj>L(2*'"R"6QZOi,[Bg2K!lT[W2efPp]Jr/)Qju-=*'N/8K'AP
%OuN#Q7.D0>(PU:QR%q?L5Ma&ir5G"P(T,F_+Nus2@)1<3LO*js6Top^5L,&cHq',.mmA2_\V9?q\FG%g`QW$NZaaUc:_;fbVCi't
%7Y%Ed%=H[`jt7g&\VT"`cV[]YT:k#a`U8+pHH3-rg!iM[&`&%*+%MRZ*6KEsY@%_2o'_p$q:L6o7^$5Xd\2t2pe]5-7(l@ZJ2/oQ
%N-HH<:sBGOfCFMIge<W_e^(k`n[3i2JkIDBY4]<;N?83W)c(K_55_lS@^[TrABZ6YCkg#!`Pr)r.'eahoQ`]9/fA3(_\IPsN!tic
%bG5I3N[23X.u9C=-bQ%n$<9gPl6a34Vt$@$)K_NmHb`F$*#Ihj]7*jLm.K*g/.Nik]Q/\M3u_rBA<0f&pp4']a!G4/%W8cu!Q/>A
%QTap[!>Zk#kI@(+W6RmOn4q+;O!OdOW'uHBpJNhOGn+J./s2bKSIV@(nXs>a65bE2j9[ha/b6]SNCcYscVSVCcuGrG#(;QhGcEn0
%L#Ps]jkRGY7WdB#is8MMBE^VZmX*%q9d\%Ye7,/KSX8(rArTnKoplJ^TngE<k_PU.IQ^@D,;p!GG(F"]:`!TLQ#\YRE(T0)\ja>&
%T<hA4].BbaEgqbV#B]cgTq"Oo+\%Y=@S\EHDtl"0Y)npD),KmM5hXD<p50ZQ;lV^p+<UFfCgS=,aX[mX#6!rHVIOmh)7FCf@[E1)
%ADJD'HV^ljgdBX;L\/R:bPMbj'_5The7Kt*hUoKp0,\tWCo.[Z7'h(KWm-AGE?9"`6JSW%1s?u2p-FENaRFLhXYtj_"gKe<MC^0Q
%To"SbL>%_"h@]:V5A"TY&W:I9O?5u!@-U/ED]Q]'W)&CZc=S>Ia$\gU6`!k4g*r8<k`^$V?d-Js[_.gE:HK35;h*#&\!R\:AnEbc
%4YeMM#7+8j%*T/1isjBRKfZ"4j`Gs3TC)#$))gZ$JYJjAhA094^PfL8&u5j*)0nfW8"?c;I%.b<aPD+!0&Elg4+`NZR7eGN$e%#&
%N<GC?ahEQgd?*6%=qE:T$RRFHaA\-K62XJ5d5*56LC'(NP86MZJcqQ5Q:Da8;@X>#"&h464Y,#oJ(\551IWN$I=VO;Z[a94L%Rb6
%`3dGK#/b0;H_t,bdm&F.X:9`Tn->.>6sIi(a"65_NC*EY8_ARs,l%YOF-96_$+[E9d45o7$9d0fi=U&co,8Dq6B$b[Ug1Mub<_<f
%4HqRq80AuUlRdbP$j9`"^R6#dH:GnHUaW!o<59bFWFJ\(Pn9<20Tr^75VQFK,#ZgRZ9+!Y?dqVs!QODUT0rb?T)^0JA!aC3":iAg
%au5Tl4$jt:>XA#%dcCoG[UZ.J\Bjq[9JY3$1^$_uECdCoj_/:h8)@"][36QpkG!4F=f3^5;)!\mL>,8O9\@2j<`DV[&Z+QK/HD+_
%7?;R`l9faEB0i<O4UgLVV\OoZ<"KFYKTVdp5dZ78[DKj?%@@q#Or;Va9i6<snh?0e4n*"%Z6Isg0\j_MaIl$o=tpF:TXN)HlH*SJ
%9QRS1O0fS'L+.qKTQY#*_b-"R#hBW;j'9F`1B0>MCBZ9o*d4t.83LCDdL],N7"^!iFd+Jo/9=@U,^-H:hU4lFDh&Yses?_,%Ge2N
%ZReW$/j`l@llGgW1np\lRjZm3(UWo6Gsoge<?m2-7iL7EQG)FZK(M@cDl"eKT3"##g91k\rIY:*To#?"lgB?%oHW^mi4oRffK%@1
%6BRm?KUiW7=.LdVH(KL^fmoES2KnXI[6<M^(&'B^V7M5].rXqi*nC"@T2X\Bn7QqSIFlhi%=LE5K+>f**rd3t"j8XU?)6;s*lRG3
%Ha2Bg"[3;bT3?qXf:P#.-2%u^S#6kPBi?[S]7qX8)9Pic#B?<fk6KO,e*sIm9#7QG/+jC:5)hpDg8)\E[a?8_$Wkurg?n'=[#D2r
%dA_)XiD7TQ?VP_=l:XP2aUSbHqOLL]nIkRt>pT9_'L*Q[mWAh]Iep#R:N56E;]VHCCSAi4Xn_QHPc;Y,51/$bYA.p=T'5PR5,l)J
%!=Yk$#AA#iT'>]Zr1!uk)<@R+X6@0Q^8pIiKSn>^!`YnT&+H8[G<,-8+_M3d/om'Ac$M,O/[dK?r#Gt%4eLF>P]>EU+a5YF2Usdj
%BMlF'dX'XG$YZNuGskk8)5hsrkg3a#5:J\io=/R3,gNms&t_Sj,2_&aR^$m9rN9G6LO\jFHM3KomtnIgDr#o/Wct\-B0&sBet^e1
%HrY)Wl(dC*?6"+NLj/5Hib.rIr@u`+6/E@;>sY(S)h1t)hlDMB)lGC?HiJ9lRW/M7]FRl<_3N-50<.Db[s.2X)STdlj//)rhTGMc
%*;QhBU5s?L.m%6`EEmb5Eabk&U7p#)\)h5'T\@K+[3$@99iR*BUI_1qq6j8HWV"4Y(EUSV1\=^#U%Uc-qC$Rf;M[o<TG_app,4bU
%8#&o2mg41Zj^l5fFK=d$O9<V1^Bh>NAJP&$T[G>pd8Ik%<Aj^=3i`/TTuD8e#gSptq820003`DdSjK+\L#Ga`QOk,Y^uBZF9^6eB
%K6TcE08AMcWt-63J#KImV,]/$^^\n*m=VDHEXM31)QaPeD8#6Wp+`r>%YL<XVk;FK`6V<bV,uo5ZHJIuiH<iomd$e:qtb)h&Z)P%
%*;Sc"Us>/`)iXpQ2PI=fUn"W^/it("V1j2rX2Eu2brk35$WMdl9?%Ja`X>MXZ+:G0Fu<GafW/f*3/mV!<:FL1&^a`-N0IWpNC_AF
%EMW4VGn.-HVf.&K>U/7*XPChOnSJ]?!&kII@'G%54S$ouLPWnmRs[)!Ym0UW@Xe2n_e%a_eCL>AC+3@`/;/.s0@aLE`C1ZpDM=\C
%d=_(pIoj\;/%ZkfoKCT\+9R"S,Ug9"'Ig^f(6i,NbWu;1ndcu^aaC'LiSnp@R0I9OfA?&*-*eH4X`huf_YH^_SS!SIjA"!MopqH!
%p:@[BPu^Q*MW0>?Qa3HrGk$#7TNa!E\YEB@f04"\BU)j6FY5H`Jdh-OP+_;";5E\*=esefKR#jqpmI=JQtfrAZqLRNr.HG%IBijq
%35QV9+2$.Vpu6VsE+`gof@;=K$b&Ig,Z*%ARA/D8F%USZJ(TM'X#l8aC2Qbf1?)pQK@9(]_7I$L*43CSSepLdk',6p9VZ/khuSc!
%A?g"2oGg\RM?-EuRGgLY=:8Q9Y!ZLA2-M>[Y-,teh/8im\qBCf5)`Ou@D$[WR?;(!cOr^1B!%4#V:UQVdd,t>6%6a]`tOiQnV`jC
%j4S*K\r_fOU'^:qq"]kb]CA'?-B6qH+)P-;9$%/&G]%#&gK[&"Cp:b!b8Y/][k:lqFdtHU<.j&M,8MA<;!;D7g9SgHiI]e-=kcQ.
%1rCn4hM8C(gXBbMNHUMBk4,lST!-gXe-4mmmHh<gV`0[S':*r)H#eQ5qQ_n=/IkjW@uVg4;&Z9f4(!MueeE:P2Gam"Rr'>2g]bF7
%?R^?[Y_GsF=Dkeo\Qj$i0Ci7<YAnl3CVPgKRG5X0G/`n^5KWH5r!q=?Tedi'fWbuSEJ=4:.iWJfk%*R7;YHeD"V$mQ%/K*D<*gbd
%fo.#]$W"Gs%<9#?7G#2o$'2(rEkCp7:2@=*o`_.5Y^`U,;5u^:GO>L#Ol[KG7i8d2[S!"Ig=U-!8DC3+3Ja3i-4)U%2BV!MULdD,
%rUMrAm]Y(0!up'W+!RDY+,Qee/jC7+,APd%EOU)rq.Ul9+6m:!l42jFbKl+ufD%ACLa-Pt1rY<Y8/uVDXchj9q4TZV1C*a'BGhO[
%FP10Sa,[Y*HaoB6KEtX(O^K6,O[pDUntXSfU/kPAGADDaT@Q=,@37t<mP*M.r636&NLqGSpodaj;nV"G`0$XpP38//]Jg"u(q^&e
%X?!^X,kE:nSMMVIC[b2R+jsJFS5ES#'LTS@\d%k_VP%\fQs"^c8#/tQ'\9MR'%(sTdfFV!T([?YPK+mQ68pr];jU;^#Pf-^kY4>7
%%-&&u32#ct)$rb*`pYRU#Ur\f:p&!ihV*P%o<&]imHfA(NY+JBn:7RbNU>T>Fh;]uO/L!9!^]Fo<m'"O2!D1r0t[pspF-l_hQ;H/
%oXHChMHl=D*^j+RZ0<X$*pNIo%gYK^SiseB4%\(*@Orf$599o(73W^On4bS_4:jE^[#)$nNqC>RKce9FRkCtAEPIn)Fp3;TAr+U\
%kmrUp@@+kf>1O72m%5sWA!;m<[s[Q$pG9XS%R_03R\AZ_<t5Fo]l#g>n+"O$*CS1QO]r@9ou8B=]IPB"[(GBF$r\GH?)&MKW@)c+
%?2BYYWLO+0b[Iml6;U)SJ\++o#0OR:_glDb/Ip4k#70<AbE>=XW.?p%Og[d>\>^K2No[12aFCiN+2Soh3$Jpk*]`$9)p9scN'cD]
%LTkS@%al-F->O0%k%+!jBlrOB?k97ufQ2FfdbCl8ar4N3OFV'<6W+c5pJG"i+Ot@">6fLtD&C=`c7GYL=U>$-_I0sWP6QG=-Os1B
%Fn-NH!a@NZW?3&aJ?oPSVbC(6;oaB*EQtX5WZ!1G5fCrdcojk&KK))]VH+ZsR&7;c;aQD*6?jOSP@TL4*$@U)kMa1uLGn7i:dEkt
%HNhADeI(qLb0lTa_uOiE0YO/:/0a`)')!opN%n/FTg1WE&p5#V39h0,#$VeXk_q$PI,hX8SXORO/m'*Y^ZC/+#3S(fW>Mr\!4$%n
%=:3@P)Ug*T=PXEPLb-S4"+:h.nX9nB)r;FkIc)&4Od++.M]-_o`l9M:U6FOIMUq3$@Mi\ClJPjX8^.Rp-d9-\i`jgQ]A#u?V&1K-
%(F&/7XP8W(1g.JH$mj6rdU9&qoeTiTS$#qfBG-1,(bcVdr`Ap\RdLF+bh/7.p`/QGb2KC,U<onmd/4=*Q&rC!Fr8SW$/bIl@&I_t
%jdL`Fip]j-'!DVK+%DV*M5#d`d0QI:gi>=h!*UWTL!3RK3X:O8W3Cm1R#/%)/>#?W`2UVaJ>Ecn/j],C!)=;'ZLLW=5<_'h7'^%Y
%.Uq5=3CL6;#i)QD@i(Up`0W"(E*0f$rTdh0;3r@p#]9L^0c#]425>g^rjm*d:3u"m%sF,>lLtf:6VC`)o7t`-.r'"PEK;:Td;V3<
%K]1^[=:AZBKb=]TQ57fO1+sg4(-lg`.DKHemUf86Aa]>ZU8fkEG8s+)Ko&E%7qm[96,u$AVK[m8jqGDga.^.G;rn,Lb>&Hl&cmci
%$QD^Jj!"DUK"eL@[)?"JVp`<'BF*Q$GDY+Rd=?b01n\.qK%;)qL2+1aCa]lE[fLopHH%pMSUshQ*Glh`e[8g*a86oF8Wa12dQ1f5
%HCZnVdlMJFHC[1ML6D!k`,?LH*]K%&EG-]Ogr;;\36t2"1$#m1$tc?r=d8`4M\$[mpYtW:mUW_Ya[+?>SWs5B4'slNDf8#kf(*TH
%#P3$q5%reSNK?>Om23V5no^_?`QPAs:rE=Y$sUYR'j!:u=W>E?JdCa*#I:Gp)\Zp_Y7L1_[\aal5)!8hCdTuoG8M=53Y$V]'%u!@
%&=7O8k4\>_0)2Q[0(ZY[4VLEm>BP?2L[c-!dW10B/5=S_UhhV'=Q("k`qi>V$%N#[rR[PbMH>EM,4Ie[3ZK#(fEnOs$M5V/3CL.)
%g4s4?mp_=-g,bste>W#?=4V\H(ueCarr!'.ce0;8#YCR4L@-!N[KhtR2"5Jf*R28L&,tN,?n;5_J*Qpr:hZK^,o^sX.mkodJ>qJK
%5/!lE\u4*TA1r=CapMq]6sYdkf1eUY2dfY-:]5_/>q=a=dTnC%\054fIRdBeOUU-;]/HPoH=]l\[h,\nV]"&Yhp&.4ijpYC]AiZh
%k#Br5UZ'][cA4FH1t49NFWG[QlE6H@C?_me?>3429:"`T8F!]rM0Gul:dmm$aqu,iZGo`V9Yk'7DGbiC:eQ1cn#j4hRd2c]>fr_.
%WiNsT;@7'T]65*m\H2#"mO$Ii0AZ<L>q`n.U7,>?097a+]?^NR1-%ldEY2J8H1i+Y5(c0D#;hN?g*K+tWaUpf)ZD"k(S"a2NjsaT
%gM;?9QD:+6!u_ftON!X=CRClsLA,=1T+_5"N!'6cL-*n+$Qn[0PPfDi%!g-<,fbG9Tb$hO_M<G4V(5UPd4$41gP26Pf]D-?JG1%Y
%BM6?a!$fYlcm@_TgupmB7,qYq&$PKt#7m,7d($m4:UDYGr9I\nUa*jtJVjWX*qpZW84d04!9lfro0C34`E"$q,K,/oGX"O&jKliu
%of68.k7"I5\F0.T&D-cV[:\/ek"`Q(2>,GZ'u13Tr:pJ572FhNM#t/XB^6_LFh4cDkf,9iS8$"s^0K-J<:6\.WSO>0<1q[&)EjcA
%n!fZU,.oGC]-;WF"RBfb/jJ=>Gjp<cfL;ROb&eGlE1aNg\HY&VTpAeAXlKoV7IR,2a#sGr(F8tX1#4^Cke5fp5^IY+gtah0hqU:C
%.5LXXC.a%L.B2lZ<*+%J^[Bh>Y)Vl'kTu_A.%>#.gR$?"Mg4PS3c!JdB%%,`Zr2Zm-Q-V?M="fj@^pZDLL/A7W%U^Ck$fmVeSA";
%>EWks\98R)@&<(nL._+A)!kaJqhKXXrHfVlXjS]-k8uW7P=GVVcXg$jnGMVg5sK\Pcr[]!hpbEG]pWIXOZ_nu!`u`R'q=DWC3QBq
%(#!f+##ApS]6/C#K6K1t=+d]`1IG2dVY=M/T:R3;@eb_CCdPLgNH5bpD97o!8mE;2#2uNd(S;)RP:[2,^5B$Pq,H%Z!Vj4mWu^S1
%r2nJApO2^_?i@lfq37K!*ke^n(B&VJ%<kb;Y)r&Yl)p+SEqF3YLue5nKQ0Kr>)pBfYbVEQ=S@c`Y/ks]pk@X[g.;:Girb/?4L'Yq
%Eibf);5+gPbt4m(!Sj!*.N#REkdml7KR4+^oX66";RJmZUXnO1c1SSYU!.,$+48[NTA9JT"Q4;.,bT0N7(<_I(&ATHj<,Wk3Ae`c
%8@F1cXeR.l4rB--E*U\7ooYqRJV<YGeL7)6X^e4-XdV;fes7LJlVRJWFh(Oo4g(2(bQ^;+Y9,rn>9X'6>9Es3>9^pWZG83jo-atR
%P;,HNe^hZpn2]0!(;_AZ1/]3JMfDm`630dr)HQ`BX(`f[D/!.O*GQ\(0%Xj@a#0-9al#\]ou!\J9*F0n$RDBc91699$Wf:0[grs`
%eh8o79.gfI0bDX-<A>Kflr_2(`t4K[,@2LU#9ZQC"+7c">s+MqPG@a4j7Vs*O*H*N#IsN288o-a)=<gM#O2o46pKCi*%?-F?93Z[
%j*Kr#F@UKsaXH,qc6[imGcX1blA2+J#3f;Smh1VRDRupb7h,<:E?X!cO>Jhh>oEjA[ZZsXf`2<214g%6Nc<KdJ$DlANs^]s2X4N/
%TUQ,?,Af0gAgu8STQGeNC)DPd>Am><_iPNbP;Rnr?lX8-3HV4\!s2hNSCS$D9urC9`_",j=f4>lJ8\QLZjs6?h143Ce^Q9:YAd/d
%>0M/Up_ft*hQS$$-4u7pT9[+q7+%mG[sf+N/SfqnSq;M#i,r!&GD),9Wp0ee^,J_?\mpI?4qJsE/.6A9aZ+1/.ZP9tg"^gZ5Sb85
%?0G8@-AAjRKlfd+L%TGO/8-BYJ1![c@5Za>4t"u^F=,^lQ\>6o05':Hcr1!@MJaWt]P9)*3L-(i3SU/26!*8(N\t6XKmaMVU<8Y7
%;n7b+C\3k<K@^dALJTQ0r_074O)'BWZUh7b=),hQTiD[JAJ(QgQdfCJn/3A(8J(:s)U@Z!"V^\IBN`f?6+grm^Y?STQd\DRCDbG,
%cdR76aLbigo[%q^OXJtm$DKFOCL]%aQ*n[A]GX_!8#-s"XC8NKcN@9>eZ/'_^F%<'l:0)A^NohDDr6$Dl3#,V%b.fo</2W6!8Mb`
%g%t(LmC<+nmo=$JB;>o\N?@ge+7(I;\!>P"Goge&*Als6=t&t53nAcO+]6g&>'^B;$bWF;;=pff#P=Opem28O)Yk?(1c@s$FS5^,
%e(UG`=R3,UmqV[$Q@J=;=h>lAE^-/:3H*,jaVt^f!h&sUJnB0;*[g7omh9.u=:V,dMc@3%Y_kQ"K-kY[\Gho2`8(i%<M[(u,b+E-
%-<qM.B=4`NBkLmtM\UN#9tGGJJ(@*=Wk'83bb71rKSE:N6?`#pe<%Au&j9do[R?6F6ETklr-bsnjAbZpN7*Cg6\4sW]urr(ZC.ZC
%a+=`JeN^*Fl;]^;ZoCTXb#AHpc+U-11k8oA=HPn\qId5-]rLBQ^+<QI&d*NA(0\:E;F=+/8U>(73_>HLn%iU#<+3cE&s027&1QZr
%KP*UDdum*'D&$)^&?5Y3UJ7eh:"n%T+Arf>J\>&/N9RX9XBVdI+B&0E2PO7&ob_$O.7FOPT;7/VWKYiY,'B%i>,4nkjIia:7m)AZ
%em)+g0f+h[n48'CeQY#k!'9C@65Dq8$,LuF.r`?QKg[3U(=.()ETC)hPT@sXBao8-B!Ae)O<aC2&1Z[U])kFpOOQpQAbcrH+b<Z4
%At5Qg,%i*:66'`JO1)`H3;HCt,L<$ec'nCn9I:\qg#Q8Ka_;%LL.[cX$C6\#j+-)\*u?bgZ_1`3n4Fa8s)oah1CaFljH1->E(Rt1
%pa!1TM,Ph6a=Fs!4ish7G9-H9TP$6-R%O2!QoGPpp-E"qii([Pc,0`*Tk&-fHXom[S6OCiC''[[2^IMG%#hQX=Xp-g=DTV\0KMgX
%Jt&a&'hk</.4on[NI<2I68jqjbasW$RHls.E-e`F*=,!_X:GK2B7h)lF2OF>oQXWFq3mrK&ktc]=?M0@>EEtk,0M-Lf>NZDTWkCe
%MOImHaKp\4;F*[`L^A?f#@;V=H^XZ9`mSfh+/i>43pgJ%>+/ojPBFcO(<nP%#8`tgD@8._=Y2IledX#C*ZRGg8]!c"=r7>XL@rGT
%_AjL+B#0[q'X4mcDVRm_)1!:T;$29sN;(?TM\'MK-02C+RY"DGr%<bK#0F#lcL`(F^5B:lQG/<U/'IP*>t@X3H*n)*'N-ZK_S5Hp
%F?u:Q6(r$-5aTO]\k.!]/D$*)m91h8k,a\m2,,9/BqJL0WIp\(CDVXNUaP<@nQdLU_^-(DNCXsW'D2tslP0P<!;Smn*PT^iD&hj+
%&FOXW@RtSti*MZpV*_TO/=[hMcshEsIdkXj6]`CDP%lc6:'_U/?FX$41d\h%.+#DdBrN8O'G%T-'u\'.U'59>Hf2G*ejIYaBTSrg
%d$&PuqgJArcrB[T)Ija4Ed9;o4!V3tO+S,RVmAiig)nFR'`-DI^*lik@:`i^8TFrDH,U(BFXH,t=bjLC6q_#IC<0`-P1c&!gTeP0
%#YF9OG[;)AX)ciM,0RDN77V2!1P&)^0dRY\>KFlV1`?g_mnmha1NdYTj/I_oS%GUY;SHS#)C#"H0a_%uC2$g@bAD&-KP(2r&Y]>u
%KRA-*qs^#c6r93n]><d+9%0B41,m0'50a[AOFQk_1A;3FK-:N@B[T:OArmZapnCn2P+EWH!IH&u,`BcK5VuQt^+5"p)3G'X%Nbm#
%;_Q<TRo"k.8VfbHd;q#a#i5<Z#T/j>664U=kS/Sl1r6\->%N\FSts\#Ung4C!aNd&>i?^?7+BRYgp/,7*K=/[iC9R,*1;5DkdXGT
%P&SA\jG2X:^dQmcB"m\`lKEkr+UCh8U2:U%"Lj(c`gBW[M*f>]X,-iuRI'R$n4C,QP^*IA!44+\jt\N`L!J:D(SNMns+!=G/C7.S
%khV&,A@Hb6&t<r6+JK;=PhTkB&Vq"=c\Ti"'P%UgBuj`sd-ei.9`R$(=HkPFd',@:]rkPl6P4l">;]J!HBR\/;uH,n)Zcr@D^Ro#
%)J7%0"Ne#Va[Kd:(rXnT6&/];<#P'fa>AbV6V+sY)3(00QsFme+7>V/\F-bIUbmsl%>5ba0W8;ZPJ5nP(=V-Pra?g6YO-Y3:J*6[
%`lesD9o"aTic>/E+Klsme5Y)u5_oJ]T)oJ:%_I*ZZcRn\<7`9^MN/l?[eJ`H<JLT$1UL@00&&G>5A\7$eK)ZaL#Y=9aa`o+3F;Rf
%2P$^'MVr8N$Hb!U.4DiHWM&n-<fo!d=tA$t<I70GZtQ_;nB>JVp8hFL.(sN-i)SgKjW_W*g+H:hWqCtlMtW'jEn,c0c6");a2.f#
%5PFn2[:KJI[:W6]h4?psFc/_8^1u+>-f)@6,<]DACJ]?5Z7-btZu'Dad)Es<PruHo7f8dA,D*43k6S1k/KO*JWi\(F7<R.L=Zlk7
%f'Yi_<Qg0?Y1l-RGh)Z$P+/E[1u`/M+I$3AK;A.>-%s_4[a6-Z6UDDh:Xsa@5HMkT*rU=R(Zr?!/kh]=L?BF+Kj05eg`oc*\4`hN
%i^u3]@`OA96;QUXc@K&dp7_&B_6KD8j%`AoS&GgRF#os0p[7"82.R/L9RUI*@Yo;`\3_*<os$eYiWe6j<,"^Xn'ssOcqXqIT"OKd
%/LW3Oil`'l0*n%b3K"D3aXKFgX>p?,SL<EP?ffGo]^-ULr5]c6lb%eG>3:iADiHu:,H6,"Tfc^BFVeJANP&[W,A"`MoXb\]lbe<.
%]>L)W&>$PM0&6sGS$d*eb-mX[.N4"E+Y#reSUsJG:U80FW%72>WXdT(&PBN:+J(-tKC-Q?N*>%W]^91Fk]5hcIf8S>7HL)4&o5G3
%P"Sj!<J&>UZq<+GI%=pU6/8X3/j0%taLJMQiSVbV%;^/nEAH:Min.ltBp9d$T--t3&>"A0k\Vclq^6muRigI>%=AM]&@+:6?dh;'
%'dJ'g:Be#$jDgBK9]cKOaS`-<6!TYCo"7ce+-Q;^F+Fl2NA`s>/B9<'\$<G\8VQPt=lXM]Q$LicQ**(TOZ0[YeA[HP_jL/T3u^ZV
%1U9:A&ME@co3Ue>*/>H:quA8RNG+*WKd'1;D-;%\M,!N!c#8h0,Q64BLcoX#Oqkn(@Dkf"0@EI@0EZt<A6W>m"l5l]*Bs,Z+!8m>
%J*pnF@E%YhF>dLgJBG]4j-YG&7Hfil_ac-[ZO\<YOJ0[PO&hq[SH9;PWWj=\A9E3tBdV4B?BaVOH:=ihrg]6h'OI,BD!>#4)eE*I
%><F$dnr:NP&h_qV<>h/%oX0p!%M%EkUnd.JX<1DjO$o"N-tHQ9no,_bX(Y>&+K6N26.dPfTsqETmpgq.ma>)K#5:OkaPi9Ne'Jor
%I.Ch^RHrSmi<I5`kV?N@W"</FAA6c7+$Lrb3FBo5QN`6c4#A_j#Lq#-@Y*0+->>dR87"7bH\F5X3PbnBM:sf'D8Q+lDLqLa_Ms[#
%okt*tCj%cWHl8,>jgd@EBsXXS3T95K:?oXF&]>\r?\6_?CC"-t%C`duG>h@sM_ctHB`q1.KeRQnnq'?QE:tP)W6M6]N28gERQhPu
%\..mq$)/<[:NK%U_'".G`CH]5_W;MGKL06&`Pak9%T-m(:$VhVr]I.%#$DpVG,ioeU0[:(iN?bD`-^^q=TO<&[k?ZL0s1dB8hQ#^
%$EjgumC(S7*JN+!*MmE.4pohr08mIW?5*0>Rf._@Di<,:'VVDPkaZ)1^q*>0SDaH'_-B'7B\S]/qq4&DK[;QaJ,/c@LaV*Q>g\%'
%J(SdiH*1#h:mXkd%=eNa^AJ@A$%_f%cZ6oL3QiV+Bko[T4aaHiZ<nS1KtZXTq<b=-)/to^2i1U$##VZc-ZU!RC_lZqL$.\8\QM^:
%0@'DDk?5j^MQcg-hr^=EHRr4VZ-Une4ATjTmeS*TEYuhgT8Sin=;!4O^TAo?'["Zs1A/o0p\9j:IO?<DgMSdDJ%N\*.CCKqjfF*/
%m9\=3I/9:,hWE8r[U/L!guH,_AU"c[GB,j-R)60Ea66AI!B)/dnam@%6,()f25[*.]*nK:;:_r51WY*s6Ztr%gu:jdWLLIB0U\6`
%B=[&3]NgZWYa&p9OJDIhpOabm(S@ok0m_3-=p*L:F][mc@ioU2bb;(X^3AqF*).Hc/,6Bej\Y0fAJ):ZVl0K]8Pmcp^TLgH35jNF
%h#rm[MH=RsnL`H<In/=hKl-#*As7P='V..3HXsT71$ccbrY^F<`t<-t-FaM"/I:P*dU]g8I:,M7>cs`'2A::>Q;@4#rcoL2Q5NA+
%9ie8'a[j(5#WlHFQ6!*m;XL^s;n>bO>*c$Q?d$u`6Z:#AXS5fO.>JrHT(RB_SJdo+<J>Kam@YH>6+djQUc#]iD7:_<&`0Nu"ARP3
%]ZclJEJV('"auq1P.6P9Tp`,Jr!rc$hu6Wj`=XojA%a\N*r]7;l2Mpn?Q[Mcn@q-a?iTlonFa!LO+3tE'+m2`BGm[LKS7+h.'Id1
%:B_XB4O$*\]#&B`9M2%_@5""V4U#s87")F=o%[6AZbb4P.jWM.5Zp(q,\%GQ8gj<j**lUJW6lAjgEi",48\bSQ7]DIC#ah7H]r:n
%RJO/)n\^ZE;\7Q*5bCQR;!3*rZe=]6P?-_$\-%,E]Ms,F@"R!%N*P<t+q)+WAsAl!HGhmBVc907L"+R44%m2XaHm;LffQ3iY/!YM
%Rb9N2YA"J-m3/<gjop_ha[*_PN<EnMiAA5l^7BBmd_%;Ha0c]I]tT-c[)QQ%^@711d1_tn,^N3hN=Q[#+loKJ;Z[WH9O\X3.?Od@
%,kH;<SeLu)M6:jtG+)lHG$VK/m^t<:S^/\FH_c.96#adenQX.B[a*/AZu4/j9&:d(KhYXkc)1rA[Wdt#^r8`@c<@.O)Xt7B-Vi5;
%qE1Jfa8<dpeHGCM(X-u.$M61K]:]^9#<.alW,oKE=\k-i&InCs:=//9jT4Wn$5"UAI(DiHHUW0.bcL2SH-L(9m&4q!o-9!V,5W$[
%b0M<De-Qn<E-/&mD(QItbbIhq[<ARVM-*]Y%=D/oU[1ZqO8)l64cZ1NDrBsX)l70cI)O@qn9YSZ]99lYl+<*b#Q^=k+oK^m3"GJ1
%,T7K&I5)HWHnc)sc@Z#Sgj$OLb;61LB?UBfDbR\-.HJ<FJ4heji2O<q4E@jj.rPif^Ia@sm>^)r`p+ob2ZXudm7)#ofMT9BX1dg2
%I3)8QNB'gPmZ!VH=6!B=QurJJ*A\opr%ZA_`dVqtB&N!.`n#?'l4G-:0f*iWLRLlJo#G:"@DDNV<-7WM1pB%Mn;_THK>R[WETYss
%F$SD#'8SOk_0=ZgaC4QR+=hb3<t6*1b%$'5E6(#u?p/faScZQ6Zf.ZOon7($O3EQm)SbjaX:lElR2Lk?O]a"djD7:ti9Q%[0@b,a
%^ED(-[hrr6RQIhm^X2M-.'hG@X#BCK3QOA\TQ'$)/^Y:?,dul[BUXmaMg+#,Lip#8a<TXNZ:[S?2PWL%$`BhXM"k]lEO=lkl>IcK
%k5dr7T?TR`lIg=XTR%a]lG>8i%LV9j@LsueU,:;'Icm'HTLSQOHbA]JSt,EDi$_*KI?QCZnpF0!0`u0:`fB%R?XsH7oRnN@(RZJ=
%phR;HkUFMZHkY'2?=XNo4Cc^%nrrn3]imjJ*!#FPX.XaD1KTOP4fXlmVqAq3P!G^9A-@Z[R3+0LH*[aGl'\T/""!'2/e7h*=!nrJ
%3moD$2>0.?Ps;;F6=A?'`ZU&;GqPS;4YhtpR)A2hm]dMpJ06$,%UF(0IIZ9b#89GM(S2L/A1]c]"Sb#RTXJK<.>u4R?Y"Sqk0/@I
%iseI;i==dGrd`'G%S_f[o'BM+k/mmHj=>Yg1))Zr4so`]q0nOD;G#[KYlZOO^1\D!SSgS3?eTh=?kc,FQoqX1+$X0!nTJZ-EK+p1
%7<=/($1p2_AnH/'/n(<6dlk_2bBo3B;KKFiGl43t`nMG5=/g=3eLA<U-e;D2g102]mClMdY1m*?CUNC675W.4a6.^'iglaPKYmOU
%%7od_""r)k/Yn_mjgW^p#e,8i[9Lth6%1\Wfc0,-J/(,.F$=99VV/1BLT_28\k=Hb=<.6in+goX\pdY6?,G!(f/Fe2,1)*Hi3Sr?
%&fH<g!BI]ja)=cF2<6Z@2*4*r8(:jA[;H)U")51->nQ"/m'M;h!rBR1U-S9G]gd>2-Kt%Yb%&mp'FIOtG<ZjkNQ8`floaBL-as#A
%mWMjC1nTW6r<2p\f\:kLXb@r`.rY<EF3]C>`nBB?"j?H!WY1WG7l<EgB,'mgrMGGU?;njAp8F"TnT,'5I`?Zb\9Er0$eDiaAtcu)
%#NA+BHK!hXJI0Z"HZm]a4,+p$o;I7)C=I9%lTL+ET[qK:E\=oi>?30MOeHS\4VAA'!J7XUJhe<B?[^1N_I_ad4K`O\Zu/XYo?/n*
%J,e@!?Tio9ok?")9#4[@mWg=hi2=u-[&P<nkA.HkHYN'2X4]`ND/S1P\Y3V2ZJ(gX[5m,![m][,m0:Z;h"$qM9ef2"H;ij-F6\(Y
%mM'<lWqM[0T;2D8pj!>F3E`)#'mWlCG89p@W(:d.We\b'Kjk/^]A<dbX??6qe'7(i4*LF;130X^Eg'Ru3!Y\L6V'O4)rf6tD<R6j
%)D4Rdp,J9Q$mm6ooks%V4t_eW!%VA"T&OI_-r7R)G<hcj1aCR5l/^\hl/6P(GD#O_CKhd'CcD+DT1%EXY`$2;e+RFPCcV!Hrs:10
%'-6t<.GGAYFu%U6UYXVrjbPjT3RlK!-I>bpM6\qN3TB3YkM6]_X2_bd]W9%R)5:o'e$0#32@5h.lmkqL:PIqhkM)1+,U24COLcd&
%C.t*b1$oNVO#sV$YElU-A%j5&XO1c]884?IG*I)cB(ano.gfFe.L:AuHgg64I0?s\j%sB^.H_B_nWPfG)R)mM'OIUDHG*"?lUrh!
%41lhB]O6bi/\YKJEZkW!\Tle*/3t;9AbmUbT..U%2FM4"TuR$@dc+sC/iYqG=3&QA`2O/%+qSEHHuH,RDb'8G5p($:$&H&=?_\:D
%d_ttR54<td>&kL&g22gMl#CA'5d/jhX!q$L0@No.Y>TQ9&9cdAi&R=U=*k5!;g@pGSttm"i'iLg<0KWW5s3\j4J!g*T.LBE/E&+&
%cJMVf+<IN)q5Rp7r!lmtf#bOW#3(MMZn^,-3_K!gJ*9VJ]ge2,Zl*,AVpV&3d-#GY/=W@*Nk5L*)]I_]4@rC9CVQLF_(raQ7&RjY
%WC/ar-Kad^N<"#cQFKl=fZVM@T>hNP%c;@4s4ja[]Uo*EHm@SB9q<s-F1`$&.oGNf`rtV(oCKcM$.t8bZX;--k?.p7%R')/fhm;9
%^r.st$BgN"!`,llM,H]37FA]/2I)@4T-<N/rCj5+#dkL-ah=[hN$+V^)."j;)MC$TWYQTNJFmRsTLGhi=P+oR1pSSLKKErlYPPcN
%ltK8^OU=Du#_;,UksP];6]QI^<KS1PM"A"=in[RQ8KgmbMp1VkqI^)5]\?=!fmOB!;nmZnOE3pdpE[)<W<'[A?en5$L<VFr3:`p/
%@3\Vf,L6(74s\dC*C1bYFa=Sp1GY2IoZAB(AC_$/,"itY"k%'UDXc>6FIc)j(Hh:?j&S&_3<kL,5(G`fOo(cM)^8)Bii&:NjC#@3
%=GnO?m<@We'_3!W)MfEU9H/ksGa4@Eip?/&U*3<+W]^h7dB`ih&[sau.B^+SDW`;R`_ke=LLeYt3fZnD9I7;rSe;q0I"^Y#:^DO4
%*%+05M!3t%EV?]g#k]ro?BqHR,MC^t/G7KO!+;"Z,(cq<Eg+^BYpc82^i2CCgdGI^RN^uF)Vh-d"aT+qe,IJTcSD6;mtH,8OpXJd
%I*ZWm+;'M?SHkr7fb)T5&K(=GbiVAYnFak5ok1YrO\#V[6O5^SYn2\^_E`Xr5#=t#Ad29R7VJ/EO1M9B(S!7XImt%i9G1l[)iklQ
%:0@4"H'iP]lsiga9pLksMM`\J#*<p:,,S7nEjA+cKj^;qgLcU8K^7JMU"X,j)]o4)8?)s(#@S<ej#Bui:21u2^@ZZGSWS+U'b.`!
%lm#[B;#t>AlB4#5ql9<028R[d*9,F%90!Wn`))1eYP0NnnKkIG6pNY%WuGjrEZ-sG,Kr>q[=(L/SN#06VN.Hqs0[J]8<AM9=&l)u
%25k&jGH6/B]&%0_N:<g)!B,=qcX7T=#<co98\FPgE;)dA393Eo__2"9"(mE7X^@3fcT19Z3hhAd5jC0m^A")3?=^t;UG'CrpTsLl
%IFWXM.lrXXBdjqqe8AZ=c#TJOX0r*F?*kZOjMZN*Y,kb;gm'`9K);ia78V+$*PngZZQuL5W\$M*=02cUh9hhP)GaQO<,0[T@'V@e
%'sf@*rBDPsT%Xu#T52]gTV@?&#*iH$13aXOFp8[eZo%Q0s,sKM-!.2XiQR1m0k5>BM383lC3L*U3Qm&O@EnLREEKM1W8suWEBA7:
%e.NYW;mlss>d[&"kb:4,-!)[];,!j1aT.s=9W7$PD*g\CX:t$hP'uo4"Q@,kJ1s2t"F`=hq+6l>\eV_IhJ!PS/>0Bhi]"M\VE-e*
%,YZPm1p%rSKOXX8*,Qjf2>oIP)DG8J$9*8sL"6Ghe9[g]g=s)Q5\D)9^EL2qcb&R3mm]a+_j$o1Sppc5cgfp;nh)U*"AAmb409][
%\.&[[IS73FRNJL%i/m5d//W+lAiZ#;!ngui49Tl]6m$:04*<?@M'@fnfo@W,-j%Nf>RVIJS?O06@?RfLY*92)"PJ1\K7OMM#QR@X
%<sW7X6k)trNC6&!eK]\_N_H5R?A?'8Vg[moL6Ylhjf-YSg1c@9FgNubY`:5kcpT%Bc)$eH$sL<sh]IN]=['1AWs?TG4:RMXU'$dE
%#>QF5j#rVW]FuM3Gf2r2aFjjpd^BE06K"Y:-c*W,6"]s5r=9l@!9X6gqoVcBAK1q^g6eotGV84AkUJjl=Y!&"j'LDr#`8aO%Z0*d
%4JtD98G>`_Q%:MY3U3ZGlq)TmKe3JVN[P#H9t$u.;W!CDh5a$i`5oeb4\.mD[g1a:\B@[bf.nBK%?fE:0h4pmW$i=ABs>Z>'<m"1
%0Do2jEsRlE0jt2d<!B"*Gdp@o+-:;)W<36VZ'"E*OX4c_a7^+HJ3,@)&'-ci6nHFGo4/]V!5gOL//]Z[S^GjJaJ&_ii%6K(oAo+'
%^c%QZd=?2@9S=[jJ<?XO8(K\NqaP0%de,W/J++?"+s=V@DFlddTFL]!g@)[5g\^FF(n=;N_Rln/-7#<?EnaeqQ&$WcHAGQd3lp?c
%Jmf0<6Y/tcqao50N?A4[P?j0p/W%3eM!r6gXe/b_ni@!eZIn8:Y$m/F2!Q<Q]jq]qpt"-?8\Q2C6q6KKq<;^X,%maZiV`eQaFK`C
%^9\"5<%E.pX1?IVP4e1WcNHDTK&pssLcifa!K("/p>?9B,JTn+[*_@d0IoaMW^p5,AO>a>:h2(t@\"et;jS4c'-J%+-jV2%865t/
%A19<9,ul.E@\T;j5<Z8sX)+Wk"9BP>V1sp2HAHO<%-c[m.tnO20S>UT6=VN:7$]dN$KSY<^,!-IfVW3V0Hf$a&K,jB]Z!>Sq+lpE
%Gg7oiTG'#sIfPgigP^^i7$pTZi^?(O!JPs[*f62RJ314:V"eW0+%<%8[Ohg&Q@g=:8N@u2%-=OGXVqm\/u;*/n?6th\KI^_8EFie
%h@NA6*Kt#!XEFD:O=_N4X*&sB"0ud4hG#-L$`2Tk!:g?.NS'?s:(od6_>m/.==a$M!lg4cf1("fMJ9/S*A=mo'S"K[(rq5u%6Qip
%H.[Dc$%#*CG$B78+j*nh&B'Xc<P'&Xa,Lbf\(E[aBB6^>Q*m2:FW^i'JcL?=E3q=Y&VpiPZQ+E!aioD(F[=_$b%Ef<KHTuseVWB4
%W=FVYdh4?6@3.-9c,5)$ISh9V'"m#`;BX6&8DR?Q0`8@HpXC<)];aR;"/:&M;aV#Ji-)?RUk'8jq0$#aGAJJOXH61TUdl9t_R>&X
%ElI)&Vh%4frJq+&p'grZa@5&?D<@VK<$=9C7WnqEj=,X;KtRYu9M)k42\7,XAM0,,Z'Q+*Z;`;Eg(&IMB6htE#YA##n^nW[,`(DJ
%i5W=^(_dJdc)=TC\f<fK4V^[G?sJ7LTVo%\mg/QmaIrZ,V.DJcHN;!%UfCVhJ^D\Kc9UZ>(aMK46,m.:)I-Q_UgXE%DsI.YXn>';
%/(2=^7<XPTkbh_)6@ghki8`3I1ZmZ;_p7#X&[[WecMLF`bCM[!6K"D_D@)J>g&t&HL)ckU0,)IrE]"0`[&H`<O*(i;n9Y0U]H]hL
%`"iK;>WHSYX0n-O#)9pc>?3i49*#6"_1Y)XKC]V*e,V%Y1j;!2]Tq01V$p$.k$`+T6NiWZpCVBKMYOTACe-(J*n4SKT`%V!cK\MW
%=t#/=?R1hmj9Bn<X[XkDhkH/:0JU[2iXiUW4WM![>XaNL?PcRXFudcTYh31drD!FT@PoiZBp<-Z<5[DXP5?.(%V<)sqRD_@]K;L2
%FlfG,GDet/Abm`i_rNp0L`^fX[BKX4:YnIH;`AHGO^b4,';\gI+JlHka:B:VHL[e[Vj.X(Vh[T0mRA*c)D;aXK''1r]MumI%]Nt]
%4L]!I4OgWV7AQ@j5lcR4[W+VkdjAIMB[h4l/YdGd+ZhI1`H&?;_&ZFMfX,(:Bci@olO8c"R;E8%Lj'T@`R9@E)h#oD>*m=^NY.(>
%@?XnRr#"U7>!Wd#cpAqrA'MtI%k&4:,.o5L:Uo@rl>.fu1KR.CWhG=)ItEoQlFkuf<1piK1c-<pYYcQEp*-W3PIV=)@h7@M\c<qH
%IIARuk7WnV%EF"u%r0#e3Tn(&N5<Q>ns2EWD'B=H]c`_Wgf`T$%Tdp[5\u_!Go/NL@J>'.@6&em1=E@kI:pikXf$aTfg<\L-B?al
%I+,@1AS?]_qZ)<0o];hnRm_l3c`Vd&mRVs^VVR02-6b+SU%t3h$O.-TCtoGBPp1[a6*rKKJ6:jS[WI-Z;4plFaY"rk)MR/<rU:u3
%HVt(nA>7DMCoEXHa_g96R8c86P1F-7<+[f.o#SJ:&K<2;^+8VChC*,"_*KOYI%b2=/oM"->,^kIG(VBFfg?dqZ_"(WBr$^H>9!BO
%&pO/e>/bP`LY+jqW0VW:9nLdth$MCj>EnX1#W&1(CiSL^@\4Rf6Znj%Xin*A4'.cRU?t:bZ9,s\Z)k\_p+EA,:^_o1=lMEC"DqGD
%pSgDa<'i.MD$@fL_'E!9fls>+O!nDM(TaZ?WX\=7'U+cGM&lF#]=Wr7+.0r$i#^&19kbm7XQbBeB^4XY6)/s*KVMJ:PTS[)RQ^"s
%%uo`]:"!j5aRV[9g'MO&cOF(O:7SbgFX7@jJF6N9%8IMo!+H0eksiu1NQ94Dabj;XCh9Qc>s,j5%rdC^0s*^j#g"AfY*1;@i'9(g
%b/3g'jto+m@tD+W6_Lb-(jeu.MSa?cUft'S!DE<m5P)0%$jb7r>ns.aA"gZ5'7peSgsB1/pH^7]7tke6'<.$5]=)Q!d`*36$l%48
%VDs:g$Rmnk1/]VZDf">l.gGR#EklT&m4]$f_h>:Pj,qq,h#2auHIpO/#WBmNg]uc>2E(6HFr?6ujX]%lfuA#uMJ(U3mLWjo8L'lF
%,hgn6;%2mNlsjiOQ[+DA'KDRlNj*#TIDikjP'rp^>nsZ]:ae.6>g=S45%b=9\7t^'Z8?F2'W%B8"Ii]I@mY4;1>7J;qE36<&HJrq
%0G"R'"maZGMA@:?#X!m0m`"3.&b&4Fa?n((`q<F_C9YX;:ptanF^XXdE3"p.0L$g\R6"q),udVk'Y#AU[aSl-(/*p'G8OEHf>hs/
%%iQpG*R<YffXG0-`>.;j`;<-]B71D:5Hssb%W(Q.rQj)pIs:d=^2Di?KCC[<&DisK^Ha0ph4a<GF!qH$973#JooC+H>C"@YkO8Xf
%1A>LX9#FBEm)s9#65"0hH#2G"nI9B>OR\1m$++S#DQ<d+R_C+/\MO%<g_]Vh0G="jTTX@7U#DDZ0+-l,<oUP(Xan.@=c7!Q/%<E/
%V$E3"Thf0$Gq_rn1!**=[sB69InqKh1i>hPQO#h)98*%DB:nXpZhr"CchV2$rV"CsG^JP$g#4a$lu52aroG/JhiC'QJ]FEB,JIO*
%F7,`lb,K+3ORj@3Fm394_$#dg:X]i4(%5jn'HCQ=_&:1,<m:n57cjNHm?G(J<#Tr&*YteCYT;li!8%c!ej]tk7*kB>U23M$'RpNl
%M(DFI1#8[i:r)uug>R`D.lJrs4?Y]q8ed>PFg2uN@4R%K2I&&c(Jel"X_;$J]X9^Lq8%JfVWju_d8nY%6$inn#rF#Jg?BVA`6%XX
%I8?HB$Nbn@E\*`br4\H<'iHLd\?sJ9].E'GS9VZII0q>t`eQqSHGhtX,=i5!+scFiXr/27rTFB0RQ*Ugh$J+GK%un>G:1Jf$$(6A
%gmoR3-ck*MEd*,jSKL-g-cl7jrYKZYIs68<K&'`oSg`Lb=&HEY/bLuhoKCKu`.'9\cfXYq0>:\7=FK`$MT^lL/NU#Jpi>&)`=_8K
%*EU>^]'?jnflcHm9!>k1V"CYh$hCUi_F!3m-^HB4er;PO4mg</9:p<;Q$dm^cfj@_SVJKmj4)7PiJ4ag/h4Brl(Xo1^+LnGlKp&i
%(]7Q<Em`nn.V$<XV3uJSlh-D`9\j+l?>t]td8cMM'jYm<&SY;%@RJOAN\ThdWb[R8]AsqNpiXkFp6#t\rFQd.ml@/+X1gA>]')<;
%P&(''U$+KI)@(t&o:_GJjsscFJRdm@BJ54YeA52E"W&+J.UI,#;8G+K)b5HcE4"kMk?MjD;L-77-;g\-ghd.kc8jZd@fOpk=5a<i
%*/=W&o#>ZGjY_N-LQ>d5aOR#_I<$<CH-%SWH_!%/gq^+7T"12@@.(=9pla)9V:XOH.)"uWPJTtq]39=$H&'i6m^obt>BA_^9K_XX
%HVlc"^:e=[S9GL?fDU%E^$=R?Z:dBqU$,'$TBp&hrHp$,mcbZmFkYIA?I:_l!?8c6"tZLRkQi`6Z02NG*+!^kNht(4",hQ.3<Y7b
%/@ksS2P,$u^*Fc7)1q^o5B'At5N!S&/RQ=X+L8rJW8\8U4(Jo]>_i(r0eEF`Y:mXjDe$YB`k@1ia1hBjk?7@X>2IW'&5RX!"^h-^
%e$_"C(E[;/+)BThq:33/pVsF5@?7Td?*<`M9fpOT(QR>%?`O[_.X>i8pc(E;Go6*!IE1J0P$uHk'*Fu#J9__eAr(.JDTkSqcTiI[
%<ltTca`U$IIET/EBI7BG&AJlsGa,Qkf&0DLF-gl'&mDmYkWhN)#R>cT/Nm&\g('!RPZ/4Nl*`M.bRHWJ6g]fTE1H8\mb;#knF;2`
%^&RL0bnrDIghY$Tq(,&CD+l93,dQAN;Sn`fpS<orl>V'-EXe8I_.5c*!#QtAjcQ&B/E:2s"?^H8"\`\3G$uHFD1!K==f9g-?$'i6
%,_8Vk6$86M"9ZMgpjW">n10S('KK5pAa6P0Dr3M2cB;8R[jc/.XJs*TbVf7HUP/A>B__':NF&.5B1\nAZL'[jrYUE99M6ur<Z@rZ
%iODTdU(o#u8IsCL%KDEtR4O1qY5I`*n%7m)RI&dZ*)X#9&mIM%>eB"h[CkK4akL5tfP/Um\W2>2.0piS"8>Yf%Vt2I1(?A:EO0l%
%jFP0fK$2%T5t!c8&aC:rOEZ.;]PB`[*T2aG*?n,%"t=`Coe=R7g>YB$PJ@"^KiGu:,Q)"#Si?1+CHEM./FeI)EkJX`b=M'Z1I0C6
%$,20%^9P$FB"73dDWd;5@&KJ3fQZ!L^%$J65V"(fcqs?GN=D@?5@Bj3`0\tHUK*@2N\0u`!hq+%LoPUX0SH?\X@rjkn8,%Rf*4ko
%B>_\@n2OhPGW'*^Yr:er\M68t/OCXu%2LY,Rpc#:".?6VT/ZNcW;n(dh?CinfQ\p.A7^+?cpNP31_DbJSB-N,Z\[,I7h%M>/0le5
%+AEsqWh_nN@:-'*#V[/EP5XpbU]?Jq,^Zj;aK9uk$PCa;;.'%Be_3)]qX?<\_Ku^6heM*.\,Y^=J,A7b:OiAefACs-.f4XDG7VIe
%rHE`Qj>d2<GMiDegTR4KbMU)2qCc3(f94P]m_Aepcd.+@gT0qS[hS?C^]!nVrpqB;qt$GPrni5(p93AT2IKaXGE.%ERQU&@#^5>u
%i-Cajo@pJKp+NgT^]3a!YF`N-qK47GCQeS^7a8]3'_'NUK/<4Gj3.Jtc+!`N07R1t95e1no9#Qt8n79P"!5S!/U#C/C;l^0$b+(A
%g<fjN?Til8rAXcR^O1aMr9(9_o$t@eek1]IY,YNVro7);IJs)g?iJMUn%Q>0ENP<3IJRTmY+=iLX<eNSWF;VR#Pa7dUk1CN$$]0S
%cA(r]NqTsN"n#"QXq^=snJ@i4[Ate@r<eS92s2IsYsWhMfV9n#@;>O-s0*C+l8.0HiGb!_:q/M14@_@j1u=*))WA@?*IQA0hoW<d
%]3(a99XH1!(55W1fCk)JKBfk1cRK9"/4Ue`dXnD+]7\0:.;RVf]39Uf8gg3BA%8#%YL0lL`6tr59&nq%.Il@ee[Y-9S+'X1\80k1
%f!m*gi\T2rg'jN$8f3j-<N0E'/-ks7\eML@TJ-[Y<11)_h!NJ#<kN4e]2h%*LO+*c>s.8m8MZ/qb#KaEf=Z[/^A-&@JOR\;*fN]%
%MSe_q>B,,Gi:bR1b1@JLmi^Pc/b\fr42hrD2Z`@Y4<J4L_.A:Q^o#N;plbX1<BmWKP%FSf8(6.Mh,WC\QTcA&L(s^np^@JIUN%E.
%^onj_5("(gN_?.Xme?dCB/BF64I\@&e'paRFXK9\0lOS9,a[$U3\UiNo2D^t@W-i#!KRU8'a.OBgDDZ3'G)V'6$n\TC"St50KIpO
%O^k!fip'3(]rcj3QI5S,OXJ]<MW+2Ga(9,>0esn]^bJKa]E,DJ<)^\L?_8(aL=GLk_`go`l)1o?qVsN\Up.T5iN.pC%5\_!rk`d&
%]p0UUC>Nt_%;*SI7J;[?iCR?BquOK8BBf4XB#PW7Co]]U$]V9QE@[:Kg"7/<5/K]Xj"ttSV$UJZdjR<*e/CNMX&[c:[cZtoK"`Q>
%FJ?#TH;8+&_QD[#.GpE]>q(7-8pPjcd5HHSB+Rm8GR5_nE0o2qrXsCe!8rX1<7V2d3))[!oR6]47&?Y`B!#1t\$U0]Y$sJQATtf0
%_8B7'NnYkji#ZhoD"6qn+kS<"K\JdiToXfFc03RaR4VAD4"ER>ZO5\1!tqg-LE<X:E6S[WoMM?b<ek8Rm:;RS=H.daZ0QPjiNQS"
%<<dnX=<83s%r&\X+%V\$IdFFuIlK,qH>RW<76[G/cUTHCiM8e9ne,a5N15F&ne7j$3BFE[*kQ-*QE/.6:jc:,.F)8WGH3p!([alc
%2*QJ[P<IbjPuGU*AjeSn>mlR7VUTg#guS4)\7uEV<Wj@R#<rHlg-5*4Y;3bjW?\6*^(]0b]L]tP_HITSRRe9Kg0d@Z_:#IZ<UY44
%kV0a8A]P`(#5AlQE05.&&hoBuBRrX>W,[n;pG"g`c65)fAjU;oMgRNIFMf-m$GLNU&s4F49u_f2M*+]K,ps_oL[T7d8?0OZPE"HV
%eJ9\+,i,^&^&Dh@VB?pjF-oNr!5*`//*1I4$>ALg'(.'dpIchh9f$;?CYmr1'q3@sW^N0.60QH&CWH9a[IZI$&G-!TlF9;f"t4!^
%)#1dG,unU'2%QU+BZ=c%MnDO,7;bb2<qn6mQT3hKrHXtFPPuQRdHV(rAY;\d^Xa4C^!Fm6I`KEkWPM%iig<>E]Y"\!Z&g>0l!cG<
%J9QR7Q^Kf3W<)A1h2m`&@rHt07(+%<4WPurEOcE#A.51lopTQ:%[l4reFkB_,i35!<WB/o]N'(ki,i_Ya=tDB#Qa7(N>*eO8.9M8
%/<StJ?(Z'?_f+]5Ffpk=r1<MDV[d1#-5HY/IM1NM/LqRs^i,a>[8o_khDluLCU#'P<hd"^=8XJ9Og#/O_c@ASp]+n9HGa0]poZlZ
%RD_LA;)jVQS$;V*l-Ml\>+0'0YB?mo<-qBU-;VYI!'t`1fI-h93WQNn$8SS!D[n=gc_1Z?!AC`^B$h6tV)'XgQBFlLf<bH%bOr5,
%`H63GNU8LJ'uh?&L&D.TduG8;d>k7@V\]k5.:jc\2Oe;T7>;]55&4,9<HY+E36]J"dmD=b_6#2F]kZ%K(1^O?qIcr%[Aq+]?XBB>
%,mO,a/[VaRUkTZ9PP!4;e4GOFU,@fQk):gT5[>1GQ>GS=U.(o0LcK(3`nD"Ye*9M)&\U<kY@MeXiJ9a9)?WPkNQW!_F8*?3XU=#u
%d6)Gc_UXu#"&$bOr"l8<mo]IgFZs/KjS1*>N#?OSe$q_a>&`*d<+4#dpKh0r)Me"6FGe+b@62G?[4\$2ZX/tnEdF,<kBK-`olJp>
%/(7(=l_Wjr*<1\m;W88&IW/k@XR%Q&N/XG-=Er>6YIo.6`NU`W_n%h"o&.E#Lj!2`Ydg6-9m'rNRoB4Ietn8s:.m0oJ^%fTD"JW/
%0n*Ap>,2-_=^Ic;(LJdli<NY:4D\6h^VLf6`Af+Kmu@I%pKU2bF?6-AUP$O\dqYn3Rb"#"kMT[S_s)[NaHQ"iHoX0eJ6(%2*/Eb%
%]C1b"6mLbXRKEe2)H^t>;dlNM:7R%YUg?-@YJeKS#*fFkor;K'hr;=`6W;j22ZE!QBb[QU3H/gn=_=bSZ`Q+InpFSK006DUi%MfL
%A$MWX-^ia:p1ZGF)Y//CK/>*[re*HrNlK'im_5Z\Q0fc5T'"N]LW5MrbJRr>35hobXt,,qP[6AZ3mb@5%BCH#<_M9/[[,EL\Fl_I
%<;YFM\K97:qTMF3dFXGM%i*EOT&6b)N1\uI/5Y70?"Zj@,_UqMmMSDAg8r/)FD`U.@Fn0XPY>&X\n,&&e_<uk;Ebu:ZLK@Phs@MW
%BK3_47",8#pg`N_BK">10a&=:j%JBUi6d+608Y"=Lhi-@bc0<eqFU'mFhY4K.Gmc;H$-bVg,(]mZ"c<[NpPgg"Ubb#fl<U[gkQ'1
%Ek)@^W_%SqZ"b&H?nM-D4EJ'cH1l^(rC^'Ob*CJ]iqdBcX)?c4L"%HQ;6bOKl.i:Q5i5RbXR&)s2._-ggZmPGhP'dClZ0,iH<`*U
%.>&^ZD>6^E:D#k6j!bV><TOo,509hQr$kE^#gtP&or3$uM+#8"T@3$RDN`RCGG_`MV7r(;=$8!LH7DEWS&<d7dO+dJ_KTD6JUoH]
%HL[OG`FUs,>)2B5Xin\!d`9n/-@PCC1$R1"/du!2BfT&iYn^$6V;qb4eOjk>Rqa60`D8X<cYuk0gbV&mCWS$.Wl=%aI!s7#Ej_dG
%7e4H/B]h;Vos-dZk4">tSB;'CD?=H1\>6DQ'(H$PTHRN7ohlC3H#8)R?oj*:V%2A%X?bR\f[tu4lUPo-,iP^#5]%"!"4D>-^OWs<
%Oj+&-K8*n$\W-'V+Ik:^R(XFBH->/*C532<;*XQ]0'3W^-qi`LogffA_=N!!Nb"WmGaoD52TO#%`FZXfJT4CqOi/Y/+gSmVAEHDZ
%7ma!:9;J/AnbAj,3.J<=W$>j3nOl`T=L%GT[Y"lP;BOa<m24^d`#[?@n^c24l?ipGK($jFiON*h59pST,+2J7#>11U1+NLO7%+QK
%nQ&Z`(PceB]uc/9S#pk9IF``%W]CQ/H?M%g`;lMU#5G`"%[#`sK"rhC8<Rb>0ie\+#G"!*HK$qZT,+aCP.g#i(m\2?;UVkL7"1$K
%L0,$'(0$lrqTN,RK*nWYNbBlB+>/p@*<!@H1?j;l#@8cm6!29Ea80GVo<#%1(oL7iUVm/)UBMoSOW#XZ8.TfeOWq88mLNEnd1/m9
%I#tK4"pCWshB50^+eMEF[&lk20!ck-5-qa/m7a^_"/BZIOH[Q6LL*p!2L_1#"_$)arT^#_Y1KZ`,J5=,#<E:_.8#D0XjBB[CP`tn
%mNOe(;0qiSM:.:b(7Vkc>n'3s*`hg&ZsYBL`0Q2S=qKii:-D*VbP%?X4bC:MXf@Cpq._#\),ssYJl7@Adci2G&ME<Jql"YM<c^F:
%\S+]n0YlkmJ>.sTOCe)I.7CHWLiLdD3r8IEV(_26OQ0jcWs0b",@Wo8T/.jl,;O,hR$!u!'X8k(G3Uk-P-n.geWE_1$:not/V7"<
%;(6-j7qseW,YL2L5AQg.<F(Z*/mAu]%.H8\LhnY?6Y'th*[4o`'Y3nll3!4aTKh:gF<t?)7/CK_,].%=/A<rd\CRT^&EYoS(VI6A
%T@#]\X@]FlL+!Ao+RNdF($[[(bi"]/hI&XZ>jGJgXS'9XF?RLOHqifY^um+sU5QAid9N@L9!6S%E.k:LmE31us/fHRlte)uL*]E;
%6j;Qf#<EA[%l3le\=)4fp.cF"Yb&1Ap!51ebjh^5Ng(<;&LJW:8U`hVWhRVs_pDj]MU4o7qId5-]rLBQ5.r<mbLotFIRmTtaUgZ_
%o)PC-[)gc1WQ!"a,.>SR'"MAln$;p>IG<ZJ#41$Q5$C]*&4aT?O]bP6QJ$r0fX?FYP3R\;<AtJF]FEd-cKm8`aCZaCgGKg_D$>l/
%]tisflc0Ylpk*lO$M("i>HhbV2GQ`qMOJe[RA5/[l8qminK^uZ1`3&I"j4&qrH7>U<-uqB]SDXGT?=:9S5'9dZt)>HY3AFb=COjR
%DKYeg(Tuil*;K#:-*M6&TubP0<llU0mmQV:k+RFiQ-;Tg\lXb1[-n!ee%`KW>ltJGUk9s=j$=&[_'emE4Z(YodG>W*03ci(/`X;(
%/`S.([lZL/P=N&F[Y?HdVi@8?2BX_^Fj*LOfrC=o?%F_?hZ7Y5`XV.7P:VmQq`u[9mpo3pIobUYp8ShTXQL'[Mf,gn.9/6"gKN*]
%EpHj)XED6WFZm`KY5&/GY2D+C..4>TC.Q_uHBbah'oH7C+h!s^q$dBZ7;kXEd@^mpisif$(+MZ!c@+&;Z=C511]^gpV,ijNRZqou
%%]!0+#MWH^;URX-5O4lD<?9(=Q'*"2Y2D+Ci1pBheG/%HAU<j6q&2\>8]e+5r8YPi1;E^7q!pXsp\!QJs7X]EhRk#iMuW_*5C`9S
%r8jtt8_s@A=9&3MYJ1&!iN)F]KCe#js,[0OnBZU[k-':3o3]4Wq!5]mq-S]G:b2%S(]WG)s3%Tqp&>+K2o9/~>
%AI9_PrivateDataEnd
